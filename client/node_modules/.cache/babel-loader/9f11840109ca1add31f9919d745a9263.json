{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/AdminPanel/components/UsersTable.js/UsersTable.jsx\";\nimport React, { Component } from 'react';\nimport { HTMLTable, Button, NonIdealState, H5, Spinner } from '@blueprintjs/core';\nimport { Table, Column } from '@blueprintjs/table';\nimport Client from '../../../../Modules/Client/Client';\nimport UsersTableRows from './UsersTableRows';\nimport UsersTableHeader from './UsersTableHeader';\n\nvar UsersTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UsersTable, _Component);\n\n  function UsersTable(props) {\n    var _this;\n\n    _classCallCheck(this, UsersTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UsersTable).call(this, props));\n    _this.state = {\n      users: [],\n      isLoading: true,\n      errorMsg: ''\n    };\n    return _this;\n  }\n\n  _createClass(UsersTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(loading) {\n      this.setState({\n        isLoading: loading\n      });\n    }\n  }, {\n    key: \"resetErrorMsg\",\n    value: function resetErrorMsg() {\n      this.setState({\n        errorMsg: ''\n      });\n    }\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setLoading(true);\n                _context.prev = 1;\n                this.resetErrorMsg();\n                _context.next = 5;\n                return Client.Services.UsersService.getUsers();\n\n              case 5:\n                result = _context.sent;\n                this.setState({\n                  users: result.data\n                });\n                console.log(this.state.users);\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                this.setState({\n                  errorMsg: _context.t0.response.status\n                });\n                Client.Notifications.alert('Error while loading users list');\n\n              case 14:\n                _context.prev = 14;\n                this.setLoading(false);\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 10, 14, 17]]);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"User Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Role\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Role\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Action\")));\n    }\n  }, {\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.renderTableRows());\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      return this.state.users.map(function (user) {\n        return React.createElement(\"tr\", {\n          key: user._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, user.username), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, user.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, user.role), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Button, {\n          minimal: true,\n          icon: \"more\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        })));\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this2 = this;\n\n      if (this.state.errorMsg) {\n        return React.createElement(NonIdealState, {\n          icon: \"issue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(H5, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Something went wrong\")), React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Cannot load users table\"), React.createElement(Button, {\n          icon: \"refresh\",\n          minimal: true,\n          onClick: function onClick() {\n            return _this2.getData();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(HTMLTable, {\n        fill: true,\n        condensed: true,\n        striped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.renderTableHeader(), this.renderTableBody());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) {\n        return React.createElement(Spinner, {\n          intent: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.renderContent());\n    }\n  }]);\n\n  return UsersTable;\n}(Component);\n\nexport { UsersTable as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/AdminPanel/components/UsersTable.js/UsersTable.jsx"],"names":["React","Component","HTMLTable","Button","NonIdealState","H5","Spinner","Table","Column","Client","UsersTableRows","UsersTableHeader","UsersTable","props","state","users","isLoading","errorMsg","getData","loading","setState","setLoading","resetErrorMsg","Services","UsersService","getUsers","result","data","console","log","response","status","Notifications","alert","renderTableRows","map","user","_id","username","email","role","renderTableHeader","renderTableBody","renderContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n   HTMLTable,\n   Button,\n   NonIdealState,\n   H5,\n   Spinner\n} from '@blueprintjs/core';\nimport { Table, Column } from '@blueprintjs/table';\n\nimport Client from '../../../../Modules/Client/Client';\nimport UsersTableRows from './UsersTableRows';\nimport UsersTableHeader from './UsersTableHeader';\n\nexport default class UsersTable extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         users: [],\n         isLoading: true,\n         errorMsg: ''\n      };\n   }\n\n   componentDidMount() {\n      this.getData();\n   }\n\n   setLoading(loading) {\n      this.setState({\n         isLoading: loading\n      });\n   }\n\n   resetErrorMsg() {\n      this.setState({\n         errorMsg: ''\n      });\n   }\n\n   async getData() {\n      this.setLoading(true);\n      var result;\n      try {\n         this.resetErrorMsg();\n         result = await Client.Services.UsersService.getUsers();\n         this.setState({\n            users: result.data\n         });\n         console.log(this.state.users);\n      } catch (err) {\n         this.setState({ errorMsg: err.response.status });\n         Client.Notifications.alert('Error while loading users list');\n      } finally {\n         this.setLoading(false);\n      }\n   }\n\n   renderTableHeader() {\n      return (\n         <thead>\n            <tr>\n               <th>User Name</th>\n               <th>Role</th>\n               <th>Role</th>\n               <th className='text-center'>Action</th>\n            </tr>\n         </thead>\n      );\n   }\n   renderTableBody() {\n      return <tbody>{this.renderTableRows()}</tbody>;\n   }\n   renderTableRows() {\n      return this.state.users.map(user => {\n         return (\n            <tr key={user._id}>\n               <td>{user.username}</td>\n               <td>{user.email}</td>\n               <td>{user.role}</td>\n               <td className='text-center'>\n                  <Button minimal icon='more'></Button>\n               </td>\n            </tr>\n         );\n      });\n   }\n\n   renderContent() {\n      if (this.state.errorMsg) {\n         return (\n            <NonIdealState icon='issue'>\n               <H5>\n                  <strong>Something went wrong</strong>\n               </H5>\n               <i>Cannot load users table</i>\n               <Button\n                  icon='refresh'\n                  minimal\n                  onClick={() => this.getData()}\n               ></Button>\n            </NonIdealState>\n         );\n      }\n      return (\n         <HTMLTable fill condensed striped>\n            {this.renderTableHeader()}\n            {this.renderTableBody()}\n         </HTMLTable>\n      );\n   }\n\n   render() {\n      if (this.state.isLoading) {\n         return <Spinner intent='primary'></Spinner>;\n      }\n      return <div>{this.renderContent()}</div>;\n   }\n}\n"]},"metadata":{},"sourceType":"module"}