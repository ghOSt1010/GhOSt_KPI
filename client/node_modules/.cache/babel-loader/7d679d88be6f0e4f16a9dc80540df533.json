{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Sidebar/SidebarItemLogo.jsx\";\nimport React, { Component } from 'react';\nimport { Popover, Button, Position, Menu, MenuItem, Icon } from '@blueprintjs/core';\n\nvar SidebarItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SidebarItem, _Component);\n\n  function SidebarItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SidebarItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SidebarItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: _this.props.selected,\n      link: _this.props.link\n    };\n    return _this;\n  }\n\n  _createClass(SidebarItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          intent = _this$props.intent,\n          icon = _this$props.icon,\n          onClick = _this$props.onClick;\n      var mainMenu = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        icon: \"application\",\n        text: \"About this app...\",\n        onClick: function onClick() {\n          return _this2.handleOpen();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        icon: \"applications\",\n        text: \"Apps\",\n        popoverProps: {\n          openOnTargetFocus: false,\n          className: 'blur',\n          popoverClassName: 'blur'\n        },\n        shouldDismissPopover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Popover, {\n        content: mainMenu,\n        position: Position.RIGHT,\n        minimal: true,\n        popoverClassName: \"bg-blur\",\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Button, {\n        minimal: true,\n        large: true,\n        icon: icon,\n        fill: true,\n        intent: intent,\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SidebarItem;\n}(Component);\n\nexport { SidebarItem as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Sidebar/SidebarItemLogo.jsx"],"names":["React","Component","Popover","Button","Position","Menu","MenuItem","Icon","SidebarItem","state","selected","props","link","intent","icon","onClick","mainMenu","handleOpen","openOnTargetFocus","className","popoverClassName","RIGHT"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SACGC,OADH,EAEGC,MAFH,EAGGC,QAHH,EAIGC,IAJH,EAKGC,QALH,EAMGC,IANH,QAOO,mBAPP;;IASqBC,W;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWD,QADhB;AAELE,MAAAA,IAAI,EAAE,MAAKD,KAAL,CAAWC;AAFZ,K;;;;;;6BAKC;AAAA;;AAAA,wBAC4B,KAAKD,KADjC;AAAA,UACEE,MADF,eACEA,MADF;AAAA,UACUC,IADV,eACUA,IADV;AAAA,UACgBC,OADhB,eACgBA,OADhB;AAGN,UAAIC,QAAQ,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,QAAD;AACG,QAAA,IAAI,EAAC,aADR;AAEG,QAAA,IAAI,EAAC,mBAFR;AAGG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,UAAL,EAAN;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAMG,oBAAC,QAAD;AACG,QAAA,IAAI,EAAC,cADR;AAEG,QAAA,IAAI,EAAC,MAFR;AAGG,QAAA,YAAY,EAAE;AACXC,UAAAA,iBAAiB,EAAE,KADR;AAEXC,UAAAA,SAAS,EAAE,MAFA;AAGXC,UAAAA,gBAAgB,EAAE;AAHP,SAHjB;AAQG,QAAA,oBAAoB,EAAE,IARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANH,CADH,CADH;AAsBA,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAEG,oBAAC,OAAD;AACG,QAAA,OAAO,EAAEJ,QADZ;AAEG,QAAA,QAAQ,EAAEZ,QAAQ,CAACiB,KAFtB;AAGG,QAAA,OAAO,EAAE,IAHZ;AAIG,QAAA,gBAAgB,EAAC,SAJpB;AAKG,QAAA,IAAI,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG,oBAAC,MAAD;AACG,QAAA,OAAO,MADV;AAEG,QAAA,KAAK,MAFR;AAGG,QAAA,IAAI,EAAEP,IAHT;AAIG,QAAA,IAAI,EAAE,IAJT;AAKG,QAAA,MAAM,EAAED,MALX;AAMG,QAAA,OAAO,EAAEE,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPH,CAFH,CADH;AAqBF;;;;EApDqCd,S;;SAApBO,W","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n   Popover,\n   Button,\n   Position,\n   Menu,\n   MenuItem,\n   Icon\n} from '@blueprintjs/core';\n\nexport default class SidebarItem extends Component {\n   state = {\n      selected: this.props.selected,\n      link: this.props.link\n   };\n\n   render() {\n      const { intent, icon, onClick } = this.props;\n\n      var mainMenu = (\n         <div>\n            <Menu>\n               <MenuItem\n                  icon='application'\n                  text='About this app...'\n                  onClick={() => this.handleOpen()}\n               />\n               <MenuItem\n                  icon='applications'\n                  text='Apps'\n                  popoverProps={{\n                     openOnTargetFocus: false,\n                     className: 'blur',\n                     popoverClassName: 'blur'\n                  }}\n                  shouldDismissPopover={true}\n               ></MenuItem>\n            </Menu>\n         </div>\n      );\n\n      return (\n         <div>\n            <Icon icon='circle' />\n            <Popover\n               content={mainMenu}\n               position={Position.RIGHT}\n               minimal={true}\n               popoverClassName='bg-blur'\n               fill\n            >\n               <Button\n                  minimal\n                  large\n                  icon={icon}\n                  fill={true}\n                  intent={intent}\n                  onClick={onClick}\n               />\n            </Popover>\n         </div>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}