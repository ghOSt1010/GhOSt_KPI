{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Table/ProjectTable/ProjectTable.jsx\";\nimport React, { Component } from 'react';\nimport { Table, Button, ButtonGroup } from 'reactstrap';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free';\n\nvar ProjectTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectTable, _Component);\n\n  function ProjectTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      data: _this.props.data,\n      filterName: _this.props.name,\n      projects: []\n    };\n    return _this;\n  }\n\n  _createClass(ProjectTable, [{\n    key: \"componentDidMount\",\n\n    /*TODO:\r\n       -- Function to strip the data into the table values\r\n          -- data structure : Headers + values\r\n    */\n    value: function componentDidMount() {\n      this.getProjects();\n    }\n  }, {\n    key: \"getProjects\",\n    value: function getProjects() {\n      var _this2 = this;\n\n      var URL = 'http://localhost:3001/api/projects';\n      axios.get(URL).then(function (res) {\n        _this2.setState({\n          projects: res.data\n        });\n      }).catch(function (err) {\n        alert('Error loading Projects table');\n        console.log(JSON.stringify(err));\n      });\n    }\n  }, {\n    key: \"setTheme\",\n    value: function setTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'table-dark';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"renderTableHeaders\",\n    value: function renderTableHeaders() {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Delivery Type\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"SM\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"OPS\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"CIM\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"RAS\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      return this.state.projects.map(function (project, index) {\n        return React.createElement(\"tr\", {\n          key: project._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, project.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, project.status.status), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, project.deliveryType.deliveryType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, project.sm.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, project.ops.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, project.cim), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, project.ras), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"fas fa-trash-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        })), React.createElement(Button, {\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"fas fa-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"All Available Projects\"), React.createElement(Table, {\n        responsive: true,\n        borderless: true,\n        striped: true,\n        hover: true,\n        size: \"sm\",\n        className: this.setTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.renderTableHeaders()), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.renderTableData())));\n    }\n  }]);\n\n  return ProjectTable;\n}(Component);\n\nexport { ProjectTable as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Table/ProjectTable/ProjectTable.jsx"],"names":["React","Component","Table","Button","ButtonGroup","axios","ProjectTable","state","theme","props","data","filterName","name","projects","getProjects","URL","get","then","res","setState","catch","err","alert","console","log","JSON","stringify","map","project","index","_id","status","deliveryType","sm","ops","cim","ras","setTheme","renderTableHeaders","renderTableData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Button, ButtonGroup } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free';\r\n\r\nexport default class ProjectTable extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      data: this.props.data,\r\n      filterName: this.props.name,\r\n      projects: []\r\n   };\r\n\r\n   /*TODO:\r\n      -- Function to strip the data into the table values\r\n         -- data structure : Headers + values\r\n   */\r\n   componentDidMount() {\r\n      this.getProjects();\r\n   }\r\n\r\n   getProjects() {\r\n      const URL = 'http://localhost:3001/api/projects';\r\n\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               projects: res.data\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Error loading Projects table');\r\n            console.log(JSON.stringify(err));\r\n         });\r\n   }\r\n   setTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'table-dark';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   renderTableHeaders() {\r\n      return (\r\n         <tr>\r\n            <th>Name</th>\r\n            <th>Status</th>\r\n            <th>Delivery Type</th>\r\n            <th>SM</th>\r\n            <th>OPS</th>\r\n            <th>CIM</th>\r\n            <th>RAS</th>\r\n            <th />\r\n         </tr>\r\n      );\r\n   }\r\n\r\n   renderTableData() {\r\n      return this.state.projects.map((project, index) => {\r\n         return (\r\n            <tr key={project._id}>\r\n               <td>{project.name}</td>\r\n               <td>{project.status.status}</td>\r\n               <td>{project.deliveryType.deliveryType}</td>\r\n               <td>{project.sm.name}</td>\r\n               <td>{project.ops.name}</td>\r\n               <td>{project.cim}</td>\r\n               <td>{project.ras}</td>\r\n               <td>\r\n                  <ButtonGroup>\r\n                     <Button size='sm'>\r\n                        <span className='fas fa-trash-alt' />\r\n                     </Button>\r\n                     <Button size='sm'>\r\n                        <span className='fas fa-edit' />\r\n                     </Button>\r\n                  </ButtonGroup>\r\n               </td>\r\n            </tr>\r\n         );\r\n      });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <p>All Available Projects</p>\r\n            <Table\r\n               responsive\r\n               borderless\r\n               striped\r\n               hover\r\n               size='sm'\r\n               className={this.setTheme()}\r\n            >\r\n               <thead>{this.renderTableHeaders()}</thead>\r\n               <tbody>{this.renderTableData()}</tbody>\r\n               {/*<tbody>{this.renderTableData()}</tbody>*/}\r\n            </Table>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}