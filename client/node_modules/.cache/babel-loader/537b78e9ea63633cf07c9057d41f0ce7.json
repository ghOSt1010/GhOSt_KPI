{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/sites/Login.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, CardBody, Button, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport MainDashboard from \"../components/MainDashboard/MainDashboard\";\nimport Auth from \"../Modules/Auth/Auth\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport \"./Login.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      buttonColor: \"secondary\",\n      isLoading: false,\n      authenticated: false,\n      email: \"\",\n      password: \"\"\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //event.preventDefault();\n                try {\n                  //req to authentication for server + local session storage\n                  _this.setState({\n                    authenticated: true\n                  });\n                } catch (e) {\n                  alert(e.message);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"cli\",\n    value: function cli() {\n      this.context.router.history.push(\"/\");\n    }\n  }, {\n    key: \"updateEmailValue\",\n    value: function updateEmailValue(evt) {\n      this.setState({\n        email: evt.target.value\n      });\n    }\n  }, {\n    key: \"updatePasswordValue\",\n    value: function updatePasswordValue(evt) {\n      this.setState({\n        password: evt.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.authenticated) return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"login-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xl: {\n          size: 4,\n          offset: 4\n        },\n        lg: {\n          size: 4,\n          offset: 4\n        },\n        md: {\n          size: 4,\n          offset: 4\n        },\n        sm: \"12\",\n        xs: \"12\",\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Card, {\n        inverse: true,\n        color: \"dark\",\n        className: \"bg-login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        className: \"bg-login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-dice-d20 float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Sign in\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"exampleEmail\",\n        placeholder: \"email\",\n        onChange: function onChange(evt) {\n          return _this2.updateEmailValue(evt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        color: this.state.buttonColor,\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        bsSize: \"sm\",\n        placeholder: \"password\",\n        onChange: function onChange(evt) {\n          return _this2.updatePasswordValue(evt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        type: \"submit\",\n        className: \"float-right\",\n        size: \"sm\",\n        onClick: this.handleSubmit(),\n        color: this.state.buttonColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Login\")))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/sites/Login.jsx"],"names":["React","Component","Row","Col","Card","CardBody","Button","Form","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","MainDashboard","Auth","BrowserRouter","Router","Route","Link","Redirect","Login","state","buttonColor","isLoading","authenticated","email","password","handleSubmit","event","setState","e","alert","message","context","router","history","push","evt","target","value","size","offset","updateEmailValue","updatePasswordValue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n   Row,\n   Col,\n   Card,\n   CardBody,\n   Button,\n   Form,\n   FormGroup,\n   Input,\n   InputGroup,\n   InputGroupAddon,\n   InputGroupText\n} from \"reactstrap\";\nimport MainDashboard from \"../components/MainDashboard/MainDashboard\";\nimport Auth from \"../Modules/Auth/Auth\";\nimport {\n   BrowserRouter as Router,\n   Route,\n   Link,\n   Redirect\n} from \"react-router-dom\";\n\nimport \"./Login.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nexport default class Login extends Component {\n   state = {\n      buttonColor: \"secondary\",\n      isLoading: false,\n      authenticated: false,\n      email: \"\",\n      password: \"\"\n   };\n\n   handleSubmit = async event => {\n      //event.preventDefault();\n      try {\n         //req to authentication for server + local session storage\n         this.setState({\n            authenticated: true\n         });\n      } catch (e) {\n         alert(e.message);\n      }\n   };\n\n   cli() {\n      this.context.router.history.push(\"/\");\n   }\n\n   updateEmailValue(evt) {\n      this.setState({\n         email: evt.target.value\n      });\n   }\n   updatePasswordValue(evt) {\n      this.setState({\n         password: evt.target.value\n      });\n   }\n\n   render() {\n      if (this.state.authenticated) return <Redirect to={\"/\"} />;\n\n      return (\n         <div className=\"login-page\">\n            <Row>\n               <Col\n                  xl={{ size: 4, offset: 4 }}\n                  lg={{ size: 4, offset: 4 }}\n                  md={{ size: 4, offset: 4 }}\n                  sm=\"12\"\n                  xs=\"12\"\n                  className=\"mt-4\"\n               >\n                  <Card inverse color=\"dark\" className=\"bg-login-form\">\n                     <CardBody className=\"bg-login-form\">\n                        <Form>\n                           <span className=\"fas fa-dice-d20 float-right\" />\n                           <p className=\"text-center\">Sign in</p>\n                           <FormGroup>\n                              <InputGroup size=\"sm\">\n                                 <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>\n                                       <i className=\"fas fa-user\" />\n                                    </InputGroupText>\n                                 </InputGroupAddon>\n                                 <Input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"exampleEmail\"\n                                    placeholder=\"email\"\n                                    onChange={evt => this.updateEmailValue(evt)}\n                                 />\n                              </InputGroup>\n                           </FormGroup>\n                           <FormGroup>\n                              <InputGroup size=\"sm\">\n                                 <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>\n                                       <i className=\"fas fa-key\" />\n                                    </InputGroupText>\n                                 </InputGroupAddon>\n                                 <Input\n                                    color={this.state.buttonColor}\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"examplePassword\"\n                                    bsSize=\"sm\"\n                                    placeholder=\"password\"\n                                    onChange={evt =>\n                                       this.updatePasswordValue(evt)\n                                    }\n                                 />\n                              </InputGroup>\n                           </FormGroup>\n                           <Button\n                              type=\"submit\"\n                              className=\"float-right\"\n                              size=\"sm\"\n                              onClick={this.handleSubmit()}\n                              color={this.state.buttonColor}\n                           >\n                              Login\n                           </Button>\n                        </Form>\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n         </div>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}