{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/AdminPanel/AdminPanel.jsx\";\nimport React, { Component } from 'react';\nimport UsersCard from './components/Users/UsersCard';\nimport KPIs from './components/KPIs/KPIs';\nimport Employees from './components/Employees/Employees';\nimport { Tabs, Tab, Button, H2, Position, Menu, MenuItem, Popover, Icon, ButtonGroup, Divider } from '@blueprintjs/core';\nimport UsersTable from './components/Users/UsersTable';\nimport Client from '../../Modules/Client/Client';\n\nvar AdminPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminPanel, _Component);\n\n  function AdminPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AdminPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AdminPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTabID: 'Users',\n      selectedTabId: 'Users',\n      isLoading: true,\n      users: []\n    };\n\n    _this.handleTabChange = function (activeTabID) {\n      _this.setState({\n        activeTabID: activeTabID\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AdminPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUsersData();\n    }\n  }, {\n    key: \"getUsersData\",\n    value: function () {\n      var _getUsersData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setLoading(true);\n                _context.prev = 1;\n                _context.next = 4;\n                return Client.Services.UsersService.getUsers();\n\n              case 4:\n                result = _context.sent;\n                this.setState({\n                  users: result.data\n                });\n                _context.next = 13;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                alert(_context.t0);\n                this.setState({\n                  errorMsg: _context.t0.response\n                });\n                Client.Notifications.alert('Error while loading users list');\n\n              case 13:\n                _context.prev = 13;\n                this.setLoading(false);\n                return _context.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8, 13, 16]]);\n      }));\n\n      function getUsersData() {\n        return _getUsersData.apply(this, arguments);\n      }\n\n      return getUsersData;\n    }()\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(loading) {\n      this.setState({\n        isLoading: loading\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          users = _this$state.users,\n          isLoading = _this$state.isLoading;\n      var addMenu = React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        icon: \"user\",\n        text: \"Add User\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        className: \"bg-transparent pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(H2, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Admin Panel\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Tabs, {\n        onChange: this.handleTabChange,\n        selectedTabId: this.state.selectedTabID,\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        id: \"Users\",\n        title: \"Users\",\n        panel: React.createElement(UsersCard, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Tab, {\n        id: \"Employees\",\n        title: \"Employees\",\n        panel: React.createElement(UsersTable, {\n          usersData: users,\n          onRefresh: function onRefresh() {\n            return _this2.getUsersData();\n          },\n          isLoading: isLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Tab, {\n        id: \"KPIs\",\n        title: \"KPIs\",\n        panel: React.createElement(KPIs, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Tabs.Expander, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Popover, {\n        content: addMenu,\n        position: Position.BOTTOM,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"add\",\n        small: true,\n        minimal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"caret-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Button, {\n        icon: \"refresh\",\n        small: true,\n        minimal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AdminPanel;\n}(Component);\n\nexport { AdminPanel as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/AdminPanel/AdminPanel.jsx"],"names":["React","Component","UsersCard","KPIs","Employees","Tabs","Tab","Button","H2","Position","Menu","MenuItem","Popover","Icon","ButtonGroup","Divider","UsersTable","Client","AdminPanel","state","activeTabID","selectedTabId","isLoading","users","handleTabChange","setState","getUsersData","setLoading","Services","UsersService","getUsers","result","data","alert","errorMsg","response","Notifications","loading","addMenu","selectedTabID","BOTTOM"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport UsersCard from './components/Users/UsersCard';\nimport KPIs from './components/KPIs/KPIs';\nimport Employees from './components/Employees/Employees';\n\nimport {\n   Tabs,\n   Tab,\n   Button,\n   H2,\n   Position,\n   Menu,\n   MenuItem,\n   Popover,\n   Icon,\n   ButtonGroup,\n   Divider\n} from '@blueprintjs/core';\nimport UsersTable from './components/Users/UsersTable';\nimport Client from '../../Modules/Client/Client';\n\nexport default class AdminPanel extends Component {\n   state = {\n      activeTabID: 'Users',\n      selectedTabId: 'Users',\n      isLoading: true,\n      users: []\n   };\n\n   componentDidMount() {\n      this.getUsersData();\n   }\n\n   async getUsersData() {\n      this.setLoading(true);\n      var result;\n      try {\n         //this.resetErrorMsg();\n         result = await Client.Services.UsersService.getUsers();\n         this.setState({\n            users: result.data\n         });\n      } catch (err) {\n         alert(err);\n         this.setState({ errorMsg: err.response });\n         Client.Notifications.alert('Error while loading users list');\n      } finally {\n         this.setLoading(false);\n      }\n   }\n\n   setLoading(loading) {\n      this.setState({\n         isLoading: loading\n      });\n   }\n\n   handleTabChange = activeTabID => {\n      this.setState({ activeTabID: activeTabID });\n   };\n\n   render() {\n      const { users, isLoading } = this.state;\n\n      const addMenu = (\n         <Menu>\n            <MenuItem icon='user' text='Add User'></MenuItem>\n         </Menu>\n      );\n\n      return (\n         <div className='bg-transparent pr-2'>\n            <div className=''>\n               <H2>Admin Panel</H2>\n            </div>\n\n            <br></br>\n            <Tabs\n               onChange={this.handleTabChange}\n               selectedTabId={this.state.selectedTabID}\n               large\n            >\n               <Tab id='Users' title='Users' panel={<UsersCard />} />\n               <Tab\n                  id='Employees'\n                  title='Employees'\n                  panel={\n                     <UsersTable\n                        usersData={users}\n                        onRefresh={() => this.getUsersData()}\n                        isLoading={isLoading}\n                     />\n                  }\n               />\n               <Tab id='KPIs' title='KPIs' panel={<KPIs />} />\n               <Tabs.Expander />\n               <ButtonGroup>\n                  <Popover content={addMenu} position={Position.BOTTOM}>\n                     <Button icon='add' small minimal>\n                        <Icon icon='caret-down' />\n                     </Button>\n                  </Popover>\n                  <Divider />\n                  <Button icon='refresh' small minimal />\n               </ButtonGroup>\n            </Tabs>\n         </div>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}