{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/TeamsTable.jsx\";\nimport React, { Component } from 'react';\nimport Table from './Table';\nimport TableCell from './TableCell';\n\nvar TeamsTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TeamsTable, _Component);\n\n  function TeamsTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TeamsTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TeamsTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: '',\n      headers: [{\n        text: '#',\n        center: true\n      }, {\n        text: 'Team'\n      }, {\n        text: 'Manager'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(TeamsTable, [{\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, this.renderTableRows());\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      var _this2 = this;\n\n      var data = this.props.data;\n      return data.map(function (team, key) {\n        return React.createElement(\"tr\", {\n          key: team._id,\n          onClick: function onClick(e) {\n            return _this2.handleSelection(e, team);\n          },\n          className: \"\".concat(_this2.state.selected._id === team._id ? 'bg-selected' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          key: key,\n          value: key,\n          center: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: team.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: team.manager.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"handleSelection\",\n    value: function handleSelection(e, team) {\n      e.preventDefault();\n      var selected = this.state.selected;\n\n      if (selected._id != team._id) {\n        this.props.onSelection(team, false);\n        this.setState({\n          selected: team\n        });\n        return;\n      }\n\n      this.props.onSelection({}, true);\n      this.setState({\n        selected: {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table, {\n        headers: this.state.headers,\n        rows: this.renderTableRows(),\n        errorMsg: this.props.errorMsg,\n        isLoading: this.props.isLoading,\n        onRefresh: this.props.onRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TeamsTable;\n}(Component);\n\nexport { TeamsTable as default };\nTeamsTable.defaultProps = {\n  data: [],\n  onRefresh: function onRefresh() {\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/TeamsTable.jsx"],"names":["React","Component","Table","TableCell","TeamsTable","state","selected","headers","text","center","renderTableRows","data","props","map","team","key","_id","e","handleSelection","name","manager","preventDefault","onSelection","setState","errorMsg","isLoading","onRefresh","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEqBC,U;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,QAAQ,EAAE,EADL;AAELC,MAAAA,OAAO,EAAE,CACN;AAAEC,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE;AAArB,OADM,EAEN;AAAED,QAAAA,IAAI,EAAE;AAAR,OAFM,EAGN;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHM;AAFJ,K;;;;;;sCASU;AACf,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKE,eAAL,EAAR,CAAP;AACF;;;sCACiB;AAAA;;AAAA,UACPC,IADO,GACE,KAAKC,KADP,CACPD,IADO;AAEf,aAAOA,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC5B,eACG;AACG,UAAA,GAAG,EAAED,IAAI,CAACE,GADb;AAEG,UAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,mBAAI,MAAI,CAACC,eAAL,CAAqBD,CAArB,EAAwBH,IAAxB,CAAJ;AAAA,WAFb;AAGG,UAAA,SAAS,YACN,MAAI,CAACT,KAAL,CAAWC,QAAX,CAAoBU,GAApB,KAA4BF,IAAI,CAACE,GAAjC,GAAuC,aAAvC,GAAuD,EADjD,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOG,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAED,GAAhB;AAAqB,UAAA,KAAK,EAAEA,GAA5B;AAAiC,UAAA,MAAM,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPH,EAQG,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAED,IAAI,CAACK,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARH,EASG,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEL,IAAI,CAACM,OAAL,CAAaD,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATH,CADH;AAaF,OAdM,CAAP;AAeF;;;oCAEeF,C,EAAGH,I,EAAM;AACtBG,MAAAA,CAAC,CAACI,cAAF;AADsB,UAEdf,QAFc,GAED,KAAKD,KAFJ,CAEdC,QAFc;;AAGtB,UAAIA,QAAQ,CAACU,GAAT,IAAgBF,IAAI,CAACE,GAAzB,EAA8B;AAC3B,aAAKJ,KAAL,CAAWU,WAAX,CAAuBR,IAAvB,EAA6B,KAA7B;AACA,aAAKS,QAAL,CAAc;AACXjB,UAAAA,QAAQ,EAAEQ;AADC,SAAd;AAGA;AACF;;AACD,WAAKF,KAAL,CAAWU,WAAX,CAAuB,EAAvB,EAA2B,IAA3B;AACA,WAAKC,QAAL,CAAc;AAAEjB,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACF;;;6BAEQ;AACN,aACG,oBAAC,KAAD;AACG,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OADvB;AAEG,QAAA,IAAI,EAAE,KAAKG,eAAL,EAFT;AAGG,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWY,QAHxB;AAIG,QAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWa,SAJzB;AAKG,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWc,SALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AASF;;;;EAxDoCzB,S;;SAAnBG,U;AA0DrBA,UAAU,CAACuB,YAAX,GAA0B;AACvBhB,EAAAA,IAAI,EAAE,EADiB;AAEvBe,EAAAA,SAAS,EAAE,qBAAW;AACnB;AACF;AAJsB,CAA1B","sourcesContent":["import React, { Component } from 'react';\nimport Table from './Table';\nimport TableCell from './TableCell';\n\nexport default class TeamsTable extends Component {\n   state = {\n      selected: '',\n      headers: [\n         { text: '#', center: true },\n         { text: 'Team' },\n         { text: 'Manager' }\n      ]\n   };\n\n   renderTableBody() {\n      return <tbody>{this.renderTableRows()}</tbody>;\n   }\n   renderTableRows() {\n      const { data } = this.props;\n      return data.map((team, key) => {\n         return (\n            <tr\n               key={team._id}\n               onClick={e => this.handleSelection(e, team)}\n               className={`${\n                  this.state.selected._id === team._id ? 'bg-selected' : ''\n               }`}\n            >\n               <TableCell key={key} value={key} center />\n               <TableCell value={team.name} />\n               <TableCell value={team.manager.name} />\n            </tr>\n         );\n      });\n   }\n\n   handleSelection(e, team) {\n      e.preventDefault();\n      const { selected } = this.state;\n      if (selected._id != team._id) {\n         this.props.onSelection(team, false);\n         this.setState({\n            selected: team\n         });\n         return;\n      }\n      this.props.onSelection({}, true);\n      this.setState({ selected: {} });\n   }\n\n   render() {\n      return (\n         <Table\n            headers={this.state.headers}\n            rows={this.renderTableRows()}\n            errorMsg={this.props.errorMsg}\n            isLoading={this.props.isLoading}\n            onRefresh={this.props.onRefresh}\n         />\n      );\n   }\n}\nTeamsTable.defaultProps = {\n   data: [],\n   onRefresh: function() {\n      return;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}