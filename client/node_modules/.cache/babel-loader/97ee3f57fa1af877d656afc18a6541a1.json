{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/ProjectCard/CreateProjectCard.jsx\";\nimport React, { Component } from 'react';\nimport { Col, Alert, Button, Form, FormGroup, Label, Input, ButtonGroup } from 'reactstrap';\nimport StdCard from '../StdCard';\nimport axios from 'axios';\n\nvar ProjectCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectCard, _Component);\n\n  function ProjectCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      projectName: '',\n      status: 'Delivery',\n      deliveryType: 'Shared',\n      sm: '',\n      ops: '',\n      cim: '',\n      ras: '',\n      message: ''\n    };\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.name] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          projectName = _this$state.projectName,\n          status = _this$state.status,\n          deliveryType = _this$state.deliveryType,\n          sm = _this$state.sm,\n          ops = _this$state.ops,\n          cim = _this$state.cim,\n          ras = _this$state.ras;\n      var URL = 'http://localhost:3001/api/projects/';\n      var data = {\n        project: {\n          name: projectName,\n          status: status,\n          deliveryType: deliveryType,\n          sm: sm,\n          ops: ops,\n          cim: cim,\n          ras: ras,\n          created: ''\n        }\n      };\n      axios.post(URL, data).then(function (res) {\n        _this.setState({\n          created: 'ok',\n          message: 'Project saved successfully'\n        });\n\n        alert(_this.state.created);\n      }).catch(function (err) {\n        _this.setState({\n          created: 'error',\n          message: err\n        });\n\n        alert(_this.state.created);\n      });\n    };\n\n    _this.clearForm = function () {\n      _this.setState({\n        projectName: '',\n        status: 'Delivery',\n        deliveryType: 'Shared',\n        sm: '',\n        ops: '',\n        cim: '',\n        ras: '',\n        message: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ProjectCard, [{\n    key: \"setInputTheme\",\n    value: function setInputTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"setSelectTheme\",\n    value: function setSelectTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"alertStyle\",\n    value: function alertStyle(type) {\n      if (type === 'warrning') return 'bg-transparent border border-warning text-warning rounded-corners text-center';\n      if (type === 'success') return 'bg-transparent border border-success text-success rounded-corners text-center';\n      if (!type) return 'bg-transparent border border-secondary text-secondary rounded-corners text-center';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          theme = _this$state2.theme,\n          projectName = _this$state2.projectName,\n          status = _this$state2.status,\n          deliveryType = _this$state2.deliveryType,\n          sm = _this$state2.sm,\n          ops = _this$state2.ops,\n          cim = _this$state2.cim,\n          ras = _this$state2.ras,\n          created = _this$state2.created,\n          message = _this$state2.message;\n      return React.createElement(StdCard, {\n        theme: theme,\n        icon: \"fas fa-project-diagram\",\n        headerText: \"Create New Project\",\n        size: \"m\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Create New Project\"), message !== '' && React.createElement(Alert, {\n        className: created === 'ok' ? this.alertStyle('warrning') : this.alertStyle('success'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, message), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(Form, {\n        className: \"mb-2\",\n        ref: \"createProjectForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"projectName\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Project Name\"), React.createElement(Col, {\n        md: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"input\",\n        name: \"projectName\",\n        id: \"projectName\",\n        ref: \"projectName\",\n        size: \"sm\",\n        value: projectName,\n        onChange: this.onChange,\n        placeholder: \"Please provide username\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"status\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Status\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"status\",\n        id: \"status\",\n        size: \"sm\",\n        value: status,\n        onChange: this.onChange,\n        placeholder: \"Please provide Project Name\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Retired\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Delivery\"))), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"deliveryType\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Delivery Type\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"deliveryType\",\n        id: \"deliveryType\",\n        size: \"sm\",\n        value: deliveryType,\n        onChange: this.onChange,\n        placeholder: \"Please provide Project Name\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Dedicated\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Shared\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Hybrid\")))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"sm\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Service Manager\"), React.createElement(Col, {\n        md: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"input\",\n        name: \"sm\",\n        id: \"sm\",\n        size: \"sm\",\n        value: sm,\n        onChange: this.onChange,\n        placeholder: \"Please provide Project Name\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"ops\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Operations Manager\"), React.createElement(Col, {\n        md: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"input\",\n        name: \"ops\",\n        id: \"ops\",\n        size: \"sm\",\n        value: ops,\n        onChange: this.onChange,\n        placeholder: \"Please provide Project Name\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"cim\",\n        md: 1,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"CIM\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"input\",\n        name: \"cim\",\n        id: \"cim\",\n        size: \"sm\",\n        value: cim,\n        onChange: this.onChange,\n        placeholder: \"Please provide Project Name\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"ras\",\n        md: 1,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"RAS\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"input\",\n        name: \"ras\",\n        id: \"ras\",\n        size: \"sm\",\n        value: ras,\n        onChange: this.onChange,\n        placeholder: \"Please provide Project Name\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        onClick: this.clearForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Add\")))));\n    }\n  }]);\n\n  return ProjectCard;\n}(Component);\n\nexport { ProjectCard as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/ProjectCard/CreateProjectCard.jsx"],"names":["React","Component","Col","Alert","Button","Form","FormGroup","Label","Input","ButtonGroup","StdCard","axios","ProjectCard","state","theme","props","projectName","status","deliveryType","sm","ops","cim","ras","message","onChange","e","target","name","value","setState","onSubmit","preventDefault","URL","data","project","created","post","then","res","alert","catch","err","clearForm","type","alertStyle","setInputTheme","setSelectTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Col,\r\n   Alert,\r\n   Button,\r\n   Form,\r\n   FormGroup,\r\n   Label,\r\n   Input,\r\n   ButtonGroup\r\n} from 'reactstrap';\r\nimport StdCard from '../StdCard';\r\nimport axios from 'axios';\r\n\r\nexport default class ProjectCard extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      projectName: '',\r\n      status: 'Delivery',\r\n      deliveryType: 'Shared',\r\n      sm: '',\r\n      ops: '',\r\n      cim: '',\r\n      ras: '',\r\n      message: ''\r\n   };\r\n\r\n   onChange = e => {\r\n      const state = this.state;\r\n      state[e.target.name] = e.target.value;\r\n      this.setState(state);\r\n   };\r\n\r\n   onSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const {\r\n         projectName,\r\n         status,\r\n         deliveryType,\r\n         sm,\r\n         ops,\r\n         cim,\r\n         ras\r\n      } = this.state;\r\n\r\n      const URL = 'http://localhost:3001/api/projects/';\r\n\r\n      const data = {\r\n         project: {\r\n            name: projectName,\r\n            status: status,\r\n            deliveryType: deliveryType,\r\n            sm: sm,\r\n            ops: ops,\r\n            cim: cim,\r\n            ras: ras,\r\n            created: ''\r\n         }\r\n      };\r\n\r\n      axios\r\n         .post(URL, data)\r\n         .then(res => {\r\n            this.setState({\r\n               created: 'ok',\r\n               message: 'Project saved successfully'\r\n            });\r\n            alert(this.state.created);\r\n         })\r\n         .catch(err => {\r\n            this.setState({\r\n               created: 'error',\r\n               message: err\r\n            });\r\n            alert(this.state.created);\r\n         });\r\n   };\r\n\r\n   clearForm = () => {\r\n      this.setState({\r\n         projectName: '',\r\n         status: 'Delivery',\r\n         deliveryType: 'Shared',\r\n         sm: '',\r\n         ops: '',\r\n         cim: '',\r\n         ras: '',\r\n         message: ''\r\n      });\r\n   };\r\n\r\n   setInputTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n   setSelectTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   alertStyle(type) {\r\n      if (type === 'warrning')\r\n         return 'bg-transparent border border-warning text-warning rounded-corners text-center';\r\n      if (type === 'success')\r\n         return 'bg-transparent border border-success text-success rounded-corners text-center';\r\n      if (!type)\r\n         return 'bg-transparent border border-secondary text-secondary rounded-corners text-center';\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         theme,\r\n         projectName,\r\n         status,\r\n         deliveryType,\r\n         sm,\r\n         ops,\r\n         cim,\r\n         ras,\r\n         created,\r\n         message\r\n      } = this.state;\r\n\r\n      return (\r\n         <StdCard\r\n            theme={theme}\r\n            icon='fas fa-project-diagram'\r\n            headerText='Create New Project'\r\n            size='m'\r\n         >\r\n            <div>\r\n               <h5>Create New Project</h5>\r\n               {message !== '' && (\r\n                  <Alert\r\n                     className={\r\n                        created === 'ok'\r\n                           ? this.alertStyle('warrning')\r\n                           : this.alertStyle('success')\r\n                     }\r\n                  >\r\n                     {message}\r\n                  </Alert>\r\n               )}\r\n               <hr />\r\n            </div>\r\n            <Form className='mb-2' ref='createProjectForm'>\r\n               <FormGroup row>\r\n                  <Label\r\n                     className='text-right'\r\n                     for='projectName'\r\n                     md={3}\r\n                     size='sm'\r\n                  >\r\n                     Project Name\r\n                  </Label>\r\n                  <Col md={9}>\r\n                     <Input\r\n                        type='input'\r\n                        name='projectName'\r\n                        id='projectName'\r\n                        ref='projectName'\r\n                        size='sm'\r\n                        value={projectName}\r\n                        onChange={this.onChange}\r\n                        placeholder='Please provide username'\r\n                        className={this.setInputTheme()}\r\n                     />\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='status' md={3} size='sm'>\r\n                     Status\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='select'\r\n                        name='status'\r\n                        id='status'\r\n                        size='sm'\r\n                        value={status}\r\n                        onChange={this.onChange}\r\n                        placeholder='Please provide Project Name'\r\n                        className={this.setInputTheme()}\r\n                     >\r\n                        <option>Retired</option>\r\n                        <option>Delivery</option>\r\n                     </Input>\r\n                  </Col>\r\n\r\n                  <Label\r\n                     className='text-right'\r\n                     for='deliveryType'\r\n                     md={3}\r\n                     size='sm'\r\n                  >\r\n                     Delivery Type\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='select'\r\n                        name='deliveryType'\r\n                        id='deliveryType'\r\n                        size='sm'\r\n                        value={deliveryType}\r\n                        onChange={this.onChange}\r\n                        placeholder='Please provide Project Name'\r\n                        className={this.setSelectTheme()}\r\n                     >\r\n                        <option>Dedicated</option>\r\n                        <option>Shared</option>\r\n                        <option>Hybrid</option>\r\n                     </Input>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='sm' md={3} size='sm'>\r\n                     Service Manager\r\n                  </Label>\r\n                  <Col md={9}>\r\n                     <Input\r\n                        type='input'\r\n                        name='sm'\r\n                        id='sm'\r\n                        size='sm'\r\n                        value={sm}\r\n                        onChange={this.onChange}\r\n                        placeholder='Please provide Project Name'\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='ops' md={3} size='sm'>\r\n                     Operations Manager\r\n                  </Label>\r\n                  <Col md={9}>\r\n                     <Input\r\n                        type='input'\r\n                        name='ops'\r\n                        id='ops'\r\n                        size='sm'\r\n                        value={ops}\r\n                        onChange={this.onChange}\r\n                        placeholder='Please provide Project Name'\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Col md={4} />\r\n                  <Label className='text-right' for='cim' md={1} size='sm'>\r\n                     CIM\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='input'\r\n                        name='cim'\r\n                        id='cim'\r\n                        size='sm'\r\n                        value={cim}\r\n                        onChange={this.onChange}\r\n                        placeholder='Please provide Project Name'\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                  </Col>\r\n\r\n                  <Label className='text-right' for='ras' md={1} size='sm'>\r\n                     RAS\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='input'\r\n                        name='ras'\r\n                        id='ras'\r\n                        size='sm'\r\n                        value={ras}\r\n                        onChange={this.onChange}\r\n                        placeholder='Please provide Project Name'\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                  </Col>\r\n               </FormGroup>\r\n\r\n               <div className='text-right'>\r\n                  <ButtonGroup>\r\n                     <Button size='sm' onClick={this.clearForm}>\r\n                        Clear\r\n                     </Button>\r\n                     <Button color='primary' size='sm' onClick={this.onSubmit}>\r\n                        Add\r\n                     </Button>\r\n                  </ButtonGroup>\r\n               </div>\r\n            </Form>\r\n         </StdCard>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}