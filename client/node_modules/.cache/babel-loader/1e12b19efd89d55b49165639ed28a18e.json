{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Settings/Settings.jsx\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport TopBar from \"../Nav/TopBar/TopBar\";\nimport LeftBar from \"../Nav/LeftBar/LeftBar\";\nimport NavItem from \"../Nav/NavItem/NavItem\";\nimport AppSettings from \"./AppSettings/AppSettings\";\nimport UserSettings from \"./UserSettings/UserSettings\";\nimport StdCard from \"../Card/StdCard\";\nimport Select from \"../Buttons/Select/Select\";\nimport MainContainer from \"../MainContainer/MainContainer\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport CreateUser from \"../Users/CreateUser\";\n\nvar Settings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Settings, _Component);\n\n  function Settings(props) {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Settings).call(this, props));\n    _this.state = {\n      theme: \"light\",\n      showReportFilter: false,\n      activeTab: \"1\"\n    };\n    _this.switchTheme = _this.switchTheme.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"switchTheme\",\n    value: function switchTheme() {\n      var theme = this.state.theme;\n\n      if (theme === \"dark\") {\n        this.setState({\n          theme: \"light\"\n        });\n      }\n\n      if (theme === \"light\") {\n        this.setState({\n          theme: \"dark\"\n        });\n      }\n\n      if (!theme) {\n        this.setState({\n          theme: \"light\"\n        });\n      }\n    }\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(theme) {\n      if (theme === \"dark\") {\n        return \"table-dark\";\n      }\n\n      if (theme === \"light\") {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"setInputTheme\",\n    value: function setInputTheme(theme) {\n      if (theme === \"dark\") {\n        return \"table-input-dark\";\n      }\n\n      if (theme === \"light\") {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(MainContainer, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(TopBar, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        icon: \"fas fa-adjust text-right\",\n        onClick: this.switchTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(LeftBar, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Settings/User\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        icon: \"fas fa-user-cog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(Link, {\n        to: \"/Settings/App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        icon: \"fas fa-sliders-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(CreateUser, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(StdCard, {\n        icon: \"fas fa-align-left\",\n        headerText: \"Application settings\",\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), React.createElement(Route, {\n        path: \"/Settings/App\",\n        component: AppSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Settings/App\",\n        component: UserSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nexport { Settings as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Settings/Settings.jsx"],"names":["React","Component","Col","Row","Button","Form","FormGroup","Label","Input","TopBar","LeftBar","NavItem","AppSettings","UserSettings","StdCard","Select","MainContainer","BrowserRouter","Router","Route","Link","CreateUser","Settings","props","state","theme","showReportFilter","activeTab","switchTheme","bind","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport TopBar from \"../Nav/TopBar/TopBar\";\r\nimport LeftBar from \"../Nav/LeftBar/LeftBar\";\r\nimport NavItem from \"../Nav/NavItem/NavItem\";\r\nimport AppSettings from \"./AppSettings/AppSettings\";\r\nimport UserSettings from \"./UserSettings/UserSettings\";\r\nimport StdCard from \"../Card/StdCard\";\r\nimport Select from \"../Buttons/Select/Select\";\r\nimport MainContainer from \"../MainContainer/MainContainer\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport CreateUser from \"../Users/CreateUser\";\r\n\r\nexport default class Settings extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         theme: \"light\",\r\n         showReportFilter: false,\r\n         activeTab: \"1\"\r\n      };\r\n      this.switchTheme = this.switchTheme.bind(this);\r\n   }\r\n\r\n   switchTheme() {\r\n      const { theme } = this.state;\r\n\r\n      if (theme === \"dark\") {\r\n         this.setState({ theme: \"light\" });\r\n      }\r\n      if (theme === \"light\") {\r\n         this.setState({ theme: \"dark\" });\r\n      }\r\n      if (!theme) {\r\n         this.setState({ theme: \"light\" });\r\n      }\r\n   }\r\n\r\n   setTheme(theme) {\r\n      if (theme === \"dark\") {\r\n         return \"table-dark\";\r\n      }\r\n      if (theme === \"light\") {\r\n         return \"\";\r\n      }\r\n   }\r\n   setInputTheme(theme) {\r\n      if (theme === \"dark\") {\r\n         return \"table-input-dark\";\r\n      }\r\n      if (theme === \"light\") {\r\n         return \"\";\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Router>\r\n            <MainContainer theme={this.state.theme}>\r\n               <TopBar theme={this.state.theme}>\r\n                  <NavItem\r\n                     icon=\"fas fa-adjust text-right\"\r\n                     onClick={this.switchTheme}\r\n                  />\r\n               </TopBar>\r\n               <LeftBar theme={this.state.theme}>\r\n                  <Link to=\"/Settings/User\">\r\n                     <NavItem icon=\"fas fa-user-cog\" />\r\n                  </Link>\r\n                  <Link to={`/Settings/App`}>\r\n                     <NavItem icon=\"fas fa-sliders-h\" />\r\n                  </Link>\r\n               </LeftBar>\r\n               <Row>\r\n                  <CreateUser theme={this.state.theme} />\r\n                  <StdCard\r\n                     icon=\"fas fa-align-left\"\r\n                     headerText=\"Application settings\"\r\n                     theme={this.state.theme}\r\n                  />\r\n               </Row>\r\n            </MainContainer>\r\n            <Route path={`/Settings/App`} component={AppSettings} />\r\n            <Route path={`/Settings/App`} component={UserSettings} />\r\n         </Router>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}