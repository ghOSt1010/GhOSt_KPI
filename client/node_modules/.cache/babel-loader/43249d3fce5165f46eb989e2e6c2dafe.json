{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Selects/EmployeeRoleOptions.jsx\";\nimport React, { Component } from 'react';\nimport { HTMLSelect } from '@blueprintjs/core';\nimport Client from '../../Modules/Client/Client';\n\nvar RoleOptions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RoleOptions, _Component);\n\n  function RoleOptions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RoleOptions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RoleOptions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      options: [],\n      option: ''\n    };\n    return _this;\n  }\n\n  _createClass(RoleOptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getOptions();\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      try {\n        var result = Client.Services.EmployeeRolesService.getEmployeeRoles();\n        this.setState({\n          options: result.data\n        });\n      } catch (err) {\n        this.setState({\n          options: new Array('N/A'),\n          option: 'N/A'\n        });\n      }\n    }\n  }, {\n    key: \"renderOptions\",\n    value: function renderOptions() {\n      if (this.state.options) {\n        return this.state.options.map(function (option, key) {\n          return React.createElement(\"option\", {\n            key: key,\n            value: option._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, option.role);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(HTMLSelect, {\n        id: this.props.id,\n        ref: this.props.ref,\n        onChange: this.props.onChange,\n        disabled: this.props.disabled,\n        fill: this.props.fill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        hidden: true,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.placeholder), this.renderOptions());\n    }\n  }]);\n\n  return RoleOptions;\n}(Component);\n\nexport { RoleOptions as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Selects/EmployeeRoleOptions.jsx"],"names":["React","Component","HTMLSelect","Client","RoleOptions","state","options","option","getOptions","result","Services","EmployeeRolesService","getEmployeeRoles","setState","data","err","Array","map","key","_id","role","props","id","ref","onChange","disabled","fill","placeholder","renderOptions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;IAEqBC,W;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,OAAO,EAAE,EADJ;AAELC,MAAAA,MAAM,EAAE;AAFH,K;;;;;;wCAIY;AACjB,WAAKC,UAAL;AACF;;;iCACY;AACV,UAAI;AACD,YAAIC,MAAM,GAAGN,MAAM,CAACO,QAAP,CAAgBC,oBAAhB,CAAqCC,gBAArC,EAAb;AACA,aAAKC,QAAL,CAAc;AACXP,UAAAA,OAAO,EAAEG,MAAM,CAACK;AADL,SAAd;AAGF,OALD,CAKE,OAAOC,GAAP,EAAY;AACX,aAAKF,QAAL,CAAc;AAAEP,UAAAA,OAAO,EAAE,IAAIU,KAAJ,CAAU,KAAV,CAAX;AAA6BT,UAAAA,MAAM,EAAE;AAArC,SAAd;AACF;AACH;;;oCACe;AACb,UAAI,KAAKF,KAAL,CAAWC,OAAf,EAAwB;AACrB,eAAO,KAAKD,KAAL,CAAWC,OAAX,CAAmBW,GAAnB,CAAuB,UAACV,MAAD,EAASW,GAAT,EAAiB;AAC5C,iBACG;AAAQ,YAAA,GAAG,EAAEA,GAAb;AAAkB,YAAA,KAAK,EAAEX,MAAM,CAACY,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACIZ,MAAM,CAACa,IADX,CADH;AAKF,SANM,CAAP;AAOF;AACH;;;6BACQ;AACN,aACG,oBAAC,UAAD;AACG,QAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,EADlB;AAEG,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,GAFnB;AAGG,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAHxB;AAIG,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAJxB;AAKG,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,IALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,MAAM,MAAvB;AAAwB,QAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKL,KAAL,CAAWM,WADf,CAPH,EAUI,KAAKC,aAAL,EAVJ,CADH;AAcF;;;;EA5CqC3B,S;;SAApBG,W","sourcesContent":["import React, { Component } from 'react';\r\nimport { HTMLSelect } from '@blueprintjs/core';\r\nimport Client from '../../Modules/Client/Client';\r\n\r\nexport default class RoleOptions extends Component {\r\n   state = {\r\n      options: [],\r\n      option: ''\r\n   };\r\n   componentDidMount() {\r\n      this.getOptions();\r\n   }\r\n   getOptions() {\r\n      try {\r\n         var result = Client.Services.EmployeeRolesService.getEmployeeRoles();\r\n         this.setState({\r\n            options: result.data\r\n         });\r\n      } catch (err) {\r\n         this.setState({ options: new Array('N/A'), option: 'N/A' });\r\n      }\r\n   }\r\n   renderOptions() {\r\n      if (this.state.options) {\r\n         return this.state.options.map((option, key) => {\r\n            return (\r\n               <option key={key} value={option._id}>\r\n                  {option.role}\r\n               </option>\r\n            );\r\n         });\r\n      }\r\n   }\r\n   render() {\r\n      return (\r\n         <HTMLSelect\r\n            id={this.props.id}\r\n            ref={this.props.ref}\r\n            onChange={this.props.onChange}\r\n            disabled={this.props.disabled}\r\n            fill={this.props.fill}\r\n         >\r\n            <option selected hidden disabled>\r\n               {this.props.placeholder}\r\n            </option>\r\n            {this.renderOptions()}\r\n         </HTMLSelect>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}