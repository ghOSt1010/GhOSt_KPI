{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/AdminPanel/components/UsersTable.js/UsersTable.jsx\";\nimport React, { Component } from 'react';\nimport { HTMLTable, Button } from '@blueprintjs/core';\nimport Client from '../../../../Modules/Client/Client';\nimport UsersTableRows from './UsersTableRows';\nimport UsersTableHeader from './UsersTableHeader';\n\nvar UsersTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UsersTable, _Component);\n\n  function UsersTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UsersTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UsersTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      users: [],\n      errorMsg: ''\n    };\n    return _this;\n  }\n\n  _createClass(UsersTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var result;\n\n      try {\n        result = Client.Services.UsersService.getUsers();\n        this.setState({\n          users: result.data\n        });\n        console.table(this.state.users);\n      } catch (err) {\n        this.setState({\n          errorMsg: err.response.status\n        });\n        Client.Notifications.alert('Error while loading users list');\n      }\n    }\n  }, {\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"User Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Role\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Role\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"...\")));\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      return this.state.data.map(function (user, index) {\n        //const { id, username, role, email } = user;\n        return React.createElement(\"tr\", {\n          key: user._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, user.username), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, user.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, user.role), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(Button, {\n          minimal: true,\n          icon: \"more\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        })));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(HTMLTable, {\n        condensed: true,\n        striped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.renderTableHeader(), this.renderTableRows()));\n    }\n  }]);\n\n  return UsersTable;\n}(Component);\n\nexport { UsersTable as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/AdminPanel/components/UsersTable.js/UsersTable.jsx"],"names":["React","Component","HTMLTable","Button","Client","UsersTableRows","UsersTableHeader","UsersTable","state","users","errorMsg","result","Services","UsersService","getUsers","setState","data","console","table","err","response","status","Notifications","alert","map","user","index","_id","username","email","role","renderTableHeader","renderTableRows"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;IAEqBC,U;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,QAAQ,EAAE;AAFL,K;;;;;;wCAKY;AACjB,UAAIC,MAAJ;;AACA,UAAI;AACDA,QAAAA,MAAM,GAAGP,MAAM,CAACQ,QAAP,CAAgBC,YAAhB,CAA6BC,QAA7B,EAAT;AACA,aAAKC,QAAL,CAAc;AACXN,UAAAA,KAAK,EAAEE,MAAM,CAACK;AADH,SAAd;AAGAC,QAAAA,OAAO,CAACC,KAAR,CAAc,KAAKV,KAAL,CAAWC,KAAzB;AACF,OAND,CAME,OAAOU,GAAP,EAAY;AACX,aAAKJ,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAES,GAAG,CAACC,QAAJ,CAAaC;AAAzB,SAAd;AACAjB,QAAAA,MAAM,CAACkB,aAAP,CAAqBC,KAArB,CAA2B,gCAA3B;AACF;AACH;;;wCAEmB;AACjB,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJH,CADH,CADH;AAUF;;;sCAEiB;AACf,aAAO,KAAKf,KAAL,CAAWQ,IAAX,CAAgBQ,GAAhB,CAAoB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACzC;AACA,eACG;AAAI,UAAA,GAAG,EAAED,IAAI,CAACE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,IAAI,CAACG,QAAV,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,IAAI,CAACI,KAAV,CAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,IAAI,CAACK,IAAV,CAHH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,oBAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAgB,UAAA,IAAI,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH,CAJH,CADH;AAUF,OAZM,CAAP;AAaF;;;6BAEQ;AACN,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,SAAD;AAAW,QAAA,SAAS,MAApB;AAAqB,QAAA,OAAO,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKC,iBAAL,EADJ,EAEI,KAAKC,eAAL,EAFJ,CADH,CADH;AAQF;;;;EA1DoC/B,S;;SAAnBM,U","sourcesContent":["import React, { Component } from 'react';\nimport { HTMLTable, Button } from '@blueprintjs/core';\nimport Client from '../../../../Modules/Client/Client';\nimport UsersTableRows from './UsersTableRows';\nimport UsersTableHeader from './UsersTableHeader';\n\nexport default class UsersTable extends Component {\n   state = {\n      users: [],\n      errorMsg: ''\n   };\n\n   componentDidMount() {\n      let result;\n      try {\n         result = Client.Services.UsersService.getUsers();\n         this.setState({\n            users: result.data\n         });\n         console.table(this.state.users);\n      } catch (err) {\n         this.setState({ errorMsg: err.response.status });\n         Client.Notifications.alert('Error while loading users list');\n      }\n   }\n\n   renderTableHeader() {\n      return (\n         <thead>\n            <tr>\n               <th>User Name</th>\n               <th>Role</th>\n               <th>Role</th>\n               <th>...</th>\n            </tr>\n         </thead>\n      );\n   }\n\n   renderTableRows() {\n      return this.state.data.map((user, index) => {\n         //const { id, username, role, email } = user;\n         return (\n            <tr key={user._id}>\n               <td>{user.username}</td>\n               <td>{user.email}</td>\n               <td>{user.role}</td>\n               <td>\n                  <Button minimal icon='more'></Button>\n               </td>\n            </tr>\n         );\n      });\n   }\n\n   render() {\n      return (\n         <div>\n            <HTMLTable condensed striped>\n               {this.renderTableHeader()}\n               {this.renderTableRows()}\n            </HTMLTable>\n         </div>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}