{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/AdminPanel/components/Languages/LanguagesTable.jsx\";\nimport React, { Component } from 'react';\nimport { HTMLTable, Button, NonIdealState, H5, Spinner, ContextMenu, Dialog, Icon, Card } from '@blueprintjs/core';\nimport Client from '../../../../Modules/Client/Client';\nimport LanguagesForm from '../../../../components/Forms/EmployeeForms/EmployeeLanguageForm';\nimport CardHeader from '../../../../components/Card/CardHeader';\nimport CardBody from '../../../../components/Card/CardBody';\nimport TableContextMenu from './TableContextMenu';\n\nvar LanguagesTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LanguagesTable, _Component);\n\n  function LanguagesTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LanguagesTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LanguagesTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      errorMsg: '',\n      showEditCard: false,\n      languageForEdit: {}\n    };\n    return _this;\n  }\n\n  _createClass(LanguagesTable, [{\n    key: \"isEligable\",\n    value: function isEligable() {\n      var role = Client.User.getRole();\n      if (role === 'ROOT') return false;\n      if (role === 'ADMIN') return false;\n      return true;\n    }\n  }, {\n    key: \"resetErrorMsg\",\n    value: function resetErrorMsg() {\n      this.setState({\n        errorMsg: ''\n      });\n    }\n  }, {\n    key: \"deleteLanguage\",\n    value: function () {\n      var _deleteLanguage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.resetErrorMsg();\n                _context.next = 4;\n                return Client.Services.LanguageService.deleteLanguageByID(id);\n\n              case 4:\n                result = _context.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success('Language removed successfully');\n                }\n\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                this.setState({\n                  errorMsg: _context.t0.response.status\n                });\n                Client.Notifications.alert('Error, cannot delete language');\n\n              case 12:\n                _context.prev = 12;\n                this.props.onRefresh();\n                return _context.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8, 12, 15]]);\n      }));\n\n      function deleteLanguage(_x) {\n        return _deleteLanguage.apply(this, arguments);\n      }\n\n      return deleteLanguage;\n    }()\n  }, {\n    key: \"editlanguage\",\n    value: function editlanguage(language) {\n      this.setState({\n        showEditCard: true,\n        languageForEdit: language\n      });\n    }\n  }, {\n    key: \"closeEditUser\",\n    value: function closeEditUser() {\n      this.setState({\n        showEditCard: false\n      });\n    }\n  }, {\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Language\")));\n    }\n  }, {\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.renderTableRows());\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      var _this2 = this;\n\n      var languages = this.props.languages;\n      console.log(languages);\n      return languages.map(function (lang, key) {\n        return React.createElement(\"tr\", {\n          key: lang._id,\n          onContextMenu: function onContextMenu(e) {\n            return _this2.handeClick(e, lang);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, key), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, _this2.getObjectValue(lang, 'language')));\n      });\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(val) {\n      if (val === undefined || val === null) {\n        return 'N/A';\n      }\n\n      return val;\n    }\n  }, {\n    key: \"getObjectValue\",\n    value: function getObjectValue(obj, val) {\n      if (obj === undefined || obj === null) {\n        return 'N/A';\n      }\n\n      if (obj[val] === undefined || obj[val] === null) {\n        return 'N/A';\n      }\n\n      return obj[val];\n    }\n  }, {\n    key: \"handeClick\",\n    value: function handeClick(e, lang) {\n      e.preventDefault();\n      ContextMenu.show(this.renderContextMenu(e, lang), {\n        left: e.clientX,\n        top: e.clientY\n      });\n    }\n  }, {\n    key: \"renderContextMenu\",\n    value: function renderContextMenu(e, lang) {\n      var _this3 = this;\n\n      return React.createElement(TableContextMenu, {\n        language: lang,\n        isEligable: this.isEligable(),\n        onEdit: function onEdit() {\n          return _this3.editlanguage(lang);\n        },\n        onRemove: function onRemove() {\n          return _this3.deleteLanguage(lang._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this4 = this;\n\n      if (this.state.errorMsg) {\n        return React.createElement(NonIdealState, {\n          icon: \"issue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(H5, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Something went wrong\")), React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Cannot load languages table\"), React.createElement(Button, {\n          icon: \"refresh\",\n          minimal: true,\n          onClick: function onClick() {\n            _this4.props.onRefresh();\n\n            _this4.setState({\n              errorMsg: ''\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }));\n      }\n\n      if (this.props.languages.length === 0) {\n        return React.createElement(NonIdealState, {\n          icon: \"issue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(H5, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"There are no languages in database \")), React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"No data to be displayed\"), React.createElement(Button, {\n          icon: \"refresh\",\n          minimal: true,\n          onClick: this.props.onRefresh,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"overflow-x-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(HTMLTable, {\n        condensed: true,\n        striped: true,\n        interactive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.renderTableHeader(), this.renderTableBody()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var languageForEdit = this.state.languageForEdit;\n      var isLoading = this.props.isLoading;\n\n      if (isLoading) {\n        return React.createElement(Spinner, {\n          intent: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, this.renderContent(), React.createElement(Dialog, {\n        isOpen: this.state.showEditCard,\n        onClose: function onClose() {\n          return _this5.closeEditUser();\n        },\n        canEscapeKeyClose: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"translate\",\n        className: \"header-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), \"Edit User\", React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"cross\",\n        onClick: function onClick() {\n          return _this5.closeEditUser();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(LanguagesForm, {\n        language: languageForEdit.language,\n        buttonCaption: \"Update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return LanguagesTable;\n}(Component);\n\nexport { LanguagesTable as default };\nLanguagesTable.defaultProps = {\n  languages: [],\n  onRefresh: function onRefresh() {\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/AdminPanel/components/Languages/LanguagesTable.jsx"],"names":["React","Component","HTMLTable","Button","NonIdealState","H5","Spinner","ContextMenu","Dialog","Icon","Card","Client","LanguagesForm","CardHeader","CardBody","TableContextMenu","LanguagesTable","state","errorMsg","showEditCard","languageForEdit","role","User","getRole","setState","id","resetErrorMsg","Services","LanguageService","deleteLanguageByID","result","status","Notifications","success","response","alert","props","onRefresh","language","renderTableRows","languages","console","log","map","lang","key","_id","e","handeClick","getObjectValue","val","undefined","obj","preventDefault","show","renderContextMenu","left","clientX","top","clientY","isEligable","editlanguage","deleteLanguage","length","renderTableHeader","renderTableBody","isLoading","renderContent","closeEditUser","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n   HTMLTable,\n   Button,\n   NonIdealState,\n   H5,\n   Spinner,\n   ContextMenu,\n   Dialog,\n   Icon,\n   Card\n} from '@blueprintjs/core';\nimport Client from '../../../../Modules/Client/Client';\nimport LanguagesForm from '../../../../components/Forms/EmployeeForms/EmployeeLanguageForm';\nimport CardHeader from '../../../../components/Card/CardHeader';\nimport CardBody from '../../../../components/Card/CardBody';\nimport TableContextMenu from './TableContextMenu';\n\nexport default class LanguagesTable extends Component {\n   state = {\n      errorMsg: '',\n      showEditCard: false,\n      languageForEdit: {}\n   };\n   isEligable() {\n      let role = Client.User.getRole();\n      if (role === 'ROOT') return false;\n      if (role === 'ADMIN') return false;\n      return true;\n   }\n   resetErrorMsg() {\n      this.setState({\n         errorMsg: ''\n      });\n   }\n   async deleteLanguage(id) {\n      var result;\n      try {\n         this.resetErrorMsg();\n         result = await Client.Services.LanguageService.deleteLanguageByID(id);\n         if (result.status === 200) {\n            Client.Notifications.success('Language removed successfully');\n         }\n      } catch (err) {\n         this.setState({ errorMsg: err.response.status });\n         Client.Notifications.alert('Error, cannot delete language');\n      } finally {\n         this.props.onRefresh();\n      }\n   }\n   editlanguage(language) {\n      this.setState({\n         showEditCard: true,\n         languageForEdit: language\n      });\n   }\n   closeEditUser() {\n      this.setState({ showEditCard: false });\n   }\n   renderTableHeader() {\n      return (\n         <thead>\n            <tr>\n               <th>#</th>\n               <th>Language</th>\n            </tr>\n         </thead>\n      );\n   }\n   renderTableBody() {\n      return <tbody>{this.renderTableRows()}</tbody>;\n   }\n   renderTableRows() {\n      const { languages } = this.props;\n      console.log(languages);\n      return languages.map((lang, key) => {\n         return (\n            <tr key={lang._id} onContextMenu={e => this.handeClick(e, lang)}>\n               <td>{key}</td>\n               <td>{this.getObjectValue(lang, 'language')}</td>\n            </tr>\n         );\n      });\n   }\n\n   getValue(val) {\n      if (val === undefined || val === null) {\n         return 'N/A';\n      }\n      return val;\n   }\n   getObjectValue(obj, val) {\n      if (obj === undefined || obj === null) {\n         return 'N/A';\n      }\n      if (obj[val] === undefined || obj[val] === null) {\n         return 'N/A';\n      }\n      return obj[val];\n   }\n\n   handeClick(e, lang) {\n      e.preventDefault();\n      ContextMenu.show(this.renderContextMenu(e, lang), {\n         left: e.clientX,\n         top: e.clientY\n      });\n   }\n   renderContextMenu(e, lang) {\n      return (\n         <TableContextMenu\n            language={lang}\n            isEligable={this.isEligable()}\n            onEdit={() => this.editlanguage(lang)}\n            onRemove={() => this.deleteLanguage(lang._id)}\n         />\n      );\n   }\n   renderContent() {\n      if (this.state.errorMsg) {\n         return (\n            <NonIdealState icon='issue'>\n               <H5>\n                  <strong>Something went wrong</strong>\n               </H5>\n               <i>Cannot load languages table</i>\n               <Button\n                  icon='refresh'\n                  minimal\n                  onClick={() => {\n                     this.props.onRefresh();\n                     this.setState({\n                        errorMsg: ''\n                     });\n                  }}\n               ></Button>\n            </NonIdealState>\n         );\n      }\n\n      if (this.props.languages.length === 0) {\n         return (\n            <NonIdealState icon='issue'>\n               <H5>\n                  <strong>There are no languages in database </strong>\n               </H5>\n               <i>No data to be displayed</i>\n               <Button\n                  icon='refresh'\n                  minimal\n                  onClick={this.props.onRefresh}\n               ></Button>\n            </NonIdealState>\n         );\n      }\n\n      return (\n         <div className='overflow-x-scroll'>\n            <HTMLTable condensed striped interactive>\n               {this.renderTableHeader()}\n               {this.renderTableBody()}\n            </HTMLTable>\n         </div>\n      );\n   }\n   render() {\n      const { languageForEdit } = this.state;\n      const { isLoading } = this.props;\n\n      if (isLoading) {\n         return <Spinner intent='primary'></Spinner>;\n      }\n\n      return (\n         <div>\n            {this.renderContent()}\n            <Dialog\n               isOpen={this.state.showEditCard}\n               onClose={() => this.closeEditUser()}\n               canEscapeKeyClose={true}\n            >\n               <Card>\n                  <CardHeader>\n                     <Icon icon='translate' className='header-icon' />\n                     Edit User\n                     <div className='float-right'>\n                        <Icon\n                           icon='cross'\n                           onClick={() => this.closeEditUser()}\n                        />\n                     </div>\n                  </CardHeader>\n                  <CardBody className='card-body'>\n                     <LanguagesForm\n                        language={languageForEdit.language}\n                        buttonCaption='Update'\n                     />\n                  </CardBody>\n               </Card>\n            </Dialog>\n         </div>\n      );\n   }\n}\n\nLanguagesTable.defaultProps = {\n   languages: [],\n   onRefresh: function() {\n      return;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}