{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Forms/EmployeeForms/CreateEmployeeForm/CreateEmployeeForm.jsx\";\nimport React, { Component } from 'react';\nimport { Col, Alert, Button, Form, FormGroup, FormText, Label, Input, ButtonGroup } from 'reactstrap';\nimport axios from 'axios';\n\nvar CreateEmployeeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateEmployeeForm, _Component);\n\n  function CreateEmployeeForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateEmployeeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateEmployeeForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      sap: '',\n      name: '',\n      email: '',\n      role: '',\n      supportType: '',\n      project: '',\n      mainlanguage: '',\n      rm: '',\n      message: '',\n      roleArr: [],\n      projectArr: [],\n      supportTypeArr: [],\n      languageArr: []\n    };\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.name] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          sap = _this$state.sap,\n          name = _this$state.name,\n          email = _this$state.email,\n          role = _this$state.role,\n          supportType = _this$state.supportType,\n          project = _this$state.project,\n          mainlanguage = _this$state.mainlanguage,\n          rm = _this$state.rm;\n      var URL = 'http://localhost:3001/api/employees/';\n      var data = {\n        employee: {\n          sap: sap,\n          name: name,\n          email: email,\n          role: role,\n          supportType: supportType,\n          project: project,\n          mainlanguage: mainlanguage,\n          rm: rm\n        }\n      };\n      axios.post(URL, data).then(function (res) {\n        _this.setState({\n          created: 'ok',\n          message: 'Employee saved successfully'\n        });\n\n        document.getElementById('getEmployeesData').click();\n      }).catch(function (err) {\n        _this.setState({\n          created: 'error',\n          message: 'Something went wrong',\n          err: err\n        });\n      });\n    };\n\n    _this.clearForm = function () {\n      _this.setState({\n        sap: '',\n        name: '',\n        email: '',\n        role: '',\n        supportType: '',\n        project: '',\n        mainlanguage: '',\n        rm: '',\n        message: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateEmployeeForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getRoles();\n      this.getProjects();\n      this.getSupportTypes();\n      this.getLanuages();\n    }\n  }, {\n    key: \"getRoles\",\n    value: function getRoles() {\n      var _this2 = this;\n\n      var URL = 'http://localhost:3001/api/employees/roles/all';\n      axios.get(URL).then(function (res) {\n        _this2.setState({\n          roleArr: res.data,\n          role: res.data[0]._id\n        });\n      }).catch(function (err) {\n        alert('Could not load employee roles');\n        console.log(JSON.stringify(err));\n      });\n    }\n  }, {\n    key: \"renderRolesOptions\",\n    value: function renderRolesOptions() {\n      return this.state.roleArr.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, option.role);\n      });\n    }\n  }, {\n    key: \"getProjects\",\n    value: function getProjects() {\n      var _this3 = this;\n\n      var URL = 'http://localhost:3001/api/projects';\n      axios.get(URL).then(function (res) {\n        _this3.setState({\n          projectArr: res.data,\n          project: res.data[0]._id\n        });\n      }).catch(function (err) {\n        alert('Could not load projects');\n        console.log(JSON.stringify(err));\n      });\n    }\n  }, {\n    key: \"renderProjectOptions\",\n    value: function renderProjectOptions() {\n      return this.state.projectArr.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, option.name);\n      });\n    }\n  }, {\n    key: \"getSupportTypes\",\n    value: function getSupportTypes() {\n      this.setState({\n        supportTypeArr: ['Dedicated', 'Shared'],\n        supportType: 'Dedicated'\n      });\n    }\n  }, {\n    key: \"renderSupportTypesOptions\",\n    value: function renderSupportTypesOptions() {\n      return this.state.supportTypeArr.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, option);\n      });\n    }\n  }, {\n    key: \"getLanuages\",\n    value: function getLanuages() {\n      var _this4 = this;\n\n      var URL = 'http://localhost:3001/api/languages';\n      axios.get(URL).then(function (res) {\n        _this4.setState({\n          languageArr: res.data,\n          mainlanguage: res.data[0]._id\n        });\n      }).catch(function (err) {\n        alert('Could not load languages');\n        console.log(JSON.stringify(err));\n      });\n    }\n  }, {\n    key: \"renderLanguageOptions\",\n    value: function renderLanguageOptions() {\n      return this.state.languageArr.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, option.language);\n      });\n    }\n  }, {\n    key: \"setInputTheme\",\n    value: function setInputTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"alertStyle\",\n    value: function alertStyle() {\n      var created = this.state.created;\n      if (created === 'ok') return 'border-success text-success';\n      if (created === 'error') return 'border-danger text-danger';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          sap = _this$state2.sap,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          role = _this$state2.role,\n          supportType = _this$state2.supportType,\n          project = _this$state2.project,\n          mainlanguage = _this$state2.mainlanguage,\n          rm = _this$state2.rm,\n          message = _this$state2.message;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Create New Employee\"), message !== '' && React.createElement(Alert, {\n        className: \"bg-transparent border rounded-corners text-center \".concat(this.alertStyle()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, message), React.createElement(Form, {\n        className: \"mb-2\",\n        ref: \"createProjectForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"sap\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"SAP\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"sap\",\n        id: \"sap\",\n        ref: \"sap\",\n        size: \"sm\",\n        value: sap,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Please provide SAP Number\")), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"email\",\n        md: 2,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        ref: \"email\",\n        size: \"sm\",\n        value: email,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Please provide email\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"name\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        ref: \"name\",\n        size: \"sm\",\n        value: name,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Please provide Employee Name\")), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"role\",\n        md: 2,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Role\"), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"role\",\n        id: \"role\",\n        ref: \"role\",\n        size: \"sm\",\n        value: role,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, this.renderRolesOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Please provide Role\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"email\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Support Type\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"supportType\",\n        id: \"supportType\",\n        ref: \"supportType\",\n        size: \"sm\",\n        value: supportType,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, this.renderSupportTypesOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Please provide support type\")), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"Project\",\n        md: 2,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Project\"), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"project\",\n        id: \"project\",\n        ref: \"project\",\n        size: \"sm\",\n        value: project,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, this.renderProjectOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Please provide Project Name\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"mainlanguage\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Main Language\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"mainlanguage\",\n        id: \"mainlanguage\",\n        ref: \"mainlanguage\",\n        size: \"sm\",\n        value: mainlanguage,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, this.renderLanguageOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"Please provide main language\")), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"rm\",\n        md: 2,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \"Reporting Manager\"), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"input\",\n        name: \"rm\",\n        id: \"rm\",\n        ref: \"rm\",\n        size: \"sm\",\n        value: rm,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"Please provide Reporting Manager Name\"))), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        onClick: this.clearForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Add\")))));\n    }\n  }]);\n\n  return CreateEmployeeForm;\n}(Component);\n\nexport { CreateEmployeeForm as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Forms/EmployeeForms/CreateEmployeeForm/CreateEmployeeForm.jsx"],"names":["React","Component","Col","Alert","Button","Form","FormGroup","FormText","Label","Input","ButtonGroup","axios","CreateEmployeeForm","state","theme","props","sap","name","email","role","supportType","project","mainlanguage","rm","message","roleArr","projectArr","supportTypeArr","languageArr","onChange","e","target","value","setState","onSubmit","preventDefault","URL","data","employee","post","then","res","created","document","getElementById","click","catch","err","clearForm","getRoles","getProjects","getSupportTypes","getLanuages","get","_id","alert","console","log","JSON","stringify","map","option","key","language","alertStyle","setInputTheme","renderRolesOptions","renderSupportTypesOptions","renderProjectOptions","renderLanguageOptions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACGC,GADH,EAEGC,KAFH,EAGGC,MAHH,EAIGC,IAJH,EAKGC,SALH,EAMGC,QANH,EAOGC,KAPH,EAQGC,KARH,EASGC,WATH,QAUO,YAVP;AAWA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,kB;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD,KADb;AAELE,MAAAA,GAAG,EAAE,EAFA;AAGLC,MAAAA,IAAI,EAAE,EAHD;AAILC,MAAAA,KAAK,EAAE,EAJF;AAKLC,MAAAA,IAAI,EAAE,EALD;AAMLC,MAAAA,WAAW,EAAE,EANR;AAOLC,MAAAA,OAAO,EAAE,EAPJ;AAQLC,MAAAA,YAAY,EAAE,EART;AASLC,MAAAA,EAAE,EAAE,EATC;AAULC,MAAAA,OAAO,EAAE,EAVJ;AAWLC,MAAAA,OAAO,EAAE,EAXJ;AAYLC,MAAAA,UAAU,EAAE,EAZP;AAaLC,MAAAA,cAAc,EAAE,EAbX;AAcLC,MAAAA,WAAW,EAAE;AAdR,K;;UA+GRC,Q,GAAW,UAAAC,CAAC,EAAI;AACb,UAAMjB,KAAK,GAAG,MAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACiB,CAAC,CAACC,MAAF,CAASd,IAAV,CAAL,GAAuBa,CAAC,CAACC,MAAF,CAASC,KAAhC;;AACA,YAAKC,QAAL,CAAcpB,KAAd;AACF,K;;UAEDqB,Q,GAAW,UAAAJ,CAAC,EAAI;AACbA,MAAAA,CAAC,CAACK,cAAF;AADa,wBAYT,MAAKtB,KAZI;AAAA,UAIVG,GAJU,eAIVA,GAJU;AAAA,UAKVC,IALU,eAKVA,IALU;AAAA,UAMVC,KANU,eAMVA,KANU;AAAA,UAOVC,IAPU,eAOVA,IAPU;AAAA,UAQVC,WARU,eAQVA,WARU;AAAA,UASVC,OATU,eASVA,OATU;AAAA,UAUVC,YAVU,eAUVA,YAVU;AAAA,UAWVC,EAXU,eAWVA,EAXU;AAcb,UAAMa,GAAG,GAAG,sCAAZ;AAEA,UAAMC,IAAI,GAAG;AACVC,QAAAA,QAAQ,EAAE;AACPtB,UAAAA,GAAG,EAAEA,GADE;AAEPC,UAAAA,IAAI,EAAEA,IAFC;AAGPC,UAAAA,KAAK,EAAEA,KAHA;AAIPC,UAAAA,IAAI,EAAEA,IAJC;AAKPC,UAAAA,WAAW,EAAEA,WALN;AAMPC,UAAAA,OAAO,EAAEA,OANF;AAOPC,UAAAA,YAAY,EAAEA,YAPP;AAQPC,UAAAA,EAAE,EAAEA;AARG;AADA,OAAb;AAaAZ,MAAAA,KAAK,CACD4B,IADJ,CACSH,GADT,EACcC,IADd,EAEIG,IAFJ,CAES,UAAAC,GAAG,EAAI;AACV,cAAKR,QAAL,CAAc;AACXS,UAAAA,OAAO,EAAE,IADE;AAEXlB,UAAAA,OAAO,EAAE;AAFE,SAAd;;AAIAmB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,KAA5C;AACF,OARJ,EASIC,KATJ,CASU,UAAAC,GAAG,EAAI;AACX,cAAKd,QAAL,CAAc;AACXS,UAAAA,OAAO,EAAE,OADE;AAEXlB,UAAAA,OAAO,EAAE,sBAFE;AAGXuB,UAAAA,GAAG,EAAEA;AAHM,SAAd;AAKF,OAfJ;AAgBF,K;;UAEDC,S,GAAY,YAAM;AACf,YAAKf,QAAL,CAAc;AACXjB,QAAAA,GAAG,EAAE,EADM;AAEXC,QAAAA,IAAI,EAAE,EAFK;AAGXC,QAAAA,KAAK,EAAE,EAHI;AAIXC,QAAAA,IAAI,EAAE,EAJK;AAKXC,QAAAA,WAAW,EAAE,EALF;AAMXC,QAAAA,OAAO,EAAE,EANE;AAOXC,QAAAA,YAAY,EAAE,EAPH;AAQXC,QAAAA,EAAE,EAAE,EARO;AASXC,QAAAA,OAAO,EAAE;AATE,OAAd;AAWF,K;;;;;;;wCA/JmB;AACjB,WAAKyB,QAAL;AACA,WAAKC,WAAL;AACA,WAAKC,eAAL;AACA,WAAKC,WAAL;AACF;;;+BAEU;AAAA;;AACR,UAAMhB,GAAG,GAAG,+CAAZ;AACAzB,MAAAA,KAAK,CACD0C,GADJ,CACQjB,GADR,EAEII,IAFJ,CAES,UAAAC,GAAG,EAAI;AACV,QAAA,MAAI,CAACR,QAAL,CAAc;AACXR,UAAAA,OAAO,EAAEgB,GAAG,CAACJ,IADF;AAEXlB,UAAAA,IAAI,EAAEsB,GAAG,CAACJ,IAAJ,CAAS,CAAT,EAAYiB;AAFP,SAAd;AAIF,OAPJ,EAQIR,KARJ,CAQU,UAAAC,GAAG,EAAI;AACXQ,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeZ,GAAf,CAAZ;AACF,OAXJ;AAYF;;;yCACoB;AAClB,aAAO,KAAKlC,KAAL,CAAWY,OAAX,CAAmBmC,GAAnB,CAAuB,UAACC,MAAD,EAASC,GAAT,EAAiB;AAC5C,eACG;AAAQ,UAAA,GAAG,EAAEA,GAAb;AAAkB,UAAA,KAAK,EAAED,MAAM,CAACP,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIO,MAAM,CAAC1C,IADX,CADH;AAKF,OANM,CAAP;AAOF;;;kCACa;AAAA;;AACX,UAAMiB,GAAG,GAAG,oCAAZ;AACAzB,MAAAA,KAAK,CACD0C,GADJ,CACQjB,GADR,EAEII,IAFJ,CAES,UAAAC,GAAG,EAAI;AACV,QAAA,MAAI,CAACR,QAAL,CAAc;AACXP,UAAAA,UAAU,EAAEe,GAAG,CAACJ,IADL;AAEXhB,UAAAA,OAAO,EAAEoB,GAAG,CAACJ,IAAJ,CAAS,CAAT,EAAYiB;AAFV,SAAd;AAIF,OAPJ,EAQIR,KARJ,CAQU,UAAAC,GAAG,EAAI;AACXQ,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeZ,GAAf,CAAZ;AACF,OAXJ;AAYF;;;2CACsB;AACpB,aAAO,KAAKlC,KAAL,CAAWa,UAAX,CAAsBkC,GAAtB,CAA0B,UAACC,MAAD,EAASC,GAAT,EAAiB;AAC/C,eACG;AAAQ,UAAA,GAAG,EAAEA,GAAb;AAAkB,UAAA,KAAK,EAAED,MAAM,CAACP,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIO,MAAM,CAAC5C,IADX,CADH;AAKF,OANM,CAAP;AAOF;;;sCACiB;AACf,WAAKgB,QAAL,CAAc;AACXN,QAAAA,cAAc,EAAE,CAAC,WAAD,EAAc,QAAd,CADL;AAEXP,QAAAA,WAAW,EAAE;AAFF,OAAd;AAIF;;;gDAC2B;AACzB,aAAO,KAAKP,KAAL,CAAWc,cAAX,CAA0BiC,GAA1B,CAA8B,UAACC,MAAD,EAASC,GAAT,EAAiB;AACnD,eACG;AAAQ,UAAA,GAAG,EAAEA,GAAb;AAAkB,UAAA,KAAK,EAAED,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIA,MADJ,CADH;AAKF,OANM,CAAP;AAOF;;;kCACa;AAAA;;AACX,UAAMzB,GAAG,GAAG,qCAAZ;AACAzB,MAAAA,KAAK,CACD0C,GADJ,CACQjB,GADR,EAEII,IAFJ,CAES,UAAAC,GAAG,EAAI;AACV,QAAA,MAAI,CAACR,QAAL,CAAc;AACXL,UAAAA,WAAW,EAAEa,GAAG,CAACJ,IADN;AAEXf,UAAAA,YAAY,EAAEmB,GAAG,CAACJ,IAAJ,CAAS,CAAT,EAAYiB;AAFf,SAAd;AAIF,OAPJ,EAQIR,KARJ,CAQU,UAAAC,GAAG,EAAI;AACXQ,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeZ,GAAf,CAAZ;AACF,OAXJ;AAYF;;;4CACuB;AACrB,aAAO,KAAKlC,KAAL,CAAWe,WAAX,CAAuBgC,GAAvB,CAA2B,UAACC,MAAD,EAASC,GAAT,EAAiB;AAChD,eACG;AAAQ,UAAA,GAAG,EAAEA,GAAb;AAAkB,UAAA,KAAK,EAAED,MAAM,CAACP,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIO,MAAM,CAACE,QADX,CADH;AAKF,OANM,CAAP;AAOF;;;oCAoEe;AAAA,UACLjD,KADK,GACK,KAAKC,KADV,CACLD,KADK;;AAEb,UAAIA,KAAK,KAAK,MAAd,EAAsB;AACnB,eAAO,mCAAP;AACF;;AACD,UAAIA,KAAK,KAAK,OAAd,EAAuB;AACpB,eAAO,EAAP;AACF;AACH;;;iCAEY;AAAA,UACF4B,OADE,GACU,KAAK7B,KADf,CACF6B,OADE;AAEV,UAAIA,OAAO,KAAK,IAAhB,EAAsB,OAAO,6BAAP;AACtB,UAAIA,OAAO,KAAK,OAAhB,EAAyB,OAAO,2BAAP;AAC3B;;;6BAEQ;AAAA,yBAWF,KAAK7B,KAXH;AAAA,UAEHG,GAFG,gBAEHA,GAFG;AAAA,UAGHC,IAHG,gBAGHA,IAHG;AAAA,UAIHC,KAJG,gBAIHA,KAJG;AAAA,UAKHC,IALG,gBAKHA,IALG;AAAA,UAMHC,WANG,gBAMHA,WANG;AAAA,UAOHC,OAPG,gBAOHA,OAPG;AAAA,UAQHC,YARG,gBAQHA,YARG;AAAA,UASHC,EATG,gBASHA,EATG;AAAA,UAUHC,OAVG,gBAUHA,OAVG;AAaN,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADH,EAEIA,OAAO,KAAK,EAAZ,IACE,oBAAC,KAAD;AACG,QAAA,SAAS,8DAAuD,KAAKwC,UAAL,EAAvD,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGIxC,OAHJ,CAHN,EASG,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,GAAG,EAAC,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,GAAG,EAAC,KAAlC;AAAwC,QAAA,EAAE,EAAE,CAA5C;AAA+C,QAAA,IAAI,EAAC,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,EAIG,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AACG,QAAA,IAAI,EAAC,QADR;AAEG,QAAA,IAAI,EAAC,KAFR;AAGG,QAAA,EAAE,EAAC,KAHN;AAIG,QAAA,GAAG,EAAC,KAJP;AAKG,QAAA,IAAI,EAAC,IALR;AAMG,QAAA,KAAK,EAAER,GANV;AAOG,QAAA,QAAQ,EAAE,KAAKa,QAPlB;AAQG,QAAA,WAAW,EAAC,EARf;AASG,QAAA,SAAS,EAAE,KAAKoC,aAAL,EATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAYG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAZH,CAJH,EAkBG,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,GAAG,EAAC,OAAlC;AAA0C,QAAA,EAAE,EAAE,CAA9C;AAAiD,QAAA,IAAI,EAAC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlBH,EAqBG,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AACG,QAAA,IAAI,EAAC,OADR;AAEG,QAAA,IAAI,EAAC,OAFR;AAGG,QAAA,EAAE,EAAC,OAHN;AAIG,QAAA,GAAG,EAAC,OAJP;AAKG,QAAA,IAAI,EAAC,IALR;AAMG,QAAA,KAAK,EAAE/C,KANV;AAOG,QAAA,QAAQ,EAAE,KAAKW,QAPlB;AAQG,QAAA,WAAW,EAAC,EARf;AASG,QAAA,SAAS,EAAE,KAAKoC,aAAL,EATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAYG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAZH,CArBH,CADH,EAqCG,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,GAAG,EAAC,MAAlC;AAAyC,QAAA,EAAE,EAAE,CAA7C;AAAgD,QAAA,IAAI,EAAC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,EAIG,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AACG,QAAA,IAAI,EAAC,MADR;AAEG,QAAA,IAAI,EAAC,MAFR;AAGG,QAAA,EAAE,EAAC,MAHN;AAIG,QAAA,GAAG,EAAC,MAJP;AAKG,QAAA,IAAI,EAAC,IALR;AAMG,QAAA,KAAK,EAAEhD,IANV;AAOG,QAAA,QAAQ,EAAE,KAAKY,QAPlB;AAQG,QAAA,WAAW,EAAC,EARf;AASG,QAAA,SAAS,EAAE,KAAKoC,aAAL,EATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAYG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAZH,CAJH,EAkBG,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,GAAG,EAAC,MAAlC;AAAyC,QAAA,EAAE,EAAE,CAA7C;AAAgD,QAAA,IAAI,EAAC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBH,EAqBG,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AACG,QAAA,IAAI,EAAC,QADR;AAEG,QAAA,IAAI,EAAC,MAFR;AAGG,QAAA,EAAE,EAAC,MAHN;AAIG,QAAA,GAAG,EAAC,MAJP;AAKG,QAAA,IAAI,EAAC,IALR;AAMG,QAAA,KAAK,EAAE9C,IANV;AAOG,QAAA,QAAQ,EAAE,KAAKU,QAPlB;AAQG,QAAA,WAAW,EAAC,EARf;AASG,QAAA,SAAS,EAAE,KAAKoC,aAAL,EATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI,KAAKC,kBAAL,EAXJ,CADH,EAcG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAdH,CArBH,CArCH,EA2EG,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,GAAG,EAAC,OAAlC;AAA0C,QAAA,EAAE,EAAE,CAA9C;AAAiD,QAAA,IAAI,EAAC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADH,EAIG,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AACG,QAAA,IAAI,EAAC,QADR;AAEG,QAAA,IAAI,EAAC,aAFR;AAGG,QAAA,EAAE,EAAC,aAHN;AAIG,QAAA,GAAG,EAAC,aAJP;AAKG,QAAA,IAAI,EAAC,IALR;AAMG,QAAA,KAAK,EAAE9C,WANV;AAOG,QAAA,QAAQ,EAAE,KAAKS,QAPlB;AAQG,QAAA,WAAW,EAAC,EARf;AASG,QAAA,SAAS,EAAE,KAAKoC,aAAL,EATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI,KAAKE,yBAAL,EAXJ,CADH,EAcG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAdH,CAJH,EAoBG,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,GAAG,EAAC,SAAlC;AAA4C,QAAA,EAAE,EAAE,CAAhD;AAAmD,QAAA,IAAI,EAAC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBApBH,EAuBG,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AACG,QAAA,IAAI,EAAC,QADR;AAEG,QAAA,IAAI,EAAC,SAFR;AAGG,QAAA,EAAE,EAAC,SAHN;AAIG,QAAA,GAAG,EAAC,SAJP;AAKG,QAAA,IAAI,EAAC,IALR;AAMG,QAAA,KAAK,EAAE9C,OANV;AAOG,QAAA,QAAQ,EAAE,KAAKQ,QAPlB;AAQG,QAAA,WAAW,EAAC,EARf;AASG,QAAA,SAAS,EAAE,KAAKoC,aAAL,EATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI,KAAKG,oBAAL,EAXJ,CADH,EAcG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAdH,CAvBH,CA3EH,EAmHG,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AACG,QAAA,SAAS,EAAC,YADb;AAEG,QAAA,GAAG,EAAC,cAFP;AAGG,QAAA,EAAE,EAAE,CAHP;AAIG,QAAA,IAAI,EAAC,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADH,EASG,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AACG,QAAA,IAAI,EAAC,QADR;AAEG,QAAA,IAAI,EAAC,cAFR;AAGG,QAAA,EAAE,EAAC,cAHN;AAIG,QAAA,GAAG,EAAC,cAJP;AAKG,QAAA,IAAI,EAAC,IALR;AAMG,QAAA,KAAK,EAAE9C,YANV;AAOG,QAAA,QAAQ,EAAE,KAAKO,QAPlB;AAQG,QAAA,WAAW,EAAC,EARf;AASG,QAAA,SAAS,EAAE,KAAKoC,aAAL,EATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI,KAAKI,qBAAL,EAXJ,CADH,EAcG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAdH,CATH,EAyBG,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,GAAG,EAAC,IAAlC;AAAuC,QAAA,EAAE,EAAE,CAA3C;AAA8C,QAAA,IAAI,EAAC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAzBH,EA4BG,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AACG,QAAA,IAAI,EAAC,OADR;AAEG,QAAA,IAAI,EAAC,IAFR;AAGG,QAAA,EAAE,EAAC,IAHN;AAIG,QAAA,GAAG,EAAC,IAJP;AAKG,QAAA,IAAI,EAAC,IALR;AAMG,QAAA,KAAK,EAAE9C,EANV;AAOG,QAAA,QAAQ,EAAE,KAAKM,QAPlB;AAQG,QAAA,WAAW,EAAC,EARf;AASG,QAAA,SAAS,EAAE,KAAKoC,aAAL,EATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAYG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAZH,CA5BH,CAnHH,EA+JG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,OAAO,EAAE,KAAKjB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,EAIG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,IAAI,EAAC,IAA7B;AAAkC,QAAA,OAAO,EAAE,KAAKd,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJH,CADH,CA/JH,CATH,CADH;AAsLF;;;;EAtY4CjC,S;;SAA3BW,kB","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Col,\r\n   Alert,\r\n   Button,\r\n   Form,\r\n   FormGroup,\r\n   FormText,\r\n   Label,\r\n   Input,\r\n   ButtonGroup\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateEmployeeForm extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      sap: '',\r\n      name: '',\r\n      email: '',\r\n      role: '',\r\n      supportType: '',\r\n      project: '',\r\n      mainlanguage: '',\r\n      rm: '',\r\n      message: '',\r\n      roleArr: [],\r\n      projectArr: [],\r\n      supportTypeArr: [],\r\n      languageArr: []\r\n   };\r\n\r\n   componentDidMount() {\r\n      this.getRoles();\r\n      this.getProjects();\r\n      this.getSupportTypes();\r\n      this.getLanuages();\r\n   }\r\n\r\n   getRoles() {\r\n      const URL = 'http://localhost:3001/api/employees/roles/all';\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               roleArr: res.data,\r\n               role: res.data[0]._id\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Could not load employee roles');\r\n            console.log(JSON.stringify(err));\r\n         });\r\n   }\r\n   renderRolesOptions() {\r\n      return this.state.roleArr.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option._id}>\r\n               {option.role}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n   getProjects() {\r\n      const URL = 'http://localhost:3001/api/projects';\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               projectArr: res.data,\r\n               project: res.data[0]._id\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Could not load projects');\r\n            console.log(JSON.stringify(err));\r\n         });\r\n   }\r\n   renderProjectOptions() {\r\n      return this.state.projectArr.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option._id}>\r\n               {option.name}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n   getSupportTypes() {\r\n      this.setState({\r\n         supportTypeArr: ['Dedicated', 'Shared'],\r\n         supportType: 'Dedicated'\r\n      });\r\n   }\r\n   renderSupportTypesOptions() {\r\n      return this.state.supportTypeArr.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option}>\r\n               {option}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n   getLanuages() {\r\n      const URL = 'http://localhost:3001/api/languages';\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               languageArr: res.data,\r\n               mainlanguage: res.data[0]._id\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Could not load languages');\r\n            console.log(JSON.stringify(err));\r\n         });\r\n   }\r\n   renderLanguageOptions() {\r\n      return this.state.languageArr.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option._id}>\r\n               {option.language}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n   onChange = e => {\r\n      const state = this.state;\r\n      state[e.target.name] = e.target.value;\r\n      this.setState(state);\r\n   };\r\n\r\n   onSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const {\r\n         sap,\r\n         name,\r\n         email,\r\n         role,\r\n         supportType,\r\n         project,\r\n         mainlanguage,\r\n         rm\r\n      } = this.state;\r\n\r\n      const URL = 'http://localhost:3001/api/employees/';\r\n\r\n      const data = {\r\n         employee: {\r\n            sap: sap,\r\n            name: name,\r\n            email: email,\r\n            role: role,\r\n            supportType: supportType,\r\n            project: project,\r\n            mainlanguage: mainlanguage,\r\n            rm: rm\r\n         }\r\n      };\r\n\r\n      axios\r\n         .post(URL, data)\r\n         .then(res => {\r\n            this.setState({\r\n               created: 'ok',\r\n               message: 'Employee saved successfully'\r\n            });\r\n            document.getElementById('getEmployeesData').click();\r\n         })\r\n         .catch(err => {\r\n            this.setState({\r\n               created: 'error',\r\n               message: 'Something went wrong',\r\n               err: err\r\n            });\r\n         });\r\n   };\r\n\r\n   clearForm = () => {\r\n      this.setState({\r\n         sap: '',\r\n         name: '',\r\n         email: '',\r\n         role: '',\r\n         supportType: '',\r\n         project: '',\r\n         mainlanguage: '',\r\n         rm: '',\r\n         message: ''\r\n      });\r\n   };\r\n\r\n   setInputTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   alertStyle() {\r\n      const { created } = this.state;\r\n      if (created === 'ok') return 'border-success text-success';\r\n      if (created === 'error') return 'border-danger text-danger';\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         sap,\r\n         name,\r\n         email,\r\n         role,\r\n         supportType,\r\n         project,\r\n         mainlanguage,\r\n         rm,\r\n         message\r\n      } = this.state;\r\n\r\n      return (\r\n         <div>\r\n            <h5>Create New Employee</h5>\r\n            {message !== '' && (\r\n               <Alert\r\n                  className={`bg-transparent border rounded-corners text-center ${this.alertStyle()}`}\r\n               >\r\n                  {message}\r\n               </Alert>\r\n            )}\r\n            <Form className='mb-2' ref='createProjectForm'>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='sap' md={3} size='sm'>\r\n                     SAP\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='number'\r\n                        name='sap'\r\n                        id='sap'\r\n                        ref='sap'\r\n                        size='sm'\r\n                        value={sap}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setInputTheme()}\r\n                     />\r\n                     <FormText>Please provide SAP Number</FormText>\r\n                  </Col>\r\n                  <Label className='text-right' for='email' md={2} size='sm'>\r\n                     Email\r\n                  </Label>\r\n                  <Col md={4}>\r\n                     <Input\r\n                        type='email'\r\n                        name='email'\r\n                        id='email'\r\n                        ref='email'\r\n                        size='sm'\r\n                        value={email}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setInputTheme()}\r\n                     />\r\n                     <FormText>Please provide email</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='name' md={3} size='sm'>\r\n                     Name\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='text'\r\n                        name='name'\r\n                        id='name'\r\n                        ref='name'\r\n                        size='sm'\r\n                        value={name}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setInputTheme()}\r\n                     />\r\n                     <FormText>Please provide Employee Name</FormText>\r\n                  </Col>\r\n                  <Label className='text-right' for='role' md={2} size='sm'>\r\n                     Role\r\n                  </Label>\r\n                  <Col md={4}>\r\n                     <Input\r\n                        type='select'\r\n                        name='role'\r\n                        id='role'\r\n                        ref='role'\r\n                        size='sm'\r\n                        value={role}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setInputTheme()}\r\n                     >\r\n                        {this.renderRolesOptions()}\r\n                     </Input>\r\n                     <FormText>Please provide Role</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='email' md={3} size='sm'>\r\n                     Support Type\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='select'\r\n                        name='supportType'\r\n                        id='supportType'\r\n                        ref='supportType'\r\n                        size='sm'\r\n                        value={supportType}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setInputTheme()}\r\n                     >\r\n                        {this.renderSupportTypesOptions()}\r\n                     </Input>\r\n                     <FormText>Please provide support type</FormText>\r\n                  </Col>\r\n                  <Label className='text-right' for='Project' md={2} size='sm'>\r\n                     Project\r\n                  </Label>\r\n                  <Col md={4}>\r\n                     <Input\r\n                        type='select'\r\n                        name='project'\r\n                        id='project'\r\n                        ref='project'\r\n                        size='sm'\r\n                        value={project}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setInputTheme()}\r\n                     >\r\n                        {this.renderProjectOptions()}\r\n                     </Input>\r\n                     <FormText>Please provide Project Name</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label\r\n                     className='text-right'\r\n                     for='mainlanguage'\r\n                     md={3}\r\n                     size='sm'\r\n                  >\r\n                     Main Language\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='select'\r\n                        name='mainlanguage'\r\n                        id='mainlanguage'\r\n                        ref='mainlanguage'\r\n                        size='sm'\r\n                        value={mainlanguage}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setInputTheme()}\r\n                     >\r\n                        {this.renderLanguageOptions()}\r\n                     </Input>\r\n                     <FormText>Please provide main language</FormText>\r\n                  </Col>\r\n                  <Label className='text-right' for='rm' md={2} size='sm'>\r\n                     Reporting Manager\r\n                  </Label>\r\n                  <Col md={4}>\r\n                     <Input\r\n                        type='input'\r\n                        name='rm'\r\n                        id='rm'\r\n                        ref='rm'\r\n                        size='sm'\r\n                        value={rm}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setInputTheme()}\r\n                     />\r\n                     <FormText>Please provide Reporting Manager Name</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n\r\n               <div className='text-right'>\r\n                  <ButtonGroup>\r\n                     <Button size='sm' onClick={this.clearForm}>\r\n                        Clear\r\n                     </Button>\r\n                     <Button color='primary' size='sm' onClick={this.onSubmit}>\r\n                        Add\r\n                     </Button>\r\n                  </ButtonGroup>\r\n               </div>\r\n            </Form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}