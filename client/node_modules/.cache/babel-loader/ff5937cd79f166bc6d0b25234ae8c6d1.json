{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { ContextMenuTarget } from \"@blueprintjs/core\";\nimport * as React from \"react\";\n/**\n * Since the ContextMenuTarget uses the `onContextMenu` prop instead\n * `element.addEventListener`, the prop can be lost. This wrapper helps us\n * maintain context menu fuctionality when doing fancy React.cloneElement\n * chains.\n */\n\nvar ContextMenuTargetWrapper =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ContextMenuTargetWrapper, _super);\n\n  function ContextMenuTargetWrapper() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ContextMenuTargetWrapper.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        children = _a.children,\n        style = _a.style;\n    return React.createElement(\"div\", {\n      className: className,\n      style: style\n    }, children);\n  };\n\n  ContextMenuTargetWrapper.prototype.renderContextMenu = function (e) {\n    return this.props.renderContextMenu(e);\n  };\n\n  ContextMenuTargetWrapper = tslib_1.__decorate([ContextMenuTarget], ContextMenuTargetWrapper);\n  return ContextMenuTargetWrapper;\n}(React.PureComponent);\n\nexport { ContextMenuTargetWrapper };","map":null,"metadata":{},"sourceType":"module"}