{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/ScoreCard/ScoreCard.jsx\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../QuickView/QuickView.css\";\nimport { Card, CardTitle, CardSubtitle, CardBody, CardText, Badge } from \"reactstrap\";\nimport { Col } from \"reactstrap\";\nvar pStyle = {\n  \"min-height\": \"150px\"\n};\n/*TODO:\r\n   -- fix title / badge relation\r\n      -- overlaping title over badge\r\n      -- hight issue on mid horizontal size\r\n   FIXME:\r\n   -- state mutation warrning!\r\n*/\n\nvar ScoreCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScoreCard, _Component);\n\n  function ScoreCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScoreCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScoreCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      name: \"N/A\",\n      icon: \"\",\n      proc: 0,\n      number: 0,\n      bgColor: \"bg-c-white\",\n      txtColor: \"text-gray\"\n    };\n\n    _this.getTrend = function (value) {\n      if (value < 0) return \"-\";else if (value > 0) return \"+\";else return \" \";\n    };\n\n    _this.getBgColor = function (trend) {\n      _this.state.txtColor = \"text-white\";\n      if (trend < 0) return \"bg-danger\";else if (trend > 0) return \"bg-success \";else {\n        _this.state.txtColor = \"text-black\";\n        return \"\";\n      }\n    };\n\n    _this.getIcon = function (iconName) {\n      if (!iconName) return \"fas fa-bug\";else return iconName;\n    };\n\n    return _this;\n  }\n\n  _createClass(ScoreCard, [{\n    key: \"setTheme\",\n    value: function setTheme(theme) {\n      if (theme === \"dark\") {\n        return \"bg-dark text-white\";\n      }\n\n      if (theme === \"light\") {\n        return \"bg-light\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          icon = _this$props.icon,\n          procValue = _this$props.procValue,\n          numberValue = _this$props.numberValue,\n          trend = _this$props.trend;\n      return React.createElement(Col, {\n        xl: \"2\",\n        lg: \"3\",\n        md: \"3\",\n        sm: \"6\",\n        xs: \"12\",\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.setTheme(this.props.theme),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        style: pStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        className: \"\".concat(this.getBgColor(trend), \" \").concat(this.state.txtColor, \" float-right\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.getTrend(this.props.trend) + procValue, \"%\")), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, title), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"\".concat(this.getIcon(icon), \" text-secondary\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"float-right text-mid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, numberValue))))));\n    }\n  }]);\n\n  return ScoreCard;\n}(Component);\n\nexport { ScoreCard as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/ScoreCard/ScoreCard.jsx"],"names":["React","Component","Card","CardTitle","CardSubtitle","CardBody","CardText","Badge","Col","pStyle","ScoreCard","state","theme","props","name","icon","proc","number","bgColor","txtColor","getTrend","value","getBgColor","trend","getIcon","iconName","title","procValue","numberValue","setTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../QuickView/QuickView.css\";\r\n\r\nimport {\r\n   Card,\r\n   CardTitle,\r\n   CardSubtitle,\r\n   CardBody,\r\n   CardText,\r\n   Badge\r\n} from \"reactstrap\";\r\nimport { Col } from \"reactstrap\";\r\n\r\nconst pStyle = {\r\n   \"min-height\": \"150px\"\r\n};\r\n\r\n/*TODO:\r\n   -- fix title / badge relation\r\n      -- overlaping title over badge\r\n      -- hight issue on mid horizontal size\r\n   FIXME:\r\n   -- state mutation warrning!\r\n*/\r\nexport default class ScoreCard extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      name: \"N/A\",\r\n      icon: \"\",\r\n      proc: 0,\r\n      number: 0,\r\n      bgColor: \"bg-c-white\",\r\n      txtColor: \"text-gray\"\r\n   };\r\n\r\n   setTheme(theme) {\r\n      if (theme === \"dark\") {\r\n         return \"bg-dark text-white\";\r\n      }\r\n      if (theme === \"light\") {\r\n         return \"bg-light\";\r\n      }\r\n   }\r\n\r\n   getTrend = value => {\r\n      if (value < 0) return \"-\";\r\n      else if (value > 0) return \"+\";\r\n      else return \" \";\r\n   };\r\n\r\n   getBgColor = trend => {\r\n      this.state.txtColor = \"text-white\";\r\n      if (trend < 0) return \"bg-danger\";\r\n      else if (trend > 0) return \"bg-success \";\r\n      else {\r\n         this.state.txtColor = \"text-black\";\r\n         return \"\";\r\n      }\r\n   };\r\n\r\n   getIcon = iconName => {\r\n      if (!iconName) return \"fas fa-bug\";\r\n      else return iconName;\r\n   };\r\n\r\n   render() {\r\n      const { title, icon, procValue, numberValue, trend } = this.props;\r\n\r\n      return (\r\n         <Col xl=\"2\" lg=\"3\" md=\"3\" sm=\"6\" xs=\"12\" className=\"mt-4\">\r\n            <Card className={this.setTheme(this.props.theme)}>\r\n               <CardBody style={pStyle}>\r\n                  <CardTitle>\r\n                     <Badge\r\n                        className={`${this.getBgColor(trend)} ${\r\n                           this.state.txtColor\r\n                        } float-right`}\r\n                     >\r\n                        {this.getTrend(this.props.trend) + procValue}%\r\n                     </Badge>\r\n                  </CardTitle>\r\n                  <CardSubtitle>{title}</CardSubtitle>\r\n                  <CardText>\r\n                     <h1 className=\"mt-3\">\r\n                        <span\r\n                           className={`${this.getIcon(icon)} text-secondary`}\r\n                        />\r\n                        <span className=\"float-right text-mid\">\r\n                           {numberValue}\r\n                        </span>\r\n                     </h1>\r\n                  </CardText>\r\n               </CardBody>\r\n            </Card>\r\n         </Col>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}