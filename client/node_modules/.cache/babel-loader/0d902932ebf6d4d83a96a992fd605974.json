{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/ReportsTable.jsx\";\nimport React, { Component } from 'react';\nimport { HTMLTable, Button, NonIdealState, H5, Spinner, Card, Icon } from '@blueprintjs/core';\n\nvar ReportsTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReportsTable, _Component);\n\n  function ReportsTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReportsTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReportsTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      errorMsg: '',\n      showEditCard: false,\n      ReportForEdit: {},\n      selected: ''\n    };\n    return _this;\n  }\n\n  _createClass(ReportsTable, [{\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"text-center pl-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Project\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"KPI\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Reported By\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Result\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Completed\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Reported At\")));\n    }\n  }, {\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.renderTableRows());\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      var _this2 = this;\n\n      var data = this.props.data;\n      return data.map(function (report, key) {\n        return React.createElement(\"tr\", {\n          key: report._id,\n          onClick: function onClick(e) {\n            return _this2.handleSelection(e, report);\n          },\n          className: \"pl-2 \".concat(_this2.state.selected._id === report._id ? 'bg-selected' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"text-center pl-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, key), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, report.kpi.project.name), React.createElement(\"td\", {\n          style: {\n            paddingLeft: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, report.kpi.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, report.reportedBy.name), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, report.result), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, report.completed), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, report.status ? React.createElement(Icon, {\n          icon: \"tick\",\n          intent: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }) : React.createElement(Icon, {\n          icon: \"cross\",\n          intent: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, report.reportedAt));\n      });\n    }\n  }, {\n    key: \"handleSelection\",\n    value: function handleSelection(e, Report) {\n      e.preventDefault();\n      this.props.onSelection(Report, false);\n      this.setState({\n        selected: Report\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this3 = this;\n\n      if (this.state.errorMsg) {\n        return React.createElement(NonIdealState, {\n          icon: \"issue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(H5, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Something went wrong\")), React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Cannot load Reports table\"), React.createElement(Button, {\n          icon: \"refresh\",\n          minimal: true,\n          onClick: function onClick() {\n            _this3.props.onRefresh();\n\n            _this3.setState({\n              errorMsg: ''\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"overflow-x-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(HTMLTable, {\n        fill: \"true\",\n        striped: true,\n        condensed: true,\n        interactive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.renderTableHeader(), this.renderTableBody()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.props.isLoading;\n\n      if (isLoading) {\n        return React.createElement(Spinner, {\n          intent: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Card, {\n        elevation: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.renderContent());\n    }\n  }]);\n\n  return ReportsTable;\n}(Component);\n\nexport { ReportsTable as default };\nReportsTable.defaultProps = {\n  data: [],\n  onRefresh: function onRefresh() {\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/ReportsTable.jsx"],"names":["React","Component","HTMLTable","Button","NonIdealState","H5","Spinner","Card","Icon","ReportsTable","state","errorMsg","showEditCard","ReportForEdit","selected","renderTableRows","data","props","map","report","key","_id","e","handleSelection","kpi","project","name","paddingLeft","reportedBy","result","completed","status","reportedAt","Report","preventDefault","onSelection","setState","onRefresh","renderTableHeader","renderTableBody","isLoading","renderContent","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACGC,SADH,EAEGC,MAFH,EAGGC,aAHH,EAIGC,EAJH,EAKGC,OALH,EAMGC,IANH,EAOGC,IAPH,QAQO,mBARP;;IAUqBC,Y;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,QAAQ,EAAE,EADL;AAELC,MAAAA,YAAY,EAAE,KAFT;AAGLC,MAAAA,aAAa,EAAE,EAHV;AAILC,MAAAA,QAAQ,EAAE;AAJL,K;;;;;;wCAOY;AACjB,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJH,EAKG;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALH,EAMG;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANH,EAOG;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPH,EAQG;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARH,CADH,CADH;AAcF;;;sCACiB;AACf,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKC,eAAL,EAAR,CAAP;AACF;;;sCACiB;AAAA;;AAAA,UACPC,IADO,GACE,KAAKC,KADP,CACPD,IADO;AAEf,aAAOA,IAAI,CAACE,GAAL,CAAS,UAACC,MAAD,EAASC,GAAT,EAAiB;AAC9B,eACG;AACG,UAAA,GAAG,EAAED,MAAM,CAACE,GADf;AAEG,UAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,mBAAI,MAAI,CAACC,eAAL,CAAqBD,CAArB,EAAwBH,MAAxB,CAAJ;AAAA,WAFb;AAGG,UAAA,SAAS,iBACN,MAAI,CAACT,KAAL,CAAWI,QAAX,CAAoBO,GAApB,KAA4BF,MAAM,CAACE,GAAnC,GAAyC,aAAzC,GAAyD,EADnD,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOG;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCD,GAAlC,CAPH,EAQG;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BD,MAAM,CAACK,GAAP,CAAWC,OAAX,CAAmBC,IAAhD,CARH,EASG;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,WAAW,EAAE;AAAf,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqCR,MAAM,CAACK,GAAP,CAAWE,IAAhD,CATH,EAUG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKP,MAAM,CAACS,UAAP,CAAkBF,IAAvB,CAVH,EAWG;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BP,MAAM,CAACU,MAApC,CAXH,EAYG;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BV,MAAM,CAACW,SAApC,CAZH,EAaG;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIX,MAAM,CAACY,MAAP,GACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,MAAM,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,GAGE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAmB,UAAA,MAAM,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJN,CAbH,EAoBG;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BZ,MAAM,CAACa,UAApC,CApBH,CADH;AAwBF,OAzBM,CAAP;AA0BF;;;oCAEeV,C,EAAGW,M,EAAQ;AACxBX,MAAAA,CAAC,CAACY,cAAF;AACA,WAAKjB,KAAL,CAAWkB,WAAX,CAAuBF,MAAvB,EAA+B,KAA/B;AACA,WAAKG,QAAL,CAAc;AACXtB,QAAAA,QAAQ,EAAEmB;AADC,OAAd;AAGF;;;oCAEe;AAAA;;AACb,UAAI,KAAKvB,KAAL,CAAWC,QAAf,EAAyB;AACtB,eACG,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADH,CADH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAJH,EAKG,oBAAC,MAAD;AACG,UAAA,IAAI,EAAC,SADR;AAEG,UAAA,OAAO,MAFV;AAGG,UAAA,OAAO,EAAE,mBAAM;AACZ,YAAA,MAAI,CAACM,KAAL,CAAWoB,SAAX;;AACA,YAAA,MAAI,CAACD,QAAL,CAAc;AACXzB,cAAAA,QAAQ,EAAE;AADC,aAAd;AAGF,WARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALH,CADH;AAkBF;;AACD,aACG;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAuB,QAAA,OAAO,MAA9B;AAA+B,QAAA,SAAS,MAAxC;AAAyC,QAAA,WAAW,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAK2B,iBAAL,EADJ,EAEI,KAAKC,eAAL,EAFJ,CADH,CADH;AAQF;;;6BACQ;AAAA,UACEC,SADF,GACgB,KAAKvB,KADrB,CACEuB,SADF;;AAGN,UAAIA,SAAJ,EAAe;AACZ,eAAO,oBAAC,OAAD;AAAS,UAAA,MAAM,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACF;;AACD,aAAO,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,KAAKC,aAAL,EAArB,CAAP;AACF;;;;EAtGsCxC,S;;SAArBQ,Y;AAwGrBA,YAAY,CAACiC,YAAb,GAA4B;AACzB1B,EAAAA,IAAI,EAAE,EADmB;AAEzBqB,EAAAA,SAAS,EAAE,qBAAW;AACnB;AACF;AAJwB,CAA5B","sourcesContent":["import React, { Component } from 'react';\nimport {\n   HTMLTable,\n   Button,\n   NonIdealState,\n   H5,\n   Spinner,\n   Card,\n   Icon\n} from '@blueprintjs/core';\n\nexport default class ReportsTable extends Component {\n   state = {\n      errorMsg: '',\n      showEditCard: false,\n      ReportForEdit: {},\n      selected: ''\n   };\n\n   renderTableHeader() {\n      return (\n         <thead>\n            <tr>\n               <th className='text-center pl-3'>#</th>\n               <th>Project</th>\n               <th>KPI</th>\n               <th>Reported By</th>\n               <th className='text-center'>Result</th>\n               <th className='text-center'>Completed</th>\n               <th className='text-center'>Status</th>\n               <th className='text-center'>Reported At</th>\n            </tr>\n         </thead>\n      );\n   }\n   renderTableBody() {\n      return <tbody>{this.renderTableRows()}</tbody>;\n   }\n   renderTableRows() {\n      const { data } = this.props;\n      return data.map((report, key) => {\n         return (\n            <tr\n               key={report._id}\n               onClick={e => this.handleSelection(e, report)}\n               className={`pl-2 ${\n                  this.state.selected._id === report._id ? 'bg-selected' : ''\n               }`}\n            >\n               <td className='text-center pl-3'>{key}</td>\n               <td className='text-center'>{report.kpi.project.name}</td>\n               <td style={{ paddingLeft: '20px' }}>{report.kpi.name}</td>\n               <td>{report.reportedBy.name}</td>\n               <td className='text-center'>{report.result}</td>\n               <td className='text-center'>{report.completed}</td>\n               <td className='text-center'>\n                  {report.status ? (\n                     <Icon icon='tick' intent='success' />\n                  ) : (\n                     <Icon icon='cross' intent='danger' />\n                  )}\n               </td>\n               <td className='text-center'>{report.reportedAt}</td>\n            </tr>\n         );\n      });\n   }\n\n   handleSelection(e, Report) {\n      e.preventDefault();\n      this.props.onSelection(Report, false);\n      this.setState({\n         selected: Report\n      });\n   }\n\n   renderContent() {\n      if (this.state.errorMsg) {\n         return (\n            <NonIdealState icon='issue'>\n               <H5>\n                  <strong>Something went wrong</strong>\n               </H5>\n               <i>Cannot load Reports table</i>\n               <Button\n                  icon='refresh'\n                  minimal\n                  onClick={() => {\n                     this.props.onRefresh();\n                     this.setState({\n                        errorMsg: ''\n                     });\n                  }}\n               ></Button>\n            </NonIdealState>\n         );\n      }\n      return (\n         <div className='overflow-x-scroll'>\n            <HTMLTable fill='true' striped condensed interactive>\n               {this.renderTableHeader()}\n               {this.renderTableBody()}\n            </HTMLTable>\n         </div>\n      );\n   }\n   render() {\n      const { isLoading } = this.props;\n\n      if (isLoading) {\n         return <Spinner intent='primary'></Spinner>;\n      }\n      return <Card elevation='2'>{this.renderContent()}</Card>;\n   }\n}\nReportsTable.defaultProps = {\n   data: [],\n   onRefresh: function() {\n      return;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}