{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { RegionCardinality, Regions } from \"../../regions\";\nimport { Direction } from \"../direction\";\nimport * as DirectionUtils from \"./directionUtils\";\nimport * as FocusedCellUtils from \"./focusedCellUtils\";\n/**\n * Resizes the provided region by 1 row/column in the specified direction,\n * returning a new region instance. The region may either expand *or* contract\n * depending on the presence and location of the focused cell.\n *\n * If no focused cell is provided, the region will always be *expanded* in the\n * specified direction.\n *\n * If a focused cell *is* provided, the behavior will change depending on where\n * the focused cell is within the region:\n *\n *   1. If along a top/bottom boundary while resizing UP/DOWN, the resize will\n *      expand from or shrink to the focused cell (same if along a left/right\n *      boundary while moving LEFT/RIGHT).\n *   2. If *not* along a top/bottom boundary while resizing UP/DOWN (or if *not*\n *      along a left/right boundary while moving LEFT/RIGHT), the region will\n *      simply expand in the specified direction.\n *\n * Other notes:\n * - A CELLS region can be resized vertically or horizontally.\n * - A FULL_ROWS region can be resized only vertically.\n * - A FULL_COLUMNS region can be resized only horizontally.\n * - A FULL_TABLE region cannot be resized.\n *\n * This function does not clamp the indices of the returned region; that is the\n * responsibility of the caller.\n */\n\nexport function resizeRegion(region, direction, focusedCell) {\n  if (Regions.getRegionCardinality(region) === RegionCardinality.FULL_TABLE) {\n    // return the same instance to maintain referential integrity and\n    // possibly avoid unnecessary update lifecycles.\n    return region;\n  }\n\n  var nextRegion = Regions.copy(region);\n  var affectedRowIndex = 0;\n  var affectedColumnIndex = 0;\n\n  if (focusedCell != null) {\n    var isAtTop = FocusedCellUtils.isFocusedCellAtRegionTop(nextRegion, focusedCell);\n    var isAtBottom = FocusedCellUtils.isFocusedCellAtRegionBottom(nextRegion, focusedCell);\n    var isAtLeft = FocusedCellUtils.isFocusedCellAtRegionLeft(nextRegion, focusedCell);\n    var isAtRight = FocusedCellUtils.isFocusedCellAtRegionRight(nextRegion, focusedCell); // the focused cell is found along the top and bottom boundary\n    // simultaneously when the region is 1 row tall. check for this and\n    // similar special cases.\n\n    if (direction === Direction.UP) {\n      affectedRowIndex = isAtTop && !isAtBottom ? 1 : 0;\n    } else if (direction === Direction.DOWN) {\n      affectedRowIndex = isAtBottom && !isAtTop ? 0 : 1;\n    } else if (direction === Direction.LEFT) {\n      affectedColumnIndex = isAtLeft && !isAtRight ? 1 : 0;\n    } else {\n      // i.e. `Direction.RIGHT:`\n      affectedColumnIndex = isAtRight && !isAtLeft ? 0 : 1;\n    }\n  } else {\n    // when there is no focused cell, expand in the specified direction.\n    affectedRowIndex = direction === Direction.DOWN ? 1 : 0;\n    affectedColumnIndex = direction === Direction.RIGHT ? 1 : 0;\n  }\n\n  var delta = DirectionUtils.directionToDelta(direction);\n\n  if (nextRegion.rows != null) {\n    nextRegion.rows[affectedRowIndex] += delta.rows;\n  }\n\n  if (nextRegion.cols != null) {\n    nextRegion.cols[affectedColumnIndex] += delta.cols;\n  } // the new coordinates might be out of bounds. the caller is responsible for\n  // sanitizing the result.\n\n\n  return nextRegion;\n}","map":null,"metadata":{},"sourceType":"module"}