{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/MainDashboard/MainDashboard.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { Row } from \"reactstrap\";\nimport TopBar from \"../Nav/TopBar/TopBar\";\nimport LeftBar from \"../Nav/LeftBar/LeftBar\";\nimport NavItem from \"../Nav/NavItem/NavItem\";\nimport QuickView from \"../QuickView/QuickView\";\nimport ReportControl from \"../ReportControl/ReportControl\";\nimport ChartCard from \"../Card/ChartCard/ChartCard\";\nimport StdCard from \"../Card/StdCard\";\nimport DataTable from \"../Table/DataTable\";\nimport InputTable from \"../Table/InputTable\";\nimport MainContainer from \"../MainContainer/MainContainer\";\n\nvar MainDashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainDashboard, _Component);\n\n  function MainDashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainDashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainDashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: \"dark\",\n      showReportFilter: false\n    };\n    _this.data = {\n      labels: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"],\n      datasets: [{\n        label: \"Data\",\n        backgroundColor: \"#4099ff\",\n        borderColor: \"#4099ff\",\n        data: [0, 10, 0, 12, 10, 12, 1]\n      }]\n    };\n    _this.dataBar = {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [{\n        label: \"f_Data\",\n        backgroundColor: \"#4099ff\",\n        data: [2, 13, 5, 2, 20, 3, 10]\n      }, {\n        label: \"Sec_data\",\n        backgroundColor: \"#FFE031\",\n        data: [10, 2, 6, 12, 8, 0, 22]\n      }]\n    };\n    _this.data_line = {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [{\n        label: \"My First dataset\",\n        backgroundColor: \"#4099ff\",\n        borderColor: \"#4099ff\",\n        data: [0, 10, 5, 2, 20, 30, 45]\n      }]\n    };\n    _this.dataRound = {\n      labels: [\"a\", \"b\"],\n      datasets: [{\n        label: \"Data\",\n        backgroundColor: [\"#4099ff\", \"#FFF3201\"],\n        borderColor: \"transparent\",\n        data: [90, 10]\n      }]\n    };\n\n    _this.switchShowReportFilter = function () {\n      _this.setState(function (state) {\n        return {\n          showReportFilter: !state.showReportFilter\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MainDashboard, [{\n    key: \"setBgByTheme\",\n    value: function setBgByTheme(theme) {\n      if (theme === \"dark\") {\n        return \"main-data-bg-dark\";\n      }\n\n      if (theme === \"light\") {\n        return \"main-data-bg-light\";\n      } else {\n        return \"main-data-bg-dark\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(TopBar, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        icon: \"fas fa-filter\",\n        onClick: this.switchShowReportFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(LeftBar, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        icon: \"fa fa-signal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(NavItem, {\n        icon: \"fa fa-users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(NavItem, {\n        icon: \"fa fa-check-square \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(NavItem, {\n        icon: \"fa fa-download\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(NavItem, {\n        icon: \"fa fa-upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(NavItem, {\n        icon: \"fas fa-sign-out-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(MainContainer, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(ReportControl, {\n        theme: this.state.theme,\n        show: this.state.showReportFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(QuickView, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(StdCard, {\n        theme: this.state.theme,\n        icon: \"fa fa-table\",\n        headerText: \"table _test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(InputTable, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Bar\",\n        data: this.dataBar,\n        headerText: \"Graf\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Line\",\n        data: this.data_line,\n        headerText: \"Graf\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Line\",\n        data: this.data,\n        headerText: \"Line_test\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Bar\",\n        data: this.data,\n        headerText: \"Bar_test\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Pie\",\n        data: this.dataRound,\n        headerText: \"Pie Test\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Doughnut\",\n        data: this.dataRound,\n        headerText: \"Doughnut test\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"hBar\",\n        data: this.dataBar,\n        headerText: \"Horizontal Bar\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Radar\",\n        data: this.dataBar,\n        headerText: \"Radar test\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MainDashboard;\n}(Component);\n\nexport { MainDashboard as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/MainDashboard/MainDashboard.jsx"],"names":["React","Component","Row","TopBar","LeftBar","NavItem","QuickView","ReportControl","ChartCard","StdCard","DataTable","InputTable","MainContainer","MainDashboard","state","theme","showReportFilter","data","labels","datasets","label","backgroundColor","borderColor","dataBar","data_line","dataRound","switchShowReportFilter","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\n\r\nimport { Row } from \"reactstrap\";\r\nimport TopBar from \"../Nav/TopBar/TopBar\";\r\nimport LeftBar from \"../Nav/LeftBar/LeftBar\";\r\nimport NavItem from \"../Nav/NavItem/NavItem\";\r\nimport QuickView from \"../QuickView/QuickView\";\r\nimport ReportControl from \"../ReportControl/ReportControl\";\r\nimport ChartCard from \"../Card/ChartCard/ChartCard\";\r\nimport StdCard from \"../Card/StdCard\";\r\nimport DataTable from \"../Table/DataTable\";\r\nimport InputTable from \"../Table/InputTable\";\r\nimport MainContainer from \"../MainContainer/MainContainer\";\r\n\r\nexport default class MainDashboard extends Component {\r\n   state = {\r\n      theme: \"dark\",\r\n      showReportFilter: false\r\n   };\r\n\r\n   setBgByTheme(theme) {\r\n      if (theme === \"dark\") {\r\n         return \"main-data-bg-dark\";\r\n      }\r\n      if (theme === \"light\") {\r\n         return \"main-data-bg-light\";\r\n      } else {\r\n         return \"main-data-bg-dark\";\r\n      }\r\n   }\r\n\r\n   data = {\r\n      labels: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"],\r\n      datasets: [\r\n         {\r\n            label: \"Data\",\r\n            backgroundColor: \"#4099ff\",\r\n            borderColor: \"#4099ff\",\r\n            data: [0, 10, 0, 12, 10, 12, 1]\r\n         }\r\n      ]\r\n   };\r\n   dataBar = {\r\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n      datasets: [\r\n         {\r\n            label: \"f_Data\",\r\n            backgroundColor: \"#4099ff\",\r\n            data: [2, 13, 5, 2, 20, 3, 10]\r\n         },\r\n         {\r\n            label: \"Sec_data\",\r\n            backgroundColor: \"#FFE031\",\r\n            data: [10, 2, 6, 12, 8, 0, 22]\r\n         }\r\n      ]\r\n   };\r\n   data_line = {\r\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n      datasets: [\r\n         {\r\n            label: \"My First dataset\",\r\n            backgroundColor: \"#4099ff\",\r\n            borderColor: \"#4099ff\",\r\n            data: [0, 10, 5, 2, 20, 30, 45]\r\n         }\r\n      ]\r\n   };\r\n   dataRound = {\r\n      labels: [\"a\", \"b\"],\r\n      datasets: [\r\n         {\r\n            label: \"Data\",\r\n            backgroundColor: [\"#4099ff\", \"#FFF3201\"],\r\n            borderColor: \"transparent\",\r\n            data: [90, 10]\r\n         }\r\n      ]\r\n   };\r\n\r\n   switchShowReportFilter = () => {\r\n      this.setState(state => ({ showReportFilter: !state.showReportFilter }));\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <TopBar theme={this.state.theme}>\r\n               <NavItem\r\n                  icon=\"fas fa-filter\"\r\n                  onClick={this.switchShowReportFilter}\r\n               />\r\n            </TopBar>\r\n            <LeftBar theme={this.state.theme}>\r\n               <NavItem icon=\"fa fa-signal\" />\r\n               <NavItem icon=\"fa fa-users\" />\r\n               <NavItem icon=\"fa fa-check-square \" />\r\n               <NavItem icon=\"fa fa-download\" />\r\n               <NavItem icon=\"fa fa-upload\" />\r\n               <NavItem icon=\"fas fa-sign-out-alt\" />\r\n            </LeftBar>\r\n            <MainContainer theme={this.state.theme}>\r\n               <ReportControl\r\n                  theme={this.state.theme}\r\n                  show={this.state.showReportFilter}\r\n               />\r\n               <QuickView theme={this.state.theme} />\r\n               <Row>\r\n                  <StdCard\r\n                     theme={this.state.theme}\r\n                     icon=\"fa fa-table\"\r\n                     headerText=\"table _test\"\r\n                  >\r\n                     <DataTable theme={this.state.theme} />\r\n                     <InputTable theme={this.state.theme} />\r\n                  </StdCard>\r\n                  <ChartCard\r\n                     theme={this.state.theme}\r\n                     chartType=\"Bar\"\r\n                     data={this.dataBar}\r\n                     headerText=\"Graf\"\r\n                     height={300}\r\n                     width={700}\r\n                  />\r\n                  <ChartCard\r\n                     theme={this.state.theme}\r\n                     chartType=\"Line\"\r\n                     data={this.data_line}\r\n                     headerText=\"Graf\"\r\n                     height={300}\r\n                     width={700}\r\n                  />\r\n                  <ChartCard\r\n                     theme={this.state.theme}\r\n                     chartType=\"Line\"\r\n                     data={this.data}\r\n                     headerText=\"Line_test\"\r\n                     height={300}\r\n                     width={700}\r\n                  />\r\n                  <ChartCard\r\n                     theme={this.state.theme}\r\n                     chartType=\"Bar\"\r\n                     data={this.data}\r\n                     headerText=\"Bar_test\"\r\n                     height={300}\r\n                     width={700}\r\n                  />\r\n                  <ChartCard\r\n                     theme={this.state.theme}\r\n                     chartType=\"Pie\"\r\n                     data={this.dataRound}\r\n                     headerText=\"Pie Test\"\r\n                     height={300}\r\n                     width={700}\r\n                  />\r\n                  <ChartCard\r\n                     theme={this.state.theme}\r\n                     chartType=\"Doughnut\"\r\n                     data={this.dataRound}\r\n                     headerText=\"Doughnut test\"\r\n                     height={300}\r\n                     width={700}\r\n                  />\r\n                  <ChartCard\r\n                     theme={this.state.theme}\r\n                     chartType=\"hBar\"\r\n                     data={this.dataBar}\r\n                     headerText=\"Horizontal Bar\"\r\n                     height={300}\r\n                     width={700}\r\n                  />\r\n                  <ChartCard\r\n                     theme={this.state.theme}\r\n                     chartType=\"Radar\"\r\n                     data={this.dataBar}\r\n                     headerText=\"Radar test\"\r\n                     height={300}\r\n                     width={700}\r\n                  />\r\n               </Row>\r\n            </MainContainer>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}