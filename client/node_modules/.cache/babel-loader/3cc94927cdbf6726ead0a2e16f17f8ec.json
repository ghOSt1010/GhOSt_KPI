{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Buttons/Select/ProjectSelect.jsx\";\nimport React, { Component } from 'react';\nimport { Input } from 'reactstrap';\nimport axios from 'axios';\nimport './Select.css';\n\nvar ProjectSelect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectSelect, _Component);\n\n  function ProjectSelect() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      options: []\n    };\n    return _this;\n  }\n\n  _createClass(ProjectSelect, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProjectData();\n    }\n  }, {\n    key: \"getProjectData\",\n    value: function getProjectData() {\n      var _this2 = this;\n\n      var URL = 'http://localhost:3001/api/projects';\n      axios.get(URL, '').then(function (res) {\n        _this2.setState({\n          options: res.data\n        });\n\n        console.log(_this2.state.options);\n      }).catch(function (err) {\n        _this2.setState({\n          options: {\n            key: 0,\n            value: 'N/A'\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderOptions\",\n    value: function renderOptions() {\n      return this.state.options.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, option.name);\n      });\n    }\n  }, {\n    key: \"renderSimpleOptions\",\n    value: function renderSimpleOptions() {\n      return this.state.optionsArr.map(function (o) {\n        return React.createElement(\"option\", {\n          value: o,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, o);\n      });\n    }\n  }, {\n    key: \"setSelectTheme\",\n    value: function setSelectTheme() {\n      var theme = this.state.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Input, {\n        type: \"select\",\n        size: \"sm\",\n        name: \"select\",\n        id: this.props.id,\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.renderOptions());\n    }\n  }]);\n\n  return ProjectSelect;\n}(Component);\n\nexport { ProjectSelect as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Buttons/Select/ProjectSelect.jsx"],"names":["React","Component","Input","axios","ProjectSelect","state","theme","props","options","getProjectData","URL","get","then","res","setState","data","console","log","catch","err","key","value","map","option","name","optionsArr","o","id","setSelectTheme","renderOptions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;IAEqBC,a;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD,KADb;AAELE,MAAAA,OAAO,EAAE;AAFJ,K;;;;;;wCAKY;AACjB,WAAKC,cAAL;AACF;;;qCAEgB;AAAA;;AACd,UAAMC,GAAG,GAAG,oCAAZ;AACAP,MAAAA,KAAK,CACDQ,GADJ,CACQD,GADR,EACa,EADb,EAEIE,IAFJ,CAES,UAAAC,GAAG,EAAI;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AACXN,UAAAA,OAAO,EAAEK,GAAG,CAACE;AADF,SAAd;;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACZ,KAAL,CAAWG,OAAvB;AACF,OAPJ,EAQIU,KARJ,CAQU,UAAAC,GAAG,EAAI;AACX,QAAA,MAAI,CAACL,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE;AAAEY,YAAAA,GAAG,EAAE,CAAP;AAAUC,YAAAA,KAAK,EAAE;AAAjB;AAAX,SAAd;AACF,OAVJ;AAWF;;;oCAEe;AACb,aAAO,KAAKhB,KAAL,CAAWG,OAAX,CAAmBc,GAAnB,CAAuB,UAACC,MAAD,EAASH,GAAT,EAAiB;AAC5C,eACG;AAAQ,UAAA,GAAG,EAAEA,GAAb;AAAkB,UAAA,KAAK,EAAEG,MAAM,CAACC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACID,MAAM,CAACC,IADX,CADH;AAKF,OANM,CAAP;AAOF;;;0CAEqB;AACnB,aAAO,KAAKnB,KAAL,CAAWoB,UAAX,CAAsBH,GAAtB,CAA0B,UAAAI,CAAC,EAAI;AACnC,eAAO;AAAQ,UAAA,KAAK,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBA,CAAnB,CAAP;AACF,OAFM,CAAP;AAGF;;;qCAEgB;AAAA,UACNpB,KADM,GACI,KAAKD,KADT,CACNC,KADM;;AAEd,UAAIA,KAAK,KAAK,MAAd,EAAsB;AACnB,eAAO,mCAAP;AACF;;AACD,UAAIA,KAAK,KAAK,OAAd,EAAuB;AACpB,eAAO,EAAP;AACF;AACH;;;6BAEQ;AACN,aACG,oBAAC,KAAD;AACG,QAAA,IAAI,EAAC,QADR;AAEG,QAAA,IAAI,EAAC,IAFR;AAGG,QAAA,IAAI,EAAC,QAHR;AAIG,QAAA,EAAE,EAAE,KAAKC,KAAL,CAAWoB,EAJlB;AAKG,QAAA,SAAS,EAAE,KAAKC,cAAL,EALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,KAAKC,aAAL,EAPJ,CADH;AAWF;;;;EA/DuC5B,S;;SAAtBG,a","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport './Select.css';\r\n\r\nexport default class ProjectSelect extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      options: []\r\n   };\r\n\r\n   componentDidMount() {\r\n      this.getProjectData();\r\n   }\r\n\r\n   getProjectData() {\r\n      const URL = 'http://localhost:3001/api/projects';\r\n      axios\r\n         .get(URL, '')\r\n         .then(res => {\r\n            this.setState({\r\n               options: res.data\r\n            });\r\n            console.log(this.state.options);\r\n         })\r\n         .catch(err => {\r\n            this.setState({ options: { key: 0, value: 'N/A' } });\r\n         });\r\n   }\r\n\r\n   renderOptions() {\r\n      return this.state.options.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option.name}>\r\n               {option.name}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n\r\n   renderSimpleOptions() {\r\n      return this.state.optionsArr.map(o => {\r\n         return <option value={o}>{o}</option>;\r\n      });\r\n   }\r\n\r\n   setSelectTheme() {\r\n      const { theme } = this.state;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Input\r\n            type='select'\r\n            size='sm'\r\n            name='select'\r\n            id={this.props.id}\r\n            className={this.setSelectTheme()}\r\n         >\r\n            {this.renderOptions()}\r\n         </Input>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}