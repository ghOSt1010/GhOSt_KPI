{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/ScoreCard/ScoreCard.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../QuickView/QuickView.css';\nimport { Card, CardTitle, CardSubtitle, CardBody, CardText, Badge } from 'reactstrap';\nimport { Col } from 'reactstrap';\nvar pStyle = {\n  'min-height': '150px'\n  /*TODO:\n     -- fix title / badge relation\n        -- overlaping title over badge\n        -- hight issue on mid horizontal size\n  */\n\n};\n\nvar ScoreCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScoreCard, _Component);\n\n  function ScoreCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScoreCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScoreCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: 'N/A',\n      icon: '',\n      proc: 0,\n      number: 0,\n      bgColor: 'bg-c-white',\n      txtColor: 'text-gray'\n    };\n\n    _this.getTrend = function (value) {\n      if (value < 0) return \"-\";else if (value > 0) return \"+\";else return \" \";\n    };\n\n    _this.getBgColor = function (trend) {\n      _this.state.txtColor = \"text-white\";\n      if (trend < 0) return \"bg-danger\";else if (trend > 0) return \"bg-success \";else {\n        _this.state.txtColor = \"text-black\";\n        return '';\n      }\n    };\n\n    _this.getIcon = function (iconName) {\n      if (!iconName) return 'fas fa-bug';else return iconName;\n    };\n\n    return _this;\n  }\n\n  _createClass(ScoreCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          icon = _this$props.icon,\n          procValue = _this$props.procValue,\n          numberValue = _this$props.numberValue,\n          trend = _this$props.trend;\n      return React.createElement(Col, {\n        xl: \"2\",\n        lg: \"3\",\n        md: \"3\",\n        sm: \"6\",\n        xs: \"12\",\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Card, {\n        inverse: true,\n        color: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        style: pStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        className: \"\".concat(this.getBgColor(trend), \" \").concat(this.state.txtColor, \" float-right\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.getTrend(this.props.trend) + procValue, \"%\")), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, title), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.getIcon(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"float-right text-mid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, numberValue))))));\n    }\n  }]);\n\n  return ScoreCard;\n}(Component);\n\nexport { ScoreCard as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/ScoreCard/ScoreCard.jsx"],"names":["React","Component","Card","CardTitle","CardSubtitle","CardBody","CardText","Badge","Col","pStyle","ScoreCard","state","name","icon","proc","number","bgColor","txtColor","getTrend","value","getBgColor","trend","getIcon","iconName","props","title","procValue","numberValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../../QuickView/QuickView.css'\n\nimport { Card, CardTitle, CardSubtitle, CardBody, CardText, Badge } from 'reactstrap';\nimport { Col } from 'reactstrap';\n\nconst pStyle = {\n   'min-height': '150px'\n}\n\n/*TODO:\n   -- fix title / badge relation\n      -- overlaping title over badge\n      -- hight issue on mid horizontal size\n*/\nexport default class ScoreCard extends Component {\n\n   state = {\n      name: 'N/A',\n      icon: '',\n      proc: 0,\n      number: 0,\n      bgColor: 'bg-c-white',\n      txtColor: 'text-gray'\n   }\n\n   getTrend = (value) => {\n      if (value < 0) return \"-\";\n      else if (value > 0) return \"+\";\n      else return \" \";\n   }\n\n   getBgColor = (trend) => {\n      this.state.txtColor = \"text-white\";\n      if (trend < 0) return \"bg-danger\";\n      else if (trend > 0) return \"bg-success \";\n      else {\n         this.state.txtColor = \"text-black\";\n         return '';\n      }\n   }\n\n   getIcon = (iconName) => {\n      if (!iconName) return 'fas fa-bug';\n      else return iconName;\n   }\n\n   render() {\n\n      const { title, icon, procValue, numberValue, trend } = this.props;\n\n      return (\n         <Col xl=\"2\" lg=\"3\" md=\"3\" sm=\"6\" xs=\"12\" className=\"mt-4\">\n            <Card inverse color=\"dark\">\n               <CardBody style={pStyle}>\n                  <CardTitle>\n                     <Badge className={`${this.getBgColor(trend)} ${this.state.txtColor} float-right`}>\n                        {this.getTrend(this.props.trend) + procValue}%\n                     </Badge>\n                  </CardTitle>\n                  <CardSubtitle>\n                     {title}\n                  </CardSubtitle>\n                  <CardText>\n                     <h1 className=\"mt-3\">\n                        <span className={this.getIcon(icon)}></span>\n                        <span className=\"float-right text-mid\">{numberValue}</span>\n                     </h1>\n                  </CardText>\n               </CardBody>\n            </Card>\n         </Col>\n      )\n   }\n}\n"]},"metadata":{},"sourceType":"module"}