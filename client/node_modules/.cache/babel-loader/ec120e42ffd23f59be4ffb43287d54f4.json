{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Table/DataTable.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free';\nimport { Table } from 'reactstrap';\n\nvar DataTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataTable, _Component);\n\n  function DataTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DataTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DataTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: _this.props.data,\n      _testDataSet: [{\n        id: 1,\n        usertype: 'adm',\n        name: 'RC',\n        age: 29,\n        email: 'rafal.cymbalista@hcl.com'\n      }, {\n        id: 2,\n        usertype: 'adm',\n        name: 'RC',\n        age: 29,\n        email: 'rafal.cymbalista@hcl.com'\n      }, {\n        id: 3,\n        usertype: 'adm',\n        name: 'RC',\n        age: 29,\n        email: 'rafal.cymbalista@hcl.com'\n      }, {\n        id: 4,\n        usertype: 'adm',\n        name: 'RC',\n        age: 29,\n        email: 'rafal.cymbalista@hcl.com'\n      }, {\n        id: 5,\n        usertype: 'adm',\n        name: 'RC',\n        age: 29,\n        email: 'rafal.cymbalista@hcl.com'\n      }, {\n        id: 6,\n        usertype: 'adm',\n        name: 'RC',\n        age: 29,\n        email: 'rafal.cymbalista@hcl.com'\n      }]\n      /*TODO:\n         -- Function to strip the data into the table values\n            -- data structure : Headers + values\n      */\n\n    };\n    return _this;\n  }\n\n  _createClass(DataTable, [{\n    key: \"renderTableHeaders\",\n    value: function renderTableHeaders() {\n      var header = Object.keys(this.state._testDataSet[0]);\n      return header.map(function (key, index) {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, key.toUpperCase());\n      });\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      return this.state._testDataSet.map(function (user, index) {\n        var id = user.id,\n            usertype = user.usertype,\n            name = user.name,\n            age = user.age,\n            email = user.email;\n        return React.createElement(\"tr\", {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, usertype), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, age), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, email));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Table, {\n        responsive: true,\n        borderless: true,\n        dark: true,\n        striped: true,\n        hover: true,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.renderTableHeaders())), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.renderTableData())));\n    }\n  }]);\n\n  return DataTable;\n}(Component);\n\nexport { DataTable as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Table/DataTable.jsx"],"names":["React","Component","Table","DataTable","state","data","props","_testDataSet","id","usertype","name","age","email","header","Object","keys","map","key","index","toUpperCase","user","renderTableHeaders","renderTableData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '@fortawesome/fontawesome-free'\n\nimport { Table } from 'reactstrap'\n\nexport default class DataTable extends Component {\n\n   state = {\n      data: this.props.data,\n      _testDataSet: [\n         { id: 1, usertype: 'adm', name: 'RC', age: 29, email: 'rafal.cymbalista@hcl.com' },\n         { id: 2, usertype: 'adm', name: 'RC', age: 29, email: 'rafal.cymbalista@hcl.com' },\n         { id: 3, usertype: 'adm', name: 'RC', age: 29, email: 'rafal.cymbalista@hcl.com' },\n         { id: 4, usertype: 'adm', name: 'RC', age: 29, email: 'rafal.cymbalista@hcl.com' },\n         { id: 5, usertype: 'adm', name: 'RC', age: 29, email: 'rafal.cymbalista@hcl.com' },\n         { id: 6, usertype: 'adm', name: 'RC', age: 29, email: 'rafal.cymbalista@hcl.com' },\n      ]\n   }\n\n   /*TODO:\n      -- Function to strip the data into the table values\n         -- data structure : Headers + values\n   */\n   renderTableHeaders() {\n      let header = Object.keys(this.state._testDataSet[0])\n      return header.map((key, index) => {\n         return <th key={index}>{key.toUpperCase()}</th>\n      })\n   }\n   renderTableData() {\n      return this.state._testDataSet.map((user, index) => {\n         const { id, usertype, name, age, email } = user;\n         return (\n            <tr key={id}>\n               <td>{id}</td>\n               <td>{usertype}</td>\n               <td>{name}</td>\n               <td>{age}</td>\n               <td>{email}</td>\n            </tr>\n         )\n      })\n   }\n\n   render() {\n      return (\n         <div>\n            <Table responsive borderless dark striped hover size=\"sm\">\n               <thead>\n                  <tr>\n                    {this.renderTableHeaders()}\n                  </tr>\n               </thead>\n               <tbody>\n                  {this.renderTableData()}\n               </tbody>\n            </Table>\n         </div>\n      )\n   }\n}\n"]},"metadata":{},"sourceType":"module"}