{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Reports/Reports.jsx\";\nimport React, { Component } from 'react';\nimport { Tabs, Tab, H2, Alert, Portal, H5, Classes } from '@blueprintjs/core';\nimport ReportsTable from '../../components/Tables/ReportsTable';\nimport EmployeeDialog from '../../components/Dialogs/EmployeeDialog';\nimport Client from '../../Modules/Client/Client';\nimport TableControllers from '../../components/Tables/TableControllers';\n\nvar Reports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reports, _Component);\n\n  function Reports() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Reports);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Reports)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTabID: 'Employees',\n      selectedTabId: 'Employees',\n      isLoading: true,\n      data: [],\n      openAlert: true,\n      errorMessage: '',\n      isEmployeesDialogOpen: false,\n      kpi: '',\n      reportedBy: '',\n      result: '',\n      completed: '',\n      status: '',\n      reportedAt: '',\n      selected: {},\n      isUserEditDialogOpen: false,\n      isDeleteAlertOpen: false,\n      canEdit: !false,\n      canDelete: !false\n    };\n\n    _this.getSelected = function (emp, isSelected) {\n      _this.setState({\n        selected: emp,\n        canEdit: isSelected,\n        canDelete: isSelected\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, kpi, reportedBy, result, completed, status, reportedAt, errorMsg, report, _result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, kpi = _this$state.kpi, reportedBy = _this$state.reportedBy, result = _this$state.result, completed = _this$state.completed, status = _this$state.status, reportedAt = _this$state.reportedAt;\n                errorMsg = 'Unknown Error';\n                _context.next = 5;\n                return Client.Services.ReportingService.createReportDTO(kpi, reportedBy, result, completed, status, reportedAt);\n\n              case 5:\n                report = _context.sent;\n                _context.prev = 6;\n                _context.next = 9;\n                return Client.Services.ReportingService.saveReport(report);\n\n              case 9:\n                _result = _context.sent;\n\n                if (_result.status === 200) {\n                  Client.Notifications.success(\"Report successfully saved\");\n\n                  _this.getData();\n                }\n\n                _context.next = 18;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](6);\n\n                if (_context.t0.response.status === 409) {\n                  errorMsg = \"Error: \".concat(_context.t0.response.data.message);\n                  Client.Notifications.alert(errorMsg);\n                }\n\n                if (_context.t0.response.status !== 409) {\n                  errorMsg = \"Error:  while saving the report\";\n                  Client.Notifications.error(errorMsg);\n                }\n\n                _this.openAlert(errorMsg);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleUpdate =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var _this$state2, kpi, reportedBy, result, completed, status, reportedAt, errorMsg, report, _result2;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _this$state2 = _this.state, kpi = _this$state2.kpi, reportedBy = _this$state2.reportedBy, result = _this$state2.result, completed = _this$state2.completed, status = _this$state2.status, reportedAt = _this$state2.reportedAt;\n                errorMsg = 'Unknown Error';\n                _context2.prev = 3;\n                _context2.next = 6;\n                return Client.Services.ReportingService.createReportDTO(kpi, reportedBy, _result2, completed, status, reportedAt);\n\n              case 6:\n                report = _context2.sent;\n                _context2.next = 9;\n                return Client.Services.ReportingService.updateReport(report);\n\n              case 9:\n                _result2 = _context2.sent;\n\n                if (_result2.status === 200) {\n                  Client.Notifications.success(\"Report updated successfully\");\n\n                  _this.getData();\n                }\n\n                _context2.next = 18;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](3);\n\n                if (_context2.t0.response.status === 409) {\n                  errorMsg = \"Error: \".concat(_context2.t0.response.data.message);\n                  Client.Notifications.alert(errorMsg);\n                }\n\n                if (_context2.t0.response.status !== 409) {\n                  errorMsg = \"Error:  while updating the report\";\n                  Client.Notifications.error(errorMsg);\n                }\n\n                _this.openAlert(errorMsg);\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 13]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.id] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.openUserEditDialog =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var selected, errorMsg, result, emp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                e.preventDefault();\n                selected = _this.state.selected;\n                errorMsg = 'Unknown Error';\n                _context3.prev = 3;\n                _context3.next = 6;\n                return Client.Services.EmployeesService.getEmployeeById(selected._id);\n\n              case 6:\n                result = _context3.sent;\n\n                if (result.status === 200) {\n                  emp = result.data;\n\n                  _this.setState({\n                    isUserEditDialogOpen: true,\n                    name: emp.name,\n                    email: emp.email,\n                    user: emp.user._id,\n                    type: emp.type._id,\n                    project: emp.project._id,\n                    team: emp.team._id\n                  });\n                }\n\n                _context3.next = 14;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.log(_context3.t0);\n\n                _this.setState({\n                  isUserEditDialogOpen: true,\n                  name: selected.name,\n                  email: selected.email,\n                  user: selected.user._id,\n                  type: selected.type._id,\n                  project: selected.project._id,\n                  team: selected.team._id\n                });\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[3, 10]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleTabChange = function (activeTabID) {\n      _this.setState({\n        activeTabID: activeTabID,\n        selectedTabId: activeTabID\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Reports, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.setLoading(true);\n                _context4.prev = 1;\n                _context4.next = 4;\n                return Client.Services.ReportingService.getReports();\n\n              case 4:\n                result = _context4.sent;\n                this.setState({\n                  data: result.data\n                });\n                _context4.next = 13;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](1);\n                alert(_context4.t0);\n                this.setState({\n                  errorMsg: _context4.t0.response\n                });\n                Client.Notifications.alert('Error while loading reports');\n\n              case 13:\n                _context4.prev = 13;\n                this.setLoading(false);\n                return _context4.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 8, 13, 16]]);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"deleteReport\",\n    value: function () {\n      var _deleteReport = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                this.resetErrorMsg();\n                _context5.next = 4;\n                return Client.Services.ReportingService.deleteReportByID(id);\n\n              case 4:\n                result = _context5.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success('Report removed successfully');\n                }\n\n                _context5.next = 12;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](0);\n                this.setState({\n                  errorMsg: _context5.t0.response.status\n                });\n                Client.Notifications.alert('Error, cannot delete Report');\n\n              case 12:\n                _context5.prev = 12;\n                this.getData();\n                this.closeDeleteAlert();\n                return _context5.finish(12);\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 8, 12, 16]]);\n      }));\n\n      function deleteReport(_x4) {\n        return _deleteReport.apply(this, arguments);\n      }\n\n      return deleteReport;\n    }()\n  }, {\n    key: \"openAlert\",\n    value: function openAlert(msg) {\n      this.setState({\n        isAlertOpen: true,\n        errorMessage: msg\n      });\n    }\n  }, {\n    key: \"closeAlert\",\n    value: function closeAlert() {\n      this.setState({\n        isAlertOpen: false,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"resetErrorMsg\",\n    value: function resetErrorMsg() {\n      this.setState({\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"openEmployeesDialog\",\n    value: function openEmployeesDialog() {\n      this.setState({\n        isEmployeesDialogOpen: true\n      });\n    }\n  }, {\n    key: \"closeEmployeesDialog\",\n    value: function closeEmployeesDialog() {\n      this.setState({\n        isEmployeesDialogOpen: false\n      });\n    }\n  }, {\n    key: \"closeUserEditDialog\",\n    value: function closeUserEditDialog() {\n      this.setState({\n        isUserEditDialogOpen: false\n      });\n    }\n  }, {\n    key: \"openDeleteAlert\",\n    value: function openDeleteAlert() {\n      this.setState({\n        isDeleteAlertOpen: true\n      });\n    }\n  }, {\n    key: \"closeDeleteAlert\",\n    value: function closeDeleteAlert() {\n      this.setState({\n        isDeleteAlertOpen: false\n      });\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(loading) {\n      this.setState({\n        isLoading: loading\n      });\n    }\n  }, {\n    key: \"clearForm\",\n    value: function clearForm() {\n      this.setState({\n        name: '',\n        email: '',\n        user: '',\n        type: '',\n        project: '',\n        team: '',\n        isAlertOpen: false,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"renderControlls\",\n    value: function renderControlls() {\n      var _this2 = this;\n\n      if (this.state.selectedTabId === 'Employees') {\n        return React.createElement(TableControllers, {\n          onEdit: this.openUserEditDialog,\n          canEdit: this.state.canEdit,\n          onAdd: function onAdd() {\n            return _this2.openEmployeesDialog();\n          },\n          onDelete: function onDelete() {\n            return _this2.openDeleteAlert();\n          },\n          canDelete: this.state.canDelete,\n          onRefresh: function onRefresh() {\n            return _this2.getData();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          data = _this$state3.data,\n          isLoading = _this$state3.isLoading,\n          email = _this$state3.email,\n          name = _this$state3.name,\n          team = _this$state3.team,\n          project = _this$state3.project,\n          user = _this$state3.user,\n          type = _this$state3.type,\n          isAlertOpen = _this$state3.isAlertOpen,\n          selected = _this$state3.selected;\n      return React.createElement(\"div\", {\n        id: \"AdminPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(H2, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Employees Panel\")), React.createElement(Tabs, {\n        onChange: this.handleTabChange,\n        selectedTabId: this.state.selectedTabId,\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        id: \"Employees\",\n        title: \"Employees\",\n        panel: React.createElement(ReportsTable, {\n          data: data,\n          onRefresh: function onRefresh() {\n            return _this3.getData();\n          },\n          isLoading: isLoading,\n          onSelection: this.getSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(Tabs.Expander, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }), this.renderControlls()), React.createElement(EmployeeDialog, {\n        isOpen: this.state.isUserEditDialogOpen,\n        toOpen: function toOpen() {\n          return _this3.openUserEditDialog();\n        },\n        toClose: function toClose() {\n          return _this3.closeUserEditDialog();\n        },\n        name: name,\n        email: email,\n        user: user,\n        type: type,\n        project: project,\n        team: team,\n        onChange: this.onChange,\n        handleSubmit: this.handleUpdate,\n        buttonCaption: \"Update\",\n        onClear: function onClear() {\n          return _this3.clearForm();\n        },\n        isAlertOpen: isAlertOpen,\n        closeAlert: function closeAlert() {\n          return _this3.closeAlert();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(EmployeeDialog, {\n        isOpen: this.state.isEmployeesDialogOpen,\n        toOpen: function toOpen() {\n          return _this3.openEmployeesDialog();\n        },\n        toClose: function toClose() {\n          return _this3.closeEmployeesDialog();\n        },\n        name: name,\n        email: email,\n        user: user,\n        type: type,\n        project: project,\n        team: team,\n        onChange: this.onChange,\n        handleSubmit: this.handleSubmit,\n        buttonCaption: \"Add\",\n        onClear: function onClear() {\n          return _this3.clearForm();\n        },\n        isAlertOpen: isAlertOpen,\n        closeAlert: function closeAlert() {\n          return _this3.closeAlert();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(Alert, {\n        isOpen: this.state.isDeleteAlertOpen,\n        confirmButtonText: \"Delete\",\n        onConfirm: function onConfirm() {\n          return _this3.deleteUser(selected._id);\n        },\n        cancelButtonText: \"Cancel\",\n        onCancel: function onCancel() {\n          return _this3.closeDeleteAlert();\n        },\n        intent: \"danger\",\n        icon: \"issue\",\n        ussePortal: React.createElement(Portal, {\n          container: document.getElementById('AdminPanel'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(H5, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"Are you sure that you want to delete this user?\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"User: \".concat(selected.username)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        className: Classes.TEXT_MUTED,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"Will be permanentyly deleted...\")));\n    }\n  }]);\n\n  return Reports;\n}(Component);\n\nexport { Reports as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Reports/Reports.jsx"],"names":["React","Component","Tabs","Tab","H2","Alert","Portal","H5","Classes","ReportsTable","EmployeeDialog","Client","TableControllers","Reports","state","activeTabID","selectedTabId","isLoading","data","openAlert","errorMessage","isEmployeesDialogOpen","kpi","reportedBy","result","completed","status","reportedAt","selected","isUserEditDialogOpen","isDeleteAlertOpen","canEdit","canDelete","getSelected","emp","isSelected","setState","handleSubmit","e","preventDefault","errorMsg","Services","ReportingService","createReportDTO","report","saveReport","Notifications","success","getData","response","message","alert","error","handleUpdate","updateReport","onChange","target","id","value","openUserEditDialog","EmployeesService","getEmployeeById","_id","name","email","user","type","project","team","console","log","handleTabChange","setLoading","getReports","resetErrorMsg","deleteReportByID","closeDeleteAlert","msg","isAlertOpen","loading","openEmployeesDialog","openDeleteAlert","renderControlls","closeUserEditDialog","clearForm","closeAlert","closeEmployeesDialog","deleteUser","document","getElementById","username","TEXT_MUTED"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Tabs, Tab, H2, Alert, Portal, H5, Classes } from '@blueprintjs/core';\nimport ReportsTable from '../../components/Tables/ReportsTable';\nimport EmployeeDialog from '../../components/Dialogs/EmployeeDialog';\nimport Client from '../../Modules/Client/Client';\nimport TableControllers from '../../components/Tables/TableControllers';\n\nexport default class Reports extends Component {\n   state = {\n      activeTabID: 'Employees',\n      selectedTabId: 'Employees',\n      isLoading: true,\n      data: [],\n      openAlert: true,\n      errorMessage: '',\n      isEmployeesDialogOpen: false,\n      kpi: '',\n      reportedBy: '',\n      result: '',\n      completed: '',\n      status: '',\n      reportedAt: '',\n      selected: {},\n      isUserEditDialogOpen: false,\n      isDeleteAlertOpen: false,\n      canEdit: !false,\n      canDelete: !false\n   };\n\n   getSelected = (emp, isSelected) => {\n      this.setState({\n         selected: emp,\n         canEdit: isSelected,\n         canDelete: isSelected\n      });\n   };\n\n   componentDidMount() {\n      this.getData();\n   }\n\n   async getData() {\n      this.setLoading(true);\n      var result;\n      try {\n         //this.resetErrorMsg();\n         result = await Client.Services.ReportingService.getReports();\n         this.setState({\n            data: result.data\n         });\n      } catch (err) {\n         alert(err);\n         this.setState({ errorMsg: err.response });\n         Client.Notifications.alert('Error while loading reports');\n      } finally {\n         this.setLoading(false);\n      }\n   }\n\n   async deleteReport(id) {\n      var result;\n      try {\n         this.resetErrorMsg();\n         result = await Client.Services.ReportingService.deleteReportByID(id);\n         if (result.status === 200) {\n            Client.Notifications.success('Report removed successfully');\n         }\n      } catch (err) {\n         this.setState({ errorMsg: err.response.status });\n         Client.Notifications.alert('Error, cannot delete Report');\n      } finally {\n         this.getData();\n         this.closeDeleteAlert();\n      }\n   }\n\n   handleSubmit = async e => {\n      e.preventDefault();\n      const {\n         kpi,\n         reportedBy,\n         result,\n         completed,\n         status,\n         reportedAt\n      } = this.state;\n      var errorMsg = 'Unknown Error';\n      let report = await Client.Services.ReportingService.createReportDTO(\n         kpi,\n         reportedBy,\n         result,\n         completed,\n         status,\n         reportedAt\n      );\n      try {\n         let result = await Client.Services.ReportingService.saveReport(report);\n         if (result.status === 200) {\n            Client.Notifications.success(`Report successfully saved`);\n            this.getData();\n         }\n      } catch (err) {\n         if (err.response.status === 409) {\n            errorMsg = `Error: ${err.response.data.message}`;\n            Client.Notifications.alert(errorMsg);\n         }\n         if (err.response.status !== 409) {\n            errorMsg = `Error:  while saving the report`;\n            Client.Notifications.error(errorMsg);\n         }\n         this.openAlert(errorMsg);\n      }\n   };\n   handleUpdate = async e => {\n      e.preventDefault();\n      const {\n         kpi,\n         reportedBy,\n         result,\n         completed,\n         status,\n         reportedAt\n      } = this.state;\n\n      var errorMsg = 'Unknown Error';\n      try {\n         let report = await Client.Services.ReportingService.createReportDTO(\n            kpi,\n            reportedBy,\n            result,\n            completed,\n            status,\n            reportedAt\n         );\n         let result = await Client.Services.ReportingService.updateReport(\n            report\n         );\n         if (result.status === 200) {\n            Client.Notifications.success(`Report updated successfully`);\n            this.getData();\n         }\n      } catch (err) {\n         if (err.response.status === 409) {\n            errorMsg = `Error: ${err.response.data.message}`;\n            Client.Notifications.alert(errorMsg);\n         }\n         if (err.response.status !== 409) {\n            errorMsg = `Error:  while updating the report`;\n            Client.Notifications.error(errorMsg);\n         }\n         this.openAlert(errorMsg);\n      }\n   };\n   openAlert(msg) {\n      this.setState({ isAlertOpen: true, errorMessage: msg });\n   }\n   closeAlert() {\n      this.setState({ isAlertOpen: false, errorMessage: '' });\n   }\n\n   resetErrorMsg() {\n      this.setState({ errorMessage: '' });\n   }\n\n   onChange = e => {\n      const state = this.state;\n      state[e.target.id] = e.target.value;\n      this.setState(state);\n   };\n\n   openEmployeesDialog() {\n      this.setState({\n         isEmployeesDialogOpen: true\n      });\n   }\n   closeEmployeesDialog() {\n      this.setState({\n         isEmployeesDialogOpen: false\n      });\n   }\n\n   openUserEditDialog = async e => {\n      e.preventDefault();\n      const { selected } = this.state;\n      var errorMsg = 'Unknown Error';\n      try {\n         let result = await Client.Services.EmployeesService.getEmployeeById(\n            selected._id\n         );\n         if (result.status === 200) {\n            let emp = result.data;\n            this.setState({\n               isUserEditDialogOpen: true,\n               name: emp.name,\n               email: emp.email,\n               user: emp.user._id,\n               type: emp.type._id,\n               project: emp.project._id,\n               team: emp.team._id\n            });\n         }\n      } catch (err) {\n         console.log(err);\n         this.setState({\n            isUserEditDialogOpen: true,\n            name: selected.name,\n            email: selected.email,\n            user: selected.user._id,\n            type: selected.type._id,\n            project: selected.project._id,\n            team: selected.team._id\n         });\n      }\n   };\n   closeUserEditDialog() {\n      this.setState({\n         isUserEditDialogOpen: false\n      });\n   }\n\n   openDeleteAlert() {\n      this.setState({\n         isDeleteAlertOpen: true\n      });\n   }\n   closeDeleteAlert() {\n      this.setState({\n         isDeleteAlertOpen: false\n      });\n   }\n\n   setLoading(loading) {\n      this.setState({\n         isLoading: loading\n      });\n   }\n\n   handleTabChange = activeTabID => {\n      this.setState({\n         activeTabID: activeTabID,\n         selectedTabId: activeTabID\n      });\n   };\n   clearForm() {\n      this.setState({\n         name: '',\n         email: '',\n         user: '',\n         type: '',\n         project: '',\n         team: '',\n         isAlertOpen: false,\n         errorMessage: ''\n      });\n   }\n\n   renderControlls() {\n      if (this.state.selectedTabId === 'Employees') {\n         return (\n            <TableControllers\n               onEdit={this.openUserEditDialog}\n               canEdit={this.state.canEdit}\n               onAdd={() => this.openEmployeesDialog()}\n               onDelete={() => this.openDeleteAlert()}\n               canDelete={this.state.canDelete}\n               onRefresh={() => this.getData()}\n            />\n         );\n      }\n   }\n\n   render() {\n      const {\n         data,\n         isLoading,\n         email,\n         name,\n         team,\n         project,\n         user,\n         type,\n         isAlertOpen,\n         selected\n      } = this.state;\n\n      return (\n         <div id='AdminPanel'>\n            <div className='mt-2'>\n               <H2>Employees Panel</H2>\n            </div>\n            <Tabs\n               onChange={this.handleTabChange}\n               selectedTabId={this.state.selectedTabId}\n               large\n            >\n               <Tab\n                  id='Employees'\n                  title='Employees'\n                  panel={\n                     <ReportsTable\n                        data={data}\n                        onRefresh={() => this.getData()}\n                        isLoading={isLoading}\n                        onSelection={this.getSelected}\n                     />\n                  }\n               />\n               <Tabs.Expander />\n               {this.renderControlls()}\n            </Tabs>\n            <EmployeeDialog\n               isOpen={this.state.isUserEditDialogOpen}\n               toOpen={() => this.openUserEditDialog()}\n               toClose={() => this.closeUserEditDialog()}\n               name={name}\n               email={email}\n               user={user}\n               type={type}\n               project={project}\n               team={team}\n               onChange={this.onChange}\n               handleSubmit={this.handleUpdate}\n               buttonCaption='Update'\n               onClear={() => this.clearForm()}\n               isAlertOpen={isAlertOpen}\n               closeAlert={() => this.closeAlert()}\n            />\n            <EmployeeDialog\n               isOpen={this.state.isEmployeesDialogOpen}\n               toOpen={() => this.openEmployeesDialog()}\n               toClose={() => this.closeEmployeesDialog()}\n               name={name}\n               email={email}\n               user={user}\n               type={type}\n               project={project}\n               team={team}\n               onChange={this.onChange}\n               handleSubmit={this.handleSubmit}\n               buttonCaption='Add'\n               onClear={() => this.clearForm()}\n               isAlertOpen={isAlertOpen}\n               closeAlert={() => this.closeAlert()}\n            />\n            <Alert\n               isOpen={this.state.isDeleteAlertOpen}\n               confirmButtonText='Delete'\n               onConfirm={() => this.deleteUser(selected._id)}\n               cancelButtonText='Cancel'\n               onCancel={() => this.closeDeleteAlert()}\n               intent='danger'\n               icon='issue'\n               ussePortal={\n                  <Portal container={document.getElementById('AdminPanel')} />\n               }\n            >\n               <H5>Are you sure that you want to delete this user?</H5>\n               <strong>{`User: ${selected.username}`}</strong>\n               <p></p>\n               <strong\n                  className={Classes.TEXT_MUTED}\n               >{`Will be permanentyly deleted...`}</strong>\n            </Alert>\n         </div>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}