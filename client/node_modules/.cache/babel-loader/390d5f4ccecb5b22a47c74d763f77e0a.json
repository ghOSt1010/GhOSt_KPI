{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { Utils as CoreUtils } from \"@blueprintjs/core\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as Classes from \"../common/classes\";\nimport { Regions } from \"../regions\"; // don't include \"regions\" or \"regionStyles\" in here, because they can't be shallowly compared\n\nvar UPDATE_PROPS_KEYS = [\"className\"];\n\nvar RegionLayer =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(RegionLayer, _super);\n\n  function RegionLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.renderRegion = function (_region, index) {\n      var _a = _this.props,\n          className = _a.className,\n          regionStyles = _a.regionStyles;\n      return React.createElement(\"div\", {\n        className: classNames(Classes.TABLE_OVERLAY, Classes.TABLE_REGION, className),\n        key: index,\n        style: regionStyles[index]\n      });\n    };\n\n    return _this;\n  }\n\n  RegionLayer.prototype.shouldComponentUpdate = function (nextProps) {\n    // shallowly comparable props like \"className\" tend not to change in the default table\n    // implementation, so do that check last with hope that we return earlier and avoid it\n    // altogether.\n    return !CoreUtils.arraysEqual(this.props.regions, nextProps.regions, Regions.regionsEqual) || !CoreUtils.arraysEqual(this.props.regionStyles, nextProps.regionStyles, CoreUtils.shallowCompareKeys) || !CoreUtils.shallowCompareKeys(this.props, nextProps, {\n      include: UPDATE_PROPS_KEYS\n    });\n  };\n\n  RegionLayer.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: Classes.TABLE_OVERLAY_LAYER\n    }, this.renderRegionChildren());\n  };\n\n  RegionLayer.prototype.renderRegionChildren = function () {\n    var regions = this.props.regions;\n\n    if (regions == null) {\n      return undefined;\n    }\n\n    return regions.map(this.renderRegion);\n  };\n\n  return RegionLayer;\n}(React.Component);\n\nexport { RegionLayer };","map":null,"metadata":{},"sourceType":"module"}