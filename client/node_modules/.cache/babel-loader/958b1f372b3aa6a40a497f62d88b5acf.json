{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Table/SLAsTable/SLAsTable.jsx\";\nimport React, { Component } from 'react';\nimport { Table, Button, ButtonGroup, Modal, Card, CardHeader, CardBody, Spinner } from 'reactstrap';\nimport UpdateslaForm from '../../Forms/SLAsForms/UpdateSLAForm';\nimport axios from 'axios';\n\nvar SLAsTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SLAsTable, _Component);\n\n  function SLAsTable(props) {\n    var _this;\n\n    _classCallCheck(this, SLAsTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SLAsTable).call(this, props));\n    _this.getSLAs = _this.getSLAs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderTableHeaders = _this.renderTableHeaders.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderTableData = _this.renderTableData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      modal: false,\n      theme: _this.props.theme,\n      isLoading: true,\n      id: '',\n      projectName: '',\n      slaType: '',\n      SLA: '',\n      description: '',\n      logic: '',\n      target: '',\n      slaArr: []\n    };\n    return _this;\n  }\n\n  _createClass(SLAsTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getSLAs();\n    }\n  }, {\n    key: \"getSLAs\",\n    value: function getSLAs() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var URL = '/api/sla/all';\n      axios.get(URL).then(function (res) {\n        _this2.setState({\n          slaArr: res.data,\n          isLoading: false\n        });\n      }).catch(function (err) {\n        alert('Error loading SLAs table');\n        console.log(JSON.stringify(err));\n      });\n    }\n  }, {\n    key: \"setTheme\",\n    value: function setTheme() {\n      var theme = this.state.theme;\n\n      if (theme === 'dark') {\n        return 'bg-dark text-white table-dark';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"setCardTheme\",\n    value: function setCardTheme() {\n      var theme = this.state.theme;\n\n      if (theme === 'dark') {\n        return 'bg-dark text-white';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"addActionButton\",\n    value: function addActionButton(sla) {\n      var _this3 = this;\n\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        color: \"danger\",\n        onClick: function onClick(e) {\n          return _this3.handleClick(e, 'remove', sla);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-trash-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(Button, {\n        size: \"sm\",\n        onClick: function onClick(e) {\n          return _this3.handleClick(e, 'edit', sla);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e, action, sla) {\n      e.preventDefault();\n      if (action === 'edit') this.editsla(sla);\n      if (action === 'remove') this.removesla(sla);\n    }\n  }, {\n    key: \"editsla\",\n    value: function editsla(sla) {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n      this.setState({\n        id: sla._id,\n        projectName: sla.project.name,\n        slaType: sla.type.type,\n        SLA: sla.SLA,\n        description: sla.description,\n        logic: sla.logic,\n        target: sla.target\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"removesla\",\n    value: function removesla(sla) {\n      var URL = '/api/sla/' + sla._id;\n      axios.delete(URL).then(function (res) {\n        alert('sla ' + sla.SLA + ' removed!');\n        document.getElementById('getslasData').click();\n      }).catch(function (err) {\n        alert('Something went wrong :(');\n      });\n    }\n  }, {\n    key: \"renderTableHeaders\",\n    value: function renderTableHeaders() {\n      return React.createElement(\"tr\", {\n        className: \"bg-black text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Project\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"SLA Type\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"SLA\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Target\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Logic\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Action\"));\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      var _this4 = this;\n\n      return this.state.slaArr.map(function (sla, index) {\n        return React.createElement(\"tr\", {\n          key: sla._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, sla.project.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, sla.type.type), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, sla.SLA), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, sla.description), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, sla.target), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, sla.logic), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, _this4.addActionButton(sla)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          theme = _this$state.theme,\n          slaArr = _this$state.slaArr,\n          id = _this$state.id,\n          isLoading = _this$state.isLoading,\n          modal = _this$state.modal,\n          projectname = _this$state.projectname,\n          slaType = _this$state.slaType,\n          SLA = _this$state.SLA,\n          description = _this$state.description,\n          logic = _this$state.logic,\n          target = _this$state.target;\n\n      if (isLoading) {\n        return React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }));\n      }\n\n      if (slaArr.length === 0) {\n        return React.createElement(\"div\", {\n          className: \"text-center text-secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, \"No SLAs found...\"));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"All Available SLAs\", React.createElement(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        ref: \"getslasData\",\n        id: \"getslasData\",\n        className: \"float-right\",\n        onClick: this.getSLAs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-sync-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(Table, {\n        responsive: true,\n        borderless: true,\n        striped: true,\n        hover: true,\n        size: \"sm\",\n        className: this.setTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, this.renderTableHeaders()), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, this.renderTableData())), React.createElement(Modal, {\n        isOpen: modal,\n        toggle: true,\n        className: \"modal-full modal-my\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.setCardTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"fas fa-chart-line header-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), 'Edit sla: ' + SLA, React.createElement(\"span\", {\n        className: \"far fa-window-restore float-right header-icon text-secondary\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        className: this.setTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(UpdateslaForm, {\n        theme: theme,\n        id: id,\n        projectname: projectname,\n        slaType: slaType,\n        SLA: SLA,\n        description: description,\n        target: target,\n        logic: logic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return SLAsTable;\n}(Component);\n/*\r\n\r\n*/\n\n\nexport { SLAsTable as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Table/SLAsTable/SLAsTable.jsx"],"names":["React","Component","Table","Button","ButtonGroup","Modal","Card","CardHeader","CardBody","Spinner","UpdateslaForm","axios","SLAsTable","props","getSLAs","bind","renderTableHeaders","renderTableData","handleClick","closeModal","state","modal","theme","isLoading","id","projectName","slaType","SLA","description","logic","target","slaArr","setState","URL","get","then","res","data","catch","err","alert","console","log","JSON","stringify","sla","e","action","preventDefault","editsla","removesla","prevState","_id","project","name","type","delete","document","getElementById","click","map","index","addActionButton","projectname","length","setTheme","setCardTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Table,\r\n   Button,\r\n   ButtonGroup,\r\n   Modal,\r\n   Card,\r\n   CardHeader,\r\n   CardBody,\r\n   Spinner\r\n} from 'reactstrap';\r\nimport UpdateslaForm from '../../Forms/SLAsForms/UpdateSLAForm';\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class SLAsTable extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.getSLAs = this.getSLAs.bind(this);\r\n      this.renderTableHeaders = this.renderTableHeaders.bind(this);\r\n      this.renderTableData = this.renderTableData.bind(this);\r\n      this.handleClick = this.handleClick.bind(this);\r\n      this.closeModal = this.closeModal.bind(this);\r\n      this.state = {\r\n         modal: false,\r\n         theme: this.props.theme,\r\n         isLoading: true,\r\n         id: '',\r\n         projectName: '',\r\n         slaType: '',\r\n         SLA: '',\r\n         description: '',\r\n         logic: '',\r\n         target: '',\r\n         slaArr: []\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.getSLAs();\r\n   }\r\n\r\n   getSLAs() {\r\n      this.setState({ isLoading: true });\r\n\r\n      const URL = '/api/sla/all';\r\n\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               slaArr: res.data,\r\n               isLoading: false\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Error loading SLAs table');\r\n            console.log(JSON.stringify(err));\r\n         });\r\n   }\r\n\r\n   setTheme() {\r\n      const { theme } = this.state;\r\n      if (theme === 'dark') {\r\n         return 'bg-dark text-white table-dark';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   setCardTheme() {\r\n      const { theme } = this.state;\r\n      if (theme === 'dark') {\r\n         return 'bg-dark text-white';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   addActionButton(sla) {\r\n      return (\r\n         <ButtonGroup>\r\n            <Button\r\n               size='sm'\r\n               color='danger'\r\n               onClick={e => this.handleClick(e, 'remove', sla)}\r\n            >\r\n               <span className='fas fa-trash-alt' />\r\n            </Button>\r\n            <Button size='sm' onClick={e => this.handleClick(e, 'edit', sla)}>\r\n               <span className='fas fa-edit' />\r\n            </Button>\r\n         </ButtonGroup>\r\n      );\r\n   }\r\n\r\n   handleClick(e, action, sla) {\r\n      e.preventDefault();\r\n      if (action === 'edit') this.editsla(sla);\r\n      if (action === 'remove') this.removesla(sla);\r\n   }\r\n\r\n   editsla(sla) {\r\n      this.setState(prevState => ({\r\n         modal: !prevState.modal\r\n      }));\r\n\r\n      this.setState({\r\n         id: sla._id,\r\n         projectName: sla.project.name,\r\n         slaType: sla.type.type,\r\n         SLA: sla.SLA,\r\n         description: sla.description,\r\n         logic: sla.logic,\r\n         target: sla.target\r\n      });\r\n   }\r\n\r\n   closeModal() {\r\n      this.setState(prevState => ({\r\n         modal: !prevState.modal\r\n      }));\r\n   }\r\n\r\n   removesla(sla) {\r\n      const URL = '/api/sla/' + sla._id;\r\n      axios\r\n         .delete(URL)\r\n         .then(res => {\r\n            alert('sla ' + sla.SLA + ' removed!');\r\n            document.getElementById('getslasData').click();\r\n         })\r\n         .catch(err => {\r\n            alert('Something went wrong :(');\r\n         });\r\n   }\r\n\r\n   renderTableHeaders() {\r\n      return (\r\n         <tr className='bg-black text-white'>\r\n            <th>Project</th>\r\n            <th>SLA Type</th>\r\n            <th>SLA</th>\r\n            <th>Description</th>\r\n            <th>Target</th>\r\n            <th>Logic</th>\r\n            <th>Action</th>\r\n         </tr>\r\n      );\r\n   }\r\n\r\n   renderTableData() {\r\n      return this.state.slaArr.map((sla, index) => {\r\n         return (\r\n            <tr key={sla._id}>\r\n               <td>{sla.project.name}</td>\r\n               <td>{sla.type.type}</td>\r\n               <td>{sla.SLA}</td>\r\n               <td>{sla.description}</td>\r\n               <td>{sla.target}</td>\r\n               <td>{sla.logic}</td>\r\n               <td>{this.addActionButton(sla)}</td>\r\n            </tr>\r\n         );\r\n      });\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         theme,\r\n         slaArr,\r\n         id,\r\n         isLoading,\r\n         modal,\r\n         projectname,\r\n         slaType,\r\n         SLA,\r\n         description,\r\n         logic,\r\n         target\r\n      } = this.state;\r\n\r\n      if (isLoading) {\r\n         return (\r\n            <div className='text-center'>\r\n               <Spinner color='primary' />\r\n            </div>\r\n         );\r\n      }\r\n\r\n      if (slaArr.length === 0) {\r\n         return (\r\n            <div className='text-center text-secondary'>\r\n               <h6>No SLAs found...</h6>\r\n            </div>\r\n         );\r\n      }\r\n\r\n      return (\r\n         <div>\r\n            <p>\r\n               All Available SLAs\r\n               <Button\r\n                  color='primary'\r\n                  size='sm'\r\n                  ref='getslasData'\r\n                  id='getslasData'\r\n                  className='float-right'\r\n                  onClick={this.getSLAs}\r\n               >\r\n                  <span className='fas fa-sync-alt' />\r\n               </Button>\r\n            </p>\r\n            <hr />\r\n            <Table\r\n               responsive\r\n               borderless\r\n               striped\r\n               hover\r\n               size='sm'\r\n               className={this.setTheme()}\r\n            >\r\n               <thead>{this.renderTableHeaders()}</thead>\r\n               <tbody>{this.renderTableData()}</tbody>\r\n            </Table>\r\n            <Modal isOpen={modal} toggle className='modal-full modal-my'>\r\n               <Card className={this.setCardTheme()}>\r\n                  <CardHeader>\r\n                     <span class='fas fa-chart-line header-icon' />\r\n                     {'Edit sla: ' + SLA}\r\n                     <span\r\n                        className='far fa-window-restore float-right header-icon text-secondary'\r\n                        onClick={this.closeModal}\r\n                     />\r\n                  </CardHeader>\r\n\r\n                  <CardBody className={this.setTheme()}>\r\n                     <UpdateslaForm\r\n                        theme={theme}\r\n                        id={id}\r\n                        projectname={projectname}\r\n                        slaType={slaType}\r\n                        SLA={SLA}\r\n                        description={description}\r\n                        target={target}\r\n                        logic={logic}\r\n                     />\r\n                  </CardBody>\r\n               </Card>\r\n            </Modal>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\n/*\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}