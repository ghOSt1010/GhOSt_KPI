{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/TableCell.jsx\";\nimport React, { Component } from 'react';\nimport { Icon } from '@blueprintjs/core';\n\nvar TableCell =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableCell, _Component);\n\n  function TableCell() {\n    _classCallCheck(this, TableCell);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableCell).apply(this, arguments));\n  }\n\n  _createClass(TableCell, [{\n    key: \"handleCellValue\",\n    value: function handleCellValue(value) {\n      if (typeof value === 'boolean') {\n        if (value) {\n          return React.createElement(Icon, {\n            icon: \"tick\",\n            intent: \"success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 8\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(Icon, {\n          icon: \"cross\",\n          intent: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        });\n      }\n\n      if (typeof value === 'undefined') {\n        return 'N/A';\n      }\n\n      if (value == null) {\n        return 'null';\n      }\n\n      return value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          center = _this$props.center,\n          value = _this$props.value,\n          key = _this$props.key;\n      return React.createElement(\"td\", {\n        className: center ? 'text-center' : '',\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.handleCellValue(value));\n    }\n  }]);\n\n  return TableCell;\n}(Component);\n\nexport { TableCell as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/TableCell.jsx"],"names":["React","Component","Icon","TableCell","value","props","center","key","handleCellValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;;IAEqBC,S;;;;;;;;;;;;;oCACFC,K,EAAO;AACpB,UAAI,OAAOA,KAAP,KAAiB,SAArB,EAAgC;AAC7B,YAAIA,KAAJ,EAAW;AACR,iBAAO,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAC,MAAX;AAAkB,YAAA,MAAM,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACF;;AACD,eAAO,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAmB,UAAA,MAAM,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACF;;AACD,UAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC/B,eAAO,KAAP;AACF;;AACD,UAAIA,KAAK,IAAI,IAAb,EAAmB;AAChB,eAAO,MAAP;AACF;;AACD,aAAOA,KAAP;AACF;;;6BAEQ;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACEC,MADF,eACEA,MADF;AAAA,UACUF,KADV,eACUA,KADV;AAAA,UACiBG,GADjB,eACiBA,GADjB;AAEN,aACG;AAAI,QAAA,SAAS,EAAED,MAAM,GAAG,aAAH,GAAmB,EAAxC;AAA4C,QAAA,GAAG,EAAEC,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKC,eAAL,CAAqBJ,KAArB,CADJ,CADH;AAKF;;;;EAxBmCH,S;;SAAlBE,S","sourcesContent":["import React, { Component } from 'react';\r\nimport { Icon } from '@blueprintjs/core';\r\n\r\nexport default class TableCell extends Component {\r\n   handleCellValue(value) {\r\n      if (typeof value === 'boolean') {\r\n         if (value) {\r\n            return <Icon icon='tick' intent='success' />;\r\n         }\r\n         return <Icon icon='cross' intent='danger' />;\r\n      }\r\n      if (typeof value === 'undefined') {\r\n         return 'N/A';\r\n      }\r\n      if (value == null) {\r\n         return 'null';\r\n      }\r\n      return value;\r\n   }\r\n\r\n   render() {\r\n      const { center, value, key } = this.props;\r\n      return (\r\n         <td className={center ? 'text-center' : ''} key={key}>\r\n            {this.handleCellValue(value)}\r\n         </td>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}