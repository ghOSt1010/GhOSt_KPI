{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2 } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\nimport { LoadableContent } from \"../common/loadableContent\";\nimport { HeaderCell } from \"./headerCell\";\n\nvar RowHeaderCell =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(RowHeaderCell, _super);\n\n  function RowHeaderCell() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RowHeaderCell.prototype.render = function () {\n    var _a = this.props,\n        // from IRowHeaderCellProps\n    enableRowReordering = _a.enableRowReordering,\n        isRowSelected = _a.isRowSelected,\n        name = _a.name,\n        nameRenderer = _a.nameRenderer,\n        // from IHeaderProps\n    spreadableProps = tslib_1.__rest(_a, [\"enableRowReordering\", \"isRowSelected\", \"name\", \"nameRenderer\"]);\n\n    var defaultName = React.createElement(\"div\", {\n      className: Classes.TABLE_ROW_NAME_TEXT\n    }, name);\n    var nameComponent = React.createElement(LoadableContent, {\n      loading: spreadableProps.loading\n    }, nameRenderer == null ? defaultName : nameRenderer(name, spreadableProps.index));\n    return React.createElement(HeaderCell, tslib_1.__assign({\n      isReorderable: this.props.enableRowReordering,\n      isSelected: this.props.isRowSelected\n    }, spreadableProps), React.createElement(\"div\", {\n      className: Classes.TABLE_ROW_NAME\n    }, nameComponent), this.props.children, spreadableProps.loading ? undefined : spreadableProps.resizeHandle);\n  };\n\n  RowHeaderCell = tslib_1.__decorate([polyfill], RowHeaderCell);\n  return RowHeaderCell;\n}(AbstractPureComponent2);\n\nexport { RowHeaderCell };","map":null,"metadata":{},"sourceType":"module"}