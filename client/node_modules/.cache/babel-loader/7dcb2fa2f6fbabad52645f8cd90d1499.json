{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Dashboards/components/TestComponent2.jsx\";\nimport React, { Component } from 'react';\nimport CardWithModal from '../../../components/Card/CardWithModal';\nimport LineChart from '../../../components/Charts/ApexChart/LineChart';\n\nvar ChartsBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChartsBuilder, _Component);\n\n  function ChartsBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChartsBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChartsBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      kpis: [],\n      labels: [1, 2, 3, 4, 5, 6, 6, 78, 8, 8, 90],\n      series: [{\n        name: 'series-1',\n        data: [30, 40, 45, 50, 49, 60, 70, 91]\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ChartsBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unpackData();\n      console.log(this.state.kpis);\n    }\n  }, {\n    key: \"unpackData\",\n    value: function unpackData() {\n      /*\n      var k = this.props.data.map(d => {\n         return {\n            labels: d.reports.map(r => {\n               return r.reportedAt;\n            }),\n            series: {\n               name: d.name,\n               data: d.reports.map(r => {\n                  return r.result;\n               })\n            }\n         };\n      });\n      */\n      var k = this.props.data.map(function (d) {\n        return d.name;\n      });\n      this.setState({\n        kpis: k\n      });\n    }\n  }, {\n    key: \"renderKPIs\",\n    value: function renderKPIs() {\n      var data = this.props.data;\n      data.map(function (data) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, data.name);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.renderKPIs());\n    }\n  }]);\n\n  return ChartsBuilder;\n}(Component);\n\nexport { ChartsBuilder as default };\nChartsBuilder.defaultProps = {\n  data: []\n};\n/*\n\n<CardWithModal headerText='KPI_Name'>\n               <LineChart\n                  labels={data.map(d => {\n                     return d.reports.map(r => {\n                        return r.reportedAt;\n                     });\n                  })}\n                  yaxisLabel='Results'\n                  xasisLabel='Reports'\n                  series={data.map(d => {\n                     return d.reports.map(r => {\n                        return r.result;\n                     });\n                  })}\n                  targetValue={data.target}\n                  targetInfo='KPI target'\n               />\n            </CardWithModal>\n            \n            */","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Dashboards/components/TestComponent2.jsx"],"names":["React","Component","CardWithModal","LineChart","ChartsBuilder","state","kpis","labels","series","name","data","unpackData","console","log","k","props","map","d","setState","renderKPIs","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,SAAP,MAAsB,gDAAtB;;IAEqBC,a;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,IAAI,EAAE,EADD;AAELC,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,EAAhC,CAFH;AAILC,MAAAA,MAAM,EAAE,CACL;AACGC,QAAAA,IAAI,EAAE,UADT;AAEGC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B;AAFT,OADK;AAJH,K;;;;;;wCAWY;AACjB,WAAKC,UAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,IAAvB;AACF;;;iCAEY;AACV;;;;;;;;;;;;;;;AAeA,UAAIQ,CAAC,GAAG,KAAKC,KAAL,CAAWL,IAAX,CAAgBM,GAAhB,CAAoB,UAAAC,CAAC,EAAI;AAC9B,eAAOA,CAAC,CAACR,IAAT;AACF,OAFO,CAAR;AAGA,WAAKS,QAAL,CAAc;AAAEZ,QAAAA,IAAI,EAAEQ;AAAR,OAAd;AACF;;;iCACY;AAAA,UACFJ,IADE,GACO,KAAKK,KADZ,CACFL,IADE;AAEVA,MAAAA,IAAI,CAACM,GAAL,CAAS,UAAAN,IAAI,EAAI;AACd,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,IAAI,CAACD,IAAT,CAAP;AACF,OAFD;AAGF;;;6BAEQ;AACN,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKU,UAAL,EAAN,CAAP;AACF;;;;EA/CuClB,S;;SAAtBG,a;AAkDrBA,aAAa,CAACgB,YAAd,GAA6B;AAC1BV,EAAAA,IAAI,EAAE;AADoB,CAA7B;AAIA","sourcesContent":["import React, { Component } from 'react';\nimport CardWithModal from '../../../components/Card/CardWithModal';\nimport LineChart from '../../../components/Charts/ApexChart/LineChart';\n\nexport default class ChartsBuilder extends Component {\n   state = {\n      kpis: [],\n      labels: [1, 2, 3, 4, 5, 6, 6, 78, 8, 8, 90],\n\n      series: [\n         {\n            name: 'series-1',\n            data: [30, 40, 45, 50, 49, 60, 70, 91]\n         }\n      ]\n   };\n   componentDidMount() {\n      this.unpackData();\n      console.log(this.state.kpis);\n   }\n\n   unpackData() {\n      /*\n      var k = this.props.data.map(d => {\n         return {\n            labels: d.reports.map(r => {\n               return r.reportedAt;\n            }),\n            series: {\n               name: d.name,\n               data: d.reports.map(r => {\n                  return r.result;\n               })\n            }\n         };\n      });\n      */\n      var k = this.props.data.map(d => {\n         return d.name;\n      });\n      this.setState({ kpis: k });\n   }\n   renderKPIs() {\n      const { data } = this.props;\n      data.map(data => {\n         return <p>{data.name}</p>;\n      });\n   }\n\n   render() {\n      return <div>{this.renderKPIs()}</div>;\n   }\n}\n\nChartsBuilder.defaultProps = {\n   data: []\n};\n\n/*\n\n<CardWithModal headerText='KPI_Name'>\n               <LineChart\n                  labels={data.map(d => {\n                     return d.reports.map(r => {\n                        return r.reportedAt;\n                     });\n                  })}\n                  yaxisLabel='Results'\n                  xasisLabel='Reports'\n                  series={data.map(d => {\n                     return d.reports.map(r => {\n                        return r.result;\n                     });\n                  })}\n                  targetValue={data.target}\n                  targetInfo='KPI target'\n               />\n            </CardWithModal>\n            \n            */\n"]},"metadata":{},"sourceType":"module"}