{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/EmployeesTable.jsx\";\nimport React, { Component } from 'react';\nimport Table from './Table';\nimport TableCell from './TableCell';\n\nvar EmployeesTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EmployeesTable, _Component);\n\n  function EmployeesTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EmployeesTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EmployeesTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: '',\n      headers: [{\n        text: '#',\n        center: true\n      }, {\n        text: 'Name'\n      }, {\n        text: 'Email'\n      }, {\n        text: 'Is User',\n        center: true\n      }, {\n        text: 'Type'\n      }, {\n        text: 'Project'\n      }, {\n        text: 'Team'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(EmployeesTable, [{\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.renderTableRows());\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      var _this2 = this;\n\n      var data = this.props.data;\n      return data.map(function (employee, key) {\n        return React.createElement(\"tr\", {\n          key: employee._id,\n          onClick: function onClick(e) {\n            return _this2.handleSelection(e, employee);\n          },\n          className: \" \".concat(_this2.state.selected._id === employee._id ? 'bg-selected' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          key: key,\n          value: key,\n          center: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: employee.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: employee.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: employee.user === null ? false : true,\n          center: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: employee.type === null ? 'N/A' : employee.type.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: employee.project === null ? 'N/A' : employee.project.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: employee.team == null ? 'N/A' : employee.team.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"handleSelection\",\n    value: function handleSelection(e, employee) {\n      e.preventDefault();\n      var selected = this.state.selected;\n\n      if (selected._id !== employee._id) {\n        this.props.onSelection(employee, false);\n        this.setState({\n          selected: employee\n        });\n        return;\n      }\n\n      this.props.onSelection({}, true);\n      this.setState({\n        selected: {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table, {\n        headers: this.state.headers,\n        rows: this.renderTableRows(),\n        errorMsg: this.props.errorMsg,\n        isLoading: this.props.isLoading,\n        onRefresh: this.props.onRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return EmployeesTable;\n}(Component);\n\nexport { EmployeesTable as default };\nEmployeesTable.defaultProps = {\n  data: [],\n  onRefresh: function onRefresh() {\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/EmployeesTable.jsx"],"names":["React","Component","Table","TableCell","EmployeesTable","state","selected","headers","text","center","renderTableRows","data","props","map","employee","key","_id","e","handleSelection","name","email","user","type","project","team","preventDefault","onSelection","setState","errorMsg","isLoading","onRefresh","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEqBC,c;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,QAAQ,EAAE,EADL;AAELC,MAAAA,OAAO,EAAE,CACN;AAAEC,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE;AAArB,OADM,EAEN;AAAED,QAAAA,IAAI,EAAE;AAAR,OAFM,EAGN;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHM,EAIN;AAAEA,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,MAAM,EAAE;AAA3B,OAJM,EAKN;AAAED,QAAAA,IAAI,EAAE;AAAR,OALM,EAMN;AAAEA,QAAAA,IAAI,EAAE;AAAR,OANM,EAON;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAPM;AAFJ,K;;;;;;sCAaU;AACf,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKE,eAAL,EAAR,CAAP;AACF;;;sCAEiB;AAAA;;AAAA,UACPC,IADO,GACE,KAAKC,KADP,CACPD,IADO;AAEf,aAAOA,IAAI,CAACE,GAAL,CAAS,UAACC,QAAD,EAAWC,GAAX,EAAmB;AAChC,eACG;AACG,UAAA,GAAG,EAAED,QAAQ,CAACE,GADjB;AAEG,UAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,mBAAI,MAAI,CAACC,eAAL,CAAqBD,CAArB,EAAwBH,QAAxB,CAAJ;AAAA,WAFb;AAGG,UAAA,SAAS,aACN,MAAI,CAACT,KAAL,CAAWC,QAAX,CAAoBU,GAApB,KAA4BF,QAAQ,CAACE,GAArC,GAA2C,aAA3C,GAA2D,EADrD,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOG,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAED,GAAhB;AAAqB,UAAA,KAAK,EAAEA,GAA5B;AAAiC,UAAA,MAAM,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPH,EAQG,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAED,QAAQ,CAACK,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARH,EASG,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEL,QAAQ,CAACM,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATH,EAUG,oBAAC,SAAD;AACG,UAAA,KAAK,EAAEN,QAAQ,CAACO,IAAT,KAAkB,IAAlB,GAAyB,KAAzB,GAAiC,IAD3C;AAEG,UAAA,MAAM,MAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVH,EAcG,oBAAC,SAAD;AACG,UAAA,KAAK,EAAEP,QAAQ,CAACQ,IAAT,KAAkB,IAAlB,GAAyB,KAAzB,GAAiCR,QAAQ,CAACQ,IAAT,CAAcA,IADzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdH,EAiBG,oBAAC,SAAD;AACG,UAAA,KAAK,EACFR,QAAQ,CAACS,OAAT,KAAqB,IAArB,GAA4B,KAA5B,GAAoCT,QAAQ,CAACS,OAAT,CAAiBJ,IAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAjBH,EAsBG,oBAAC,SAAD;AACG,UAAA,KAAK,EAAEL,QAAQ,CAACU,IAAT,IAAiB,IAAjB,GAAwB,KAAxB,GAAgCV,QAAQ,CAACU,IAAT,CAAcL,IADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtBH,CADH;AA4BF,OA7BM,CAAP;AA8BF;;;oCAEeF,C,EAAGH,Q,EAAU;AAC1BG,MAAAA,CAAC,CAACQ,cAAF;AAD0B,UAElBnB,QAFkB,GAEL,KAAKD,KAFA,CAElBC,QAFkB;;AAG1B,UAAIA,QAAQ,CAACU,GAAT,KAAiBF,QAAQ,CAACE,GAA9B,EAAmC;AAChC,aAAKJ,KAAL,CAAWc,WAAX,CAAuBZ,QAAvB,EAAiC,KAAjC;AACA,aAAKa,QAAL,CAAc;AACXrB,UAAAA,QAAQ,EAAEQ;AADC,SAAd;AAGA;AACF;;AACD,WAAKF,KAAL,CAAWc,WAAX,CAAuB,EAAvB,EAA2B,IAA3B;AACA,WAAKC,QAAL,CAAc;AAAErB,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACF;;;6BAEQ;AACN,aACG,oBAAC,KAAD;AACG,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OADvB;AAEG,QAAA,IAAI,EAAE,KAAKG,eAAL,EAFT;AAGG,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWgB,QAHxB;AAIG,QAAA,SAAS,EAAE,KAAKhB,KAAL,CAAWiB,SAJzB;AAKG,QAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWkB,SALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AASF;;;;EA5EwC7B,S;;SAAvBG,c;AA8ErBA,cAAc,CAAC2B,YAAf,GAA8B;AAC3BpB,EAAAA,IAAI,EAAE,EADqB;AAE3BmB,EAAAA,SAAS,EAAE,qBAAW;AACnB;AACF;AAJ0B,CAA9B","sourcesContent":["import React, { Component } from 'react';\nimport Table from './Table';\nimport TableCell from './TableCell';\n\nexport default class EmployeesTable extends Component {\n   state = {\n      selected: '',\n      headers: [\n         { text: '#', center: true },\n         { text: 'Name' },\n         { text: 'Email' },\n         { text: 'Is User', center: true },\n         { text: 'Type' },\n         { text: 'Project' },\n         { text: 'Team' }\n      ]\n   };\n\n   renderTableBody() {\n      return <tbody>{this.renderTableRows()}</tbody>;\n   }\n\n   renderTableRows() {\n      const { data } = this.props;\n      return data.map((employee, key) => {\n         return (\n            <tr\n               key={employee._id}\n               onClick={e => this.handleSelection(e, employee)}\n               className={` ${\n                  this.state.selected._id === employee._id ? 'bg-selected' : ''\n               }`}\n            >\n               <TableCell key={key} value={key} center />\n               <TableCell value={employee.name} />\n               <TableCell value={employee.email} />\n               <TableCell\n                  value={employee.user === null ? false : true}\n                  center\n               />\n               <TableCell\n                  value={employee.type === null ? 'N/A' : employee.type.type}\n               />\n               <TableCell\n                  value={\n                     employee.project === null ? 'N/A' : employee.project.name\n                  }\n               />\n               <TableCell\n                  value={employee.team == null ? 'N/A' : employee.team.name}\n               />\n            </tr>\n         );\n      });\n   }\n\n   handleSelection(e, employee) {\n      e.preventDefault();\n      const { selected } = this.state;\n      if (selected._id !== employee._id) {\n         this.props.onSelection(employee, false);\n         this.setState({\n            selected: employee\n         });\n         return;\n      }\n      this.props.onSelection({}, true);\n      this.setState({ selected: {} });\n   }\n\n   render() {\n      return (\n         <Table\n            headers={this.state.headers}\n            rows={this.renderTableRows()}\n            errorMsg={this.props.errorMsg}\n            isLoading={this.props.isLoading}\n            onRefresh={this.props.onRefresh}\n         />\n      );\n   }\n}\nEmployeesTable.defaultProps = {\n   data: [],\n   onRefresh: function() {\n      return;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}