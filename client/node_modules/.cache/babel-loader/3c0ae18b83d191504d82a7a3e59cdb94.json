{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Table/WorkingHourTable/WorkingHourTable.jsx\";\nimport React, { Component } from 'react';\nimport { Table, Button, ButtonGroup, Modal, Card, CardHeader, CardBody, Spinner } from 'reactstrap';\nimport axios from 'axios';\nimport UpdateWorkingHourTargetForm from '../../Forms/WorkingHoursForms/UpdateWorkingHourTargetForm';\nimport Auth from '../../../Modules/Auth/Auth';\n\nvar WorkingHourTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WorkingHourTable, _Component);\n\n  function WorkingHourTable(props) {\n    var _this;\n\n    _classCallCheck(this, WorkingHourTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorkingHourTable).call(this, props));\n    _this.getWorkingHoursTargets = _this.getWorkingHoursTargets.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderTableHeaders = _this.renderTableHeaders.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderTableData = _this.renderTableData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      modal: false,\n      theme: _this.props.theme,\n      isLoading: true,\n      id: '',\n      year: '',\n      month: '',\n      target: '',\n      message: '',\n      workingHoursTargets: []\n    };\n    return _this;\n  }\n\n  _createClass(WorkingHourTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getWorkingHoursTargets();\n    }\n  }, {\n    key: \"getWorkingHoursTargets\",\n    value: function getWorkingHoursTargets() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var URL = '/api/workingHours/all';\n      axios.get(URL).then(function (res) {\n        _this2.setState({\n          workingHoursTargets: res.data,\n          isLoading: false\n        });\n      }).catch(function (err) {\n        alert('Error loading Working Hours Targets table');\n\n        _this2.setState({\n          isLoading: false,\n          message: 'Error loading Working Hours Targets'\n        });\n\n        console.log(JSON.stringify(err));\n      });\n    }\n  }, {\n    key: \"setTheme\",\n    value: function setTheme() {\n      var theme = this.state.theme;\n\n      if (theme === 'dark') {\n        return 'bg-dark text-white table-dark';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"setCardTheme\",\n    value: function setCardTheme() {\n      var theme = this.state.theme;\n\n      if (theme === 'dark') {\n        return 'bg-dark text-white';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"addActionButton\",\n    value: function addActionButton(target) {\n      var _this3 = this;\n\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        onClick: function onClick(e) {\n          return _this3.handleClick(e, 'delete', target);\n        },\n        color: \"danger\",\n        disabled: !Auth.isAdminOrRoot(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(Button, {\n        size: \"sm\",\n        onClick: function onClick(e) {\n          return _this3.handleClick(e, 'edit', target);\n        },\n        disabled: !Auth.isAdminOrRoot(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e, action, target) {\n      e.preventDefault();\n      if (action === 'edit') this.edittarget(target);\n      if (action === 'delete') this.deletetarget(target);\n    }\n  }, {\n    key: \"edittarget\",\n    value: function edittarget(target) {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n      this.setState({\n        id: target._id,\n        month: target.month,\n        year: target.year,\n        target: target.target\n      });\n    }\n  }, {\n    key: \"deletetarget\",\n    value: function deletetarget(target) {\n      var _this4 = this;\n\n      var URL = '/api/workingHours/' + target._id;\n      axios.delete(URL).then(function (res) {\n        _this4.setState({\n          created: 'ok',\n          message: ''\n        });\n\n        document.getElementById('getWorkingHoursTargetsData').click();\n      }).catch(function (err) {\n        _this4.setState({\n          created: 'error',\n          message: 'Something went wrong',\n          err: err\n        });\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"renderTableHeaders\",\n    value: function renderTableHeaders() {\n      return React.createElement(\"tr\", {\n        className: \"bg-black text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Year\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Month\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Target\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Action\"));\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      var _this5 = this;\n\n      return this.state.workingHoursTargets.map(function (target, index) {\n        return React.createElement(\"tr\", {\n          key: target._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, target.year), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, target.month), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, target.target), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, _this5.addActionButton(target)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          theme = _this$state.theme,\n          isLoading = _this$state.isLoading,\n          message = _this$state.message,\n          modal = _this$state.modal,\n          id = _this$state.id,\n          year = _this$state.year,\n          month = _this$state.month,\n          target = _this$state.target,\n          workingHoursTargets = _this$state.workingHoursTargets;\n\n      if (isLoading) {\n        return React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }));\n      }\n\n      if (workingHoursTargets.lenght === 0) {\n        return React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, \"There are no working Hours targets in database\");\n      }\n\n      if (message) {\n        return React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, \"No data found...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"All Available Working Hours targets\", React.createElement(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        ref: \"getWorkingHoursTargetsData\",\n        id: \"getWorkingHoursTargetsData\",\n        className: \"float-right\",\n        onClick: this.getWorkingHoursTargets,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-sync-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(Table, {\n        responsive: true,\n        borderless: true,\n        striped: true,\n        hover: true,\n        size: \"sm\",\n        className: this.setTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, this.renderTableHeaders()), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, this.renderTableData())), React.createElement(Modal, {\n        isOpen: modal,\n        toggle: true,\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.setCardTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"fas fa-chart-line header-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), \"Edit target\", React.createElement(\"span\", {\n        className: \"far fa-window-restore float-right header-icon text-secondary\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        className: this.setTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(UpdateWorkingHourTargetForm, {\n        theme: theme,\n        id: id,\n        year: year,\n        month: month,\n        target: target,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return WorkingHourTable;\n}(Component);\n\nexport { WorkingHourTable as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Table/WorkingHourTable/WorkingHourTable.jsx"],"names":["React","Component","Table","Button","ButtonGroup","Modal","Card","CardHeader","CardBody","Spinner","axios","UpdateWorkingHourTargetForm","Auth","WorkingHourTable","props","getWorkingHoursTargets","bind","renderTableHeaders","renderTableData","handleClick","closeModal","state","modal","theme","isLoading","id","year","month","target","message","workingHoursTargets","setState","URL","get","then","res","data","catch","err","alert","console","log","JSON","stringify","e","isAdminOrRoot","action","preventDefault","edittarget","deletetarget","prevState","_id","delete","created","document","getElementById","click","map","index","addActionButton","lenght","setTheme","setCardTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Table,\r\n   Button,\r\n   ButtonGroup,\r\n   Modal,\r\n   Card,\r\n   CardHeader,\r\n   CardBody,\r\n   Spinner\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport UpdateWorkingHourTargetForm from '../../Forms/WorkingHoursForms/UpdateWorkingHourTargetForm';\r\nimport Auth from '../../../Modules/Auth/Auth';\r\n\r\nexport default class WorkingHourTable extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.getWorkingHoursTargets = this.getWorkingHoursTargets.bind(this);\r\n      this.renderTableHeaders = this.renderTableHeaders.bind(this);\r\n      this.renderTableData = this.renderTableData.bind(this);\r\n      this.handleClick = this.handleClick.bind(this);\r\n      this.closeModal = this.closeModal.bind(this);\r\n      this.state = {\r\n         modal: false,\r\n         theme: this.props.theme,\r\n         isLoading: true,\r\n         id: '',\r\n         year: '',\r\n         month: '',\r\n         target: '',\r\n         message: '',\r\n         workingHoursTargets: []\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.getWorkingHoursTargets();\r\n   }\r\n\r\n   getWorkingHoursTargets() {\r\n      this.setState({ isLoading: true });\r\n\r\n      const URL = '/api/workingHours/all';\r\n\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               workingHoursTargets: res.data,\r\n               isLoading: false\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Error loading Working Hours Targets table');\r\n            this.setState({\r\n               isLoading: false,\r\n               message: 'Error loading Working Hours Targets'\r\n            });\r\n            console.log(JSON.stringify(err));\r\n         });\r\n   }\r\n\r\n   setTheme() {\r\n      const { theme } = this.state;\r\n      if (theme === 'dark') {\r\n         return 'bg-dark text-white table-dark';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   setCardTheme() {\r\n      const { theme } = this.state;\r\n      if (theme === 'dark') {\r\n         return 'bg-dark text-white';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   addActionButton(target) {\r\n      return (\r\n         <ButtonGroup>\r\n            <Button\r\n               size='sm'\r\n               onClick={e => this.handleClick(e, 'delete', target)}\r\n               color='danger'\r\n               disabled={!Auth.isAdminOrRoot()}\r\n            >\r\n               <span className='fas fa-trash' />\r\n            </Button>\r\n            <Button\r\n               size='sm'\r\n               onClick={e => this.handleClick(e, 'edit', target)}\r\n               disabled={!Auth.isAdminOrRoot()}\r\n            >\r\n               <span className='fas fa-edit' />\r\n            </Button>\r\n         </ButtonGroup>\r\n      );\r\n   }\r\n\r\n   handleClick(e, action, target) {\r\n      e.preventDefault();\r\n      if (action === 'edit') this.edittarget(target);\r\n      if (action === 'delete') this.deletetarget(target);\r\n   }\r\n\r\n   edittarget(target) {\r\n      this.setState(prevState => ({\r\n         modal: !prevState.modal\r\n      }));\r\n      this.setState({\r\n         id: target._id,\r\n         month: target.month,\r\n         year: target.year,\r\n         target: target.target\r\n      });\r\n   }\r\n\r\n   deletetarget(target) {\r\n      const URL = '/api/workingHours/' + target._id;\r\n\r\n      axios\r\n         .delete(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               created: 'ok',\r\n               message: ''\r\n            });\r\n            document.getElementById('getWorkingHoursTargetsData').click();\r\n         })\r\n         .catch(err => {\r\n            this.setState({\r\n               created: 'error',\r\n               message: 'Something went wrong',\r\n               err: err\r\n            });\r\n         });\r\n   }\r\n\r\n   closeModal() {\r\n      this.setState(prevState => ({\r\n         modal: !prevState.modal\r\n      }));\r\n   }\r\n\r\n   renderTableHeaders() {\r\n      return (\r\n         <tr className='bg-black text-white'>\r\n            <th className='text-center'>Year</th>\r\n            <th className='text-center'>Month</th>\r\n            <th className='text-center'>Target</th>\r\n            <th className='text-center'>Action</th>\r\n         </tr>\r\n      );\r\n   }\r\n\r\n   renderTableData() {\r\n      return this.state.workingHoursTargets.map((target, index) => {\r\n         return (\r\n            <tr key={target._id}>\r\n               <td className='text-center'>{target.year}</td>\r\n               <td className='text-center'>{target.month}</td>\r\n               <td className='text-center'>{target.target}</td>\r\n               <td className='text-center'>{this.addActionButton(target)}</td>\r\n            </tr>\r\n         );\r\n      });\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         theme,\r\n         isLoading,\r\n         message,\r\n         modal,\r\n         id,\r\n         year,\r\n         month,\r\n         target,\r\n         workingHoursTargets\r\n      } = this.state;\r\n\r\n      if (isLoading) {\r\n         return (\r\n            <div className='text-center'>\r\n               <Spinner color='primary' />\r\n            </div>\r\n         );\r\n      }\r\n\r\n      if (workingHoursTargets.lenght === 0) {\r\n         return (\r\n            <div className='text-center'>\r\n               There are no working Hours targets in database\r\n            </div>\r\n         );\r\n      }\r\n\r\n      if (message) {\r\n         return <div className='text-center'>No data found...</div>;\r\n      }\r\n\r\n      return (\r\n         <div>\r\n            <p>\r\n               All Available Working Hours targets\r\n               <Button\r\n                  color='primary'\r\n                  size='sm'\r\n                  ref='getWorkingHoursTargetsData'\r\n                  id='getWorkingHoursTargetsData'\r\n                  className='float-right'\r\n                  onClick={this.getWorkingHoursTargets}\r\n               >\r\n                  <span className='fas fa-sync-alt' />\r\n               </Button>\r\n            </p>\r\n            <hr />\r\n            <Table\r\n               responsive\r\n               borderless\r\n               striped\r\n               hover\r\n               size='sm'\r\n               className={this.setTheme()}\r\n            >\r\n               <thead>{this.renderTableHeaders()}</thead>\r\n               <tbody>{this.renderTableData()}</tbody>\r\n            </Table>\r\n            <Modal isOpen={modal} toggle className=''>\r\n               <Card className={this.setCardTheme()}>\r\n                  <CardHeader>\r\n                     <span class='fas fa-chart-line header-icon' />\r\n                     Edit target\r\n                     <span\r\n                        className='far fa-window-restore float-right header-icon text-secondary'\r\n                        onClick={this.closeModal}\r\n                     />\r\n                  </CardHeader>\r\n\r\n                  <CardBody className={this.setTheme()}>\r\n                     <UpdateWorkingHourTargetForm\r\n                        theme={theme}\r\n                        id={id}\r\n                        year={year}\r\n                        month={month}\r\n                        target={target}\r\n                     />\r\n                  </CardBody>\r\n               </Card>\r\n            </Modal>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}