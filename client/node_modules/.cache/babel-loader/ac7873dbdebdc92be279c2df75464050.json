{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/Table.jsx\";\nimport React, { Component } from 'react';\nimport { HTMLTable, Button, NonIdealState, H5, Spinner, Classes } from '@blueprintjs/core';\nimport TableHeaders from './TableHeaders';\n\nvar Table =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table, _Component);\n\n  function Table() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      errorMsg: ''\n    };\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      return React.createElement(TableHeaders, {\n        headers: this.props.headers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.renderTableRows());\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      return this.props.rows;\n    }\n  }, {\n    key: \"renderNonIdealState\",\n    value: function renderNonIdealState(header) {\n      var _this2 = this;\n\n      var information = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      return React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(NonIdealState, {\n        icon: \"issue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(H5, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, header)), React.createElement(\"i\", {\n        className: Classes.TEXT_MUTED,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, information), React.createElement(Button, {\n        icon: \"refresh\",\n        minimal: true,\n        onClick: function onClick() {\n          _this2.props.onRefresh();\n\n          _this2.setState({\n            errorMsg: ''\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      if (this.props.errorMsg) {\n        this.renderNonIdealState('Something went wrong', 'Cannot load table');\n      }\n\n      if (this.props.rows.length === 0) {\n        return this.renderNonIdealState('There are no items to display');\n      }\n\n      return React.createElement(HTMLTable, {\n        fill: \"true\",\n        striped: true,\n        condensed: true,\n        interactive: true,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.renderTableHeader(), this.renderTableBody());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.props.isLoading;\n\n      if (isLoading) {\n        return React.createElement(Spinner, {\n          intent: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      }\n\n      return this.renderContent();\n    }\n  }]);\n\n  return Table;\n}(Component);\n\nexport { Table as default };\nTable.defaultProps = {\n  rows: [],\n  onRefresh: function onRefresh() {\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/Table.jsx"],"names":["React","Component","HTMLTable","Button","NonIdealState","H5","Spinner","Classes","TableHeaders","Table","state","errorMsg","props","headers","renderTableRows","rows","header","information","TEXT_MUTED","onRefresh","setState","renderNonIdealState","length","className","renderTableHeader","renderTableBody","isLoading","renderContent","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACGC,SADH,EAEGC,MAFH,EAGGC,aAHH,EAIGC,EAJH,EAKGC,OALH,EAMGC,OANH,QAOO,mBAPP;AASA,OAAOC,YAAP,MAAyB,gBAAzB;;IAEqBC,K;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,QAAQ,EAAE;AADL,K;;;;;;wCAGY;AACjB,aAAO,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF;;;sCACiB;AACf,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKC,eAAL,EAAR,CAAP;AACF;;;sCACiB;AACf,aAAO,KAAKF,KAAL,CAAWG,IAAlB;AACF;;;wCAEmBC,M,EAA0B;AAAA;;AAAA,UAAlBC,WAAkB,uEAAJ,EAAI;AAC3C,aACG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASD,MAAT,CADH,CADH,EAIG;AAAG,QAAA,SAAS,EAAET,OAAO,CAACW,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCD,WAAnC,CAJH,EAKG,oBAAC,MAAD;AACG,QAAA,IAAI,EAAC,SADR;AAEG,QAAA,OAAO,MAFV;AAGG,QAAA,OAAO,EAAE,mBAAM;AACZ,UAAA,MAAI,CAACL,KAAL,CAAWO,SAAX;;AACA,UAAA,MAAI,CAACC,QAAL,CAAc;AACXT,YAAAA,QAAQ,EAAE;AADC,WAAd;AAGF,SARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CADH,CADH;AAoBF;;;oCAEe;AACb,UAAI,KAAKC,KAAL,CAAWD,QAAf,EAAyB;AACtB,aAAKU,mBAAL,CAAyB,sBAAzB,EAAiD,mBAAjD;AACF;;AAED,UAAI,KAAKT,KAAL,CAAWG,IAAX,CAAgBO,MAAhB,KAA2B,CAA/B,EAAkC;AAC/B,eAAO,KAAKD,mBAAL,CAAyB,+BAAzB,CAAP;AACF;;AAED,aACG,oBAAC,SAAD;AACG,QAAA,IAAI,EAAC,MADR;AAEG,QAAA,OAAO,EAAE,IAFZ;AAGG,QAAA,SAAS,MAHZ;AAIG,QAAA,WAAW,MAJd;AAKG,QAAA,SAAS,EAAE,KAAKT,KAAL,CAAWW,SALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,KAAKC,iBAAL,EAPJ,EAQI,KAAKC,eAAL,EARJ,CADH;AAYF;;;6BAEQ;AAAA,UACEC,SADF,GACgB,KAAKd,KADrB,CACEc,SADF;;AAGN,UAAIA,SAAJ,EAAe;AACZ,eAAO,oBAAC,OAAD;AAAS,UAAA,MAAM,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACF;;AACD,aAAO,KAAKC,aAAL,EAAP;AACF;;;;EAnE+B1B,S;;SAAdQ,K;AAsErBA,KAAK,CAACmB,YAAN,GAAqB;AAClBb,EAAAA,IAAI,EAAE,EADY;AAElBI,EAAAA,SAAS,EAAE,qBAAW;AACnB;AACF;AAJiB,CAArB","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   HTMLTable,\r\n   Button,\r\n   NonIdealState,\r\n   H5,\r\n   Spinner,\r\n   Classes\r\n} from '@blueprintjs/core';\r\n\r\nimport TableHeaders from './TableHeaders';\r\n\r\nexport default class Table extends Component {\r\n   state = {\r\n      errorMsg: ''\r\n   };\r\n   renderTableHeader() {\r\n      return <TableHeaders headers={this.props.headers} />;\r\n   }\r\n   renderTableBody() {\r\n      return <tbody>{this.renderTableRows()}</tbody>;\r\n   }\r\n   renderTableRows() {\r\n      return this.props.rows;\r\n   }\r\n\r\n   renderNonIdealState(header, information = '') {\r\n      return (\r\n         <div className='card-body'>\r\n            <NonIdealState icon='issue'>\r\n               <H5>\r\n                  <strong>{header}</strong>\r\n               </H5>\r\n               <i className={Classes.TEXT_MUTED}>{information}</i>\r\n               <Button\r\n                  icon='refresh'\r\n                  minimal\r\n                  onClick={() => {\r\n                     this.props.onRefresh();\r\n                     this.setState({\r\n                        errorMsg: ''\r\n                     });\r\n                  }}\r\n               ></Button>\r\n            </NonIdealState>\r\n         </div>\r\n      );\r\n   }\r\n\r\n   renderContent() {\r\n      if (this.props.errorMsg) {\r\n         this.renderNonIdealState('Something went wrong', 'Cannot load table');\r\n      }\r\n\r\n      if (this.props.rows.length === 0) {\r\n         return this.renderNonIdealState('There are no items to display');\r\n      }\r\n\r\n      return (\r\n         <HTMLTable\r\n            fill='true'\r\n            striped={true}\r\n            condensed\r\n            interactive\r\n            className={this.props.className}\r\n         >\r\n            {this.renderTableHeader()}\r\n            {this.renderTableBody()}\r\n         </HTMLTable>\r\n      );\r\n   }\r\n\r\n   render() {\r\n      const { isLoading } = this.props;\r\n\r\n      if (isLoading) {\r\n         return <Spinner intent='primary'></Spinner>;\r\n      }\r\n      return this.renderContent();\r\n   }\r\n}\r\n\r\nTable.defaultProps = {\r\n   rows: [],\r\n   onRefresh: function() {\r\n      return;\r\n   }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}