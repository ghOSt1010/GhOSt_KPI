{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/AdminPanel/components/UsersTable.jsx\";\nimport React, { Component } from 'react';\nimport { HTMLTable, Button, NonIdealState, H5, Spinner, Menu, MenuItem, ContextMenu, Dialog, Icon, Card } from '@blueprintjs/core';\nimport Client from '../../../Modules/Client/Client';\nimport UserForm from './UserForm';\nimport CardHeader from '../../../components/Card/CardHeader';\nimport CardBody from '../../../components/Card/CardBody';\n\nvar UsersTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UsersTable, _Component);\n\n  function UsersTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UsersTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UsersTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: false,\n      errorMsg: '',\n      showEditCard: false,\n      userForEdit: {}\n    };\n    return _this;\n  }\n\n  _createClass(UsersTable, [{\n    key: \"isEligable\",\n    value: function isEligable() {\n      var role = Client.User.getRole();\n      if (role === 'ROOT') return false;\n      if (role === 'ADMIN') return false;\n      return true;\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(loading) {\n      this.setState({\n        isLoading: loading\n      });\n    }\n  }, {\n    key: \"resetErrorMsg\",\n    value: function resetErrorMsg() {\n      this.setState({\n        errorMsg: ''\n      });\n    }\n  }, {\n    key: \"deleteUser\",\n    value: function () {\n      var _deleteUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setLoading(true);\n                _context.prev = 1;\n                this.resetErrorMsg();\n                _context.next = 5;\n                return Client.Services.UsersService.deleteUser(id);\n\n              case 5:\n                result = _context.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success('User removed successfully');\n                }\n\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                this.setState({\n                  errorMsg: _context.t0.response.status\n                });\n                Client.Notifications.alert('Error, cannot delete user');\n\n              case 13:\n                _context.prev = 13;\n                this.setLoading(false);\n                return _context.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 9, 13, 16]]);\n      }));\n\n      function deleteUser(_x) {\n        return _deleteUser.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }()\n  }, {\n    key: \"editUser\",\n    value: function editUser(user) {\n      this.setState({\n        showEditCard: true,\n        userForEdit: user\n      });\n    }\n  }, {\n    key: \"closeEditUser\",\n    value: function closeEditUser() {\n      this.setState({\n        showEditCard: false\n      });\n    }\n  }, {\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"User Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Role\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Role\")));\n    }\n  }, {\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.renderTableRows());\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      var _this2 = this;\n\n      var usersData = this.props.usersData;\n      return usersData.map(function (user) {\n        return React.createElement(\"tr\", {\n          key: user._id,\n          onContextMenu: function onContextMenu(e) {\n            return _this2.handeClick(e, user);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, user.username), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, user.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, user.role));\n      });\n    }\n  }, {\n    key: \"handeClick\",\n    value: function handeClick(e, user) {\n      e.preventDefault();\n      ContextMenu.show(this.renderContextMenu(e, user), {\n        left: e.clientX,\n        top: e.clientY\n      });\n    }\n  }, {\n    key: \"renderContextMenu\",\n    value: function renderContextMenu(e, user) {\n      var _this3 = this;\n\n      return React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        icon: \"user\",\n        text: \"\".concat(user.role, \"/\").concat(user.username, \" \"),\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Menu.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        hidden: this.isEligable(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        icon: \"edit\",\n        text: \"Edit User\",\n        onClick: function onClick() {\n          return _this3.editUser(user);\n        },\n        disabled: this.isEligable(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        icon: \"remove\",\n        text: \"Remove user\",\n        onClick: function onClick() {\n          return _this3.deleteUser(user._id);\n        },\n        disabled: this.isEligable(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(MenuItem, {\n        icon: \"properties\",\n        text: \"Show more...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this4 = this;\n\n      if (this.state.errorMsg) {\n        return React.createElement(NonIdealState, {\n          icon: \"issue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(H5, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"Something went wrong\")), React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"Cannot load users table\"), React.createElement(Button, {\n          icon: \"refresh\",\n          minimal: true,\n          onClick: function onClick() {\n            return _this4.getData();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"refresh\",\n        intent: \"\",\n        onClick: function onClick() {\n          return _this4.getData();\n        },\n        small: true,\n        minimal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(HTMLTable, {\n        fill: \"true\",\n        condensed: true,\n        striped: true,\n        interactive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, this.renderTableHeader(), this.renderTableBody()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var userForEdit = this.state.userForEdit;\n\n      if (this.state.isLoading) {\n        return React.createElement(Spinner, {\n          intent: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.renderContent(), React.createElement(Dialog, {\n        isOpen: this.state.showEditCard,\n        onClose: function onClose() {\n          return _this5.closeEditUser();\n        },\n        canEscapeKeyClose: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"user\",\n        className: \"header-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), \"Edit User\", React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"cross\",\n        onClick: function onClick() {\n          return _this5.closeEditUser();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(UserForm, {\n        username: userForEdit.username,\n        email: userForEdit.email,\n        role: userForEdit.role,\n        buttonCaption: \"Update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return UsersTable;\n}(Component);\n\nexport { UsersTable as default };\nUsersTable.defaultProps = {\n  usersData: []\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/AdminPanel/components/UsersTable.jsx"],"names":["React","Component","HTMLTable","Button","NonIdealState","H5","Spinner","Menu","MenuItem","ContextMenu","Dialog","Icon","Card","Client","UserForm","CardHeader","CardBody","UsersTable","state","isLoading","errorMsg","showEditCard","userForEdit","role","User","getRole","loading","setState","id","setLoading","resetErrorMsg","Services","UsersService","deleteUser","result","status","Notifications","success","response","alert","user","renderTableRows","usersData","props","map","_id","e","handeClick","username","email","preventDefault","show","renderContextMenu","left","clientX","top","clientY","isEligable","editUser","getData","renderTableHeader","renderTableBody","renderContent","closeEditUser","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n   HTMLTable,\n   Button,\n   NonIdealState,\n   H5,\n   Spinner,\n   Menu,\n   MenuItem,\n   ContextMenu,\n   Dialog,\n   Icon,\n   Card\n} from '@blueprintjs/core';\nimport Client from '../../../Modules/Client/Client';\nimport UserForm from './UserForm';\nimport CardHeader from '../../../components/Card/CardHeader';\nimport CardBody from '../../../components/Card/CardBody';\n\nexport default class UsersTable extends Component {\n   state = {\n      isLoading: false,\n      errorMsg: '',\n      showEditCard: false,\n      userForEdit: {}\n   };\n\n   isEligable() {\n      let role = Client.User.getRole();\n      if (role === 'ROOT') return false;\n      if (role === 'ADMIN') return false;\n      return true;\n   }\n   setLoading(loading) {\n      this.setState({\n         isLoading: loading\n      });\n   }\n   resetErrorMsg() {\n      this.setState({\n         errorMsg: ''\n      });\n   }\n   async deleteUser(id) {\n      this.setLoading(true);\n      var result;\n      try {\n         this.resetErrorMsg();\n         result = await Client.Services.UsersService.deleteUser(id);\n         if (result.status === 200) {\n            Client.Notifications.success('User removed successfully');\n         }\n      } catch (err) {\n         this.setState({ errorMsg: err.response.status });\n         Client.Notifications.alert('Error, cannot delete user');\n      } finally {\n         this.setLoading(false);\n      }\n   }\n\n   editUser(user) {\n      this.setState({ showEditCard: true, userForEdit: user });\n   }\n\n   closeEditUser() {\n      this.setState({ showEditCard: false });\n   }\n\n   renderTableHeader() {\n      return (\n         <thead>\n            <tr>\n               <th>User Name</th>\n               <th>Role</th>\n               <th>Role</th>\n            </tr>\n         </thead>\n      );\n   }\n   renderTableBody() {\n      return <tbody>{this.renderTableRows()}</tbody>;\n   }\n   renderTableRows() {\n      const { usersData } = this.props;\n      return usersData.map(user => {\n         return (\n            <tr key={user._id} onContextMenu={e => this.handeClick(e, user)}>\n               <td>{user.username}</td>\n               <td>{user.email}</td>\n               <td>{user.role}</td>\n            </tr>\n         );\n      });\n   }\n   handeClick(e, user) {\n      e.preventDefault();\n      ContextMenu.show(this.renderContextMenu(e, user), {\n         left: e.clientX,\n         top: e.clientY\n      });\n   }\n   renderContextMenu(e, user) {\n      return (\n         <Menu>\n            <MenuItem\n               icon='user'\n               text={`${user.role}/${user.username} `}\n               disabled\n            />\n            <Menu.Divider />\n            <div hidden={this.isEligable()}>\n               <MenuItem\n                  icon='edit'\n                  text='Edit User'\n                  onClick={() => this.editUser(user)}\n                  disabled={this.isEligable()}\n               />\n               <MenuItem\n                  icon='remove'\n                  text='Remove user'\n                  onClick={() => this.deleteUser(user._id)}\n                  disabled={this.isEligable()}\n               />\n            </div>\n            <MenuItem icon='properties' text='Show more...' />\n         </Menu>\n      );\n   }\n   renderContent() {\n      if (this.state.errorMsg) {\n         return (\n            <NonIdealState icon='issue'>\n               <H5>\n                  <strong>Something went wrong</strong>\n               </H5>\n               <i>Cannot load users table</i>\n               <Button\n                  icon='refresh'\n                  minimal\n                  onClick={() => this.getData()}\n               ></Button>\n            </NonIdealState>\n         );\n      }\n      return (\n         <div>\n            <div className='text-right'>\n               <Button\n                  icon='refresh'\n                  intent=''\n                  onClick={() => this.getData()}\n                  small\n                  minimal\n               ></Button>\n            </div>\n            <HTMLTable fill='true' condensed striped interactive>\n               {this.renderTableHeader()}\n               {this.renderTableBody()}\n            </HTMLTable>\n         </div>\n      );\n   }\n\n   render() {\n      const { userForEdit } = this.state;\n\n      if (this.state.isLoading) {\n         return <Spinner intent='primary'></Spinner>;\n      }\n      return (\n         <div>\n            {this.renderContent()}\n            <Dialog\n               isOpen={this.state.showEditCard}\n               onClose={() => this.closeEditUser()}\n               canEscapeKeyClose={true}\n            >\n               <Card>\n                  <CardHeader>\n                     <Icon icon='user' className='header-icon' />\n                     Edit User\n                     <div className='float-right'>\n                        <Icon\n                           icon='cross'\n                           onClick={() => this.closeEditUser()}\n                        />\n                     </div>\n                  </CardHeader>\n                  <CardBody className='card-body'>\n                     <UserForm\n                        username={userForEdit.username}\n                        email={userForEdit.email}\n                        role={userForEdit.role}\n                        buttonCaption='Update'\n                     />\n                  </CardBody>\n               </Card>\n            </Dialog>\n         </div>\n      );\n   }\n}\nUsersTable.defaultProps = {\n   usersData: []\n};\n"]},"metadata":{},"sourceType":"module"}