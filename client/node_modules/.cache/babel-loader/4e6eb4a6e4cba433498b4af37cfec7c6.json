{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Dashboards/components/TestComponent2.jsx\";\nimport React, { Component } from 'react';\nimport CardWithModal from '../../../components/Card/CardWithModal';\nimport LineChart from '../../../components/Charts/ApexChart/LineChart';\n\nvar ChartsBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChartsBuilder, _Component);\n\n  function ChartsBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChartsBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChartsBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      kpis: [],\n      labels: [1, 2, 3, 4, 5, 6, 6, 78, 8, 8, 90],\n      series: [{\n        name: 'series-1',\n        data: [30, 40, 45, 50, 49, 60, 70, 91]\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ChartsBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unpackData();\n    }\n  }, {\n    key: \"unpackData\",\n    value: function unpackData() {\n      var k = this.props.data.map(function (d) {\n        return {\n          labels: d.reports.map(function (r) {\n            return r.reportedAt;\n          }),\n          target: d.target,\n          series: [{\n            name: d.name,\n            data: d.reports.map(function (r) {\n              return r.result;\n            })\n          }]\n        };\n      });\n      this.setState({\n        kpis: k\n      });\n    }\n  }, {\n    key: \"renderKPIs\",\n    value: function renderKPIs() {\n      return this.state.kpis.map(function (kpi) {\n        return React.createElement(CardWithModal, {\n          headerText: \"KPI_Name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(LineChart, {\n          labels: kpi.labels,\n          yaxisLabel: \"Results\",\n          xasisLabel: \"Reports\",\n          series: kpi.series,\n          targetValue: kpi.target,\n          targetInfo: \"KPI target\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.renderKPIs());\n    }\n  }]);\n\n  return ChartsBuilder;\n}(Component);\n\nexport { ChartsBuilder as default };\nChartsBuilder.defaultProps = {\n  data: []\n};\n/*\n\n<CardWithModal headerText='KPI_Name'>\n               <LineChart\n                  labels={data.map(d => {\n                     return d.reports.map(r => {\n                        return r.reportedAt;\n                     });\n                  })}\n                  yaxisLabel='Results'\n                  xasisLabel='Reports'\n                  series={data.map(d => {\n                     return d.reports.map(r => {\n                        return r.result;\n                     });\n                  })}\n                  targetValue={data.target}\n                  targetInfo='KPI target'\n               />\n            </CardWithModal>\n            \n            */","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Dashboards/components/TestComponent2.jsx"],"names":["React","Component","CardWithModal","LineChart","ChartsBuilder","state","kpis","labels","series","name","data","unpackData","k","props","map","d","reports","r","reportedAt","target","result","setState","kpi","renderKPIs","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,SAAP,MAAsB,gDAAtB;;IAEqBC,a;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,IAAI,EAAE,EADD;AAELC,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,EAAhC,CAFH;AAILC,MAAAA,MAAM,EAAE,CACL;AACGC,QAAAA,IAAI,EAAE,UADT;AAEGC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B;AAFT,OADK;AAJH,K;;;;;;wCAWY;AACjB,WAAKC,UAAL;AACF;;;iCAEY;AACV,UAAIC,CAAC,GAAG,KAAKC,KAAL,CAAWH,IAAX,CAAgBI,GAAhB,CAAoB,UAAAC,CAAC,EAAI;AAC9B,eAAO;AACJR,UAAAA,MAAM,EAAEQ,CAAC,CAACC,OAAF,CAAUF,GAAV,CAAc,UAAAG,CAAC,EAAI;AACxB,mBAAOA,CAAC,CAACC,UAAT;AACF,WAFO,CADJ;AAIJC,UAAAA,MAAM,EAAEJ,CAAC,CAACI,MAJN;AAKJX,UAAAA,MAAM,EAAE,CACL;AACGC,YAAAA,IAAI,EAAEM,CAAC,CAACN,IADX;AAEGC,YAAAA,IAAI,EAAEK,CAAC,CAACC,OAAF,CAAUF,GAAV,CAAc,UAAAG,CAAC,EAAI;AACtB,qBAAOA,CAAC,CAACG,MAAT;AACF,aAFK;AAFT,WADK;AALJ,SAAP;AAcF,OAfO,CAAR;AAiBA,WAAKC,QAAL,CAAc;AAAEf,QAAAA,IAAI,EAAEM;AAAR,OAAd;AACF;;;iCACY;AACV,aAAO,KAAKP,KAAL,CAAWC,IAAX,CAAgBQ,GAAhB,CAAoB,UAAAQ,GAAG,EAAI;AAC/B,eACG,oBAAC,aAAD;AAAe,UAAA,UAAU,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,oBAAC,SAAD;AACG,UAAA,MAAM,EAAEA,GAAG,CAACf,MADf;AAEG,UAAA,UAAU,EAAC,SAFd;AAGG,UAAA,UAAU,EAAC,SAHd;AAIG,UAAA,MAAM,EAAEe,GAAG,CAACd,MAJf;AAKG,UAAA,WAAW,EAAEc,GAAG,CAACH,MALpB;AAMG,UAAA,UAAU,EAAC,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH,CADH;AAYF,OAbM,CAAP;AAcF;;;6BAEQ;AACN,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKI,UAAL,EAAN,CAAP;AACF;;;;EAvDuCtB,S;;SAAtBG,a;AA0DrBA,aAAa,CAACoB,YAAd,GAA6B;AAC1Bd,EAAAA,IAAI,EAAE;AADoB,CAA7B;AAIA","sourcesContent":["import React, { Component } from 'react';\nimport CardWithModal from '../../../components/Card/CardWithModal';\nimport LineChart from '../../../components/Charts/ApexChart/LineChart';\n\nexport default class ChartsBuilder extends Component {\n   state = {\n      kpis: [],\n      labels: [1, 2, 3, 4, 5, 6, 6, 78, 8, 8, 90],\n\n      series: [\n         {\n            name: 'series-1',\n            data: [30, 40, 45, 50, 49, 60, 70, 91]\n         }\n      ]\n   };\n   componentDidMount() {\n      this.unpackData();\n   }\n\n   unpackData() {\n      var k = this.props.data.map(d => {\n         return {\n            labels: d.reports.map(r => {\n               return r.reportedAt;\n            }),\n            target: d.target,\n            series: [\n               {\n                  name: d.name,\n                  data: d.reports.map(r => {\n                     return r.result;\n                  })\n               }\n            ]\n         };\n      });\n\n      this.setState({ kpis: k });\n   }\n   renderKPIs() {\n      return this.state.kpis.map(kpi => {\n         return (\n            <CardWithModal headerText='KPI_Name'>\n               <LineChart\n                  labels={kpi.labels}\n                  yaxisLabel='Results'\n                  xasisLabel='Reports'\n                  series={kpi.series}\n                  targetValue={kpi.target}\n                  targetInfo='KPI target'\n               />\n            </CardWithModal>\n         );\n      });\n   }\n\n   render() {\n      return <div>{this.renderKPIs()}</div>;\n   }\n}\n\nChartsBuilder.defaultProps = {\n   data: []\n};\n\n/*\n\n<CardWithModal headerText='KPI_Name'>\n               <LineChart\n                  labels={data.map(d => {\n                     return d.reports.map(r => {\n                        return r.reportedAt;\n                     });\n                  })}\n                  yaxisLabel='Results'\n                  xasisLabel='Reports'\n                  series={data.map(d => {\n                     return d.reports.map(r => {\n                        return r.result;\n                     });\n                  })}\n                  targetValue={data.target}\n                  targetInfo='KPI target'\n               />\n            </CardWithModal>\n            \n            */\n"]},"metadata":{},"sourceType":"module"}