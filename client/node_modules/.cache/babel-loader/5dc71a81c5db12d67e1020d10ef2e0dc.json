{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport API from '../../API';\nimport Request from '../../Requests/Request';\nimport ProjectStatus from './DTO/ProjectStatus';\n/**\n * @author Rafal Cymbalsita\n * @class ProjectsService\n * @static\n */\n\nvar ProjectsStatusService =\n/*#__PURE__*/\nfunction () {\n  function ProjectsStatusService() {\n    _classCallCheck(this, ProjectsStatusService);\n  }\n\n  _createClass(ProjectsStatusService, null, [{\n    key: \"createStatusDTO\",\n\n    /**\n     *\n     * @param {String} status\n     * @returns {ProjectStatus} ProjectStatus\n     */\n    value: function createStatusDTO(status) {\n      return new ProjectStatus(status).getStatusDTO();\n    }\n    /**\n     * @public\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"getProjectStatuses\",\n    value: function () {\n      var _getProjectStatuses = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Request.get(API.ROUTES.PROJECTS.PROJECT_STATUSES.GET_PROJECTS_STATUSES).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getProjectStatuses() {\n        return _getProjectStatuses.apply(this, arguments);\n      }\n\n      return getProjectStatuses;\n    }()\n    /**\n     * @public\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"getProjectStatusByName\",\n    value: function () {\n      var _getProjectStatusByName = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(name) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Request.get(API.ROUTES.PROJECTS.PROJECT_STATUSES.GET_PROJECT_STATUS_BY_NAME + name).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getProjectStatusByName(_x) {\n        return _getProjectStatusByName.apply(this, arguments);\n      }\n\n      return getProjectStatusByName;\n    }()\n    /**\n     * @public\n     * @param {ObjectId} Status._id\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"deleteProjectStatusById\",\n    value: function () {\n      var _deleteProjectStatusById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Request.delete(API.ROUTES.PROJECTS.PROJECT_STATUSES.DELETE_PROJECT_STATUS_BY_ID + id).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function deleteProjectStatusById(_x2) {\n        return _deleteProjectStatusById.apply(this, arguments);\n      }\n\n      return deleteProjectStatusById;\n    }()\n    /**\n     * @public\n     * @param {Object} Status\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"updateProjectStatus\",\n    value: function () {\n      var _updateProjectStatus = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(status) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Request.put(API.ROUTES.PROJECTS.PROJECT_STATUSES.UPDATE_PROJECT_STATUS, status).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function updateProjectStatus(_x3) {\n        return _updateProjectStatus.apply(this, arguments);\n      }\n\n      return updateProjectStatus;\n    }()\n    /**\n     * @public\n     * @param {String} Status\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"saveNewProjectStatus\",\n    value: function () {\n      var _saveNewProjectStatus = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(status) {\n        var s;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                s = this.createStatusDTO(status);\n                _context5.next = 3;\n                return Request.post(API.ROUTES.PROJECTS.PROJECT_STATUSES.CREATE_NEW_PROEJCT_STATUS, s).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 3:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function saveNewProjectStatus(_x4) {\n        return _saveNewProjectStatus.apply(this, arguments);\n      }\n\n      return saveNewProjectStatus;\n    }()\n  }]);\n\n  return ProjectsStatusService;\n}();\n\nexport { ProjectsStatusService as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/Modules/Client/API/Services/ProjectsService/ProjectsStatusesService.js"],"names":["API","Request","ProjectStatus","ProjectsStatusService","status","getStatusDTO","get","ROUTES","PROJECTS","PROJECT_STATUSES","GET_PROJECTS_STATUSES","then","result","catch","err","name","GET_PROJECT_STATUS_BY_NAME","id","delete","DELETE_PROJECT_STATUS_BY_ID","put","UPDATE_PROJECT_STATUS","s","createStatusDTO","post","CREATE_NEW_PROEJCT_STATUS"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AAEA;;;;;;IAKqBC,qB;;;;;;;;;;AAClB;;;;;oCAKuBC,M,EAAQ;AAC5B,aAAO,IAAIF,aAAJ,CAAkBE,MAAlB,EAA0BC,YAA1B,EAAP;AACF;AAED;;;;;;;;;;;;;;;;uBAKgBJ,OAAO,CAACK,GAAR,CACVN,GAAG,CAACO,MAAJ,CAAWC,QAAX,CAAoBC,gBAApB,CAAqCC,qBAD3B,EAGTC,IAHS,CAGJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBALS,EAMTC,KANS,CAMH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBARS,C;;;;;;;;;;;;;;;;;;;AAUhB;;;;;;;;;;iDAIoCC,I;;;;;;uBACpBd,OAAO,CAACK,GAAR,CACVN,GAAG,CAACO,MAAJ,CAAWC,QAAX,CAAoBC,gBAApB,CAAqCO,0BAArC,GAAkED,IADxD,EAGTJ,IAHS,CAGJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBALS,EAMTC,KANS,CAMH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBARS,C;;;;;;;;;;;;;;;;;;;AAWhB;;;;;;;;;;;iDAKqCG,E;;;;;;uBACrBhB,OAAO,CAACiB,MAAR,CACVlB,GAAG,CAACO,MAAJ,CAAWC,QAAX,CAAoBC,gBAApB,CAAqCU,2BAArC,GAAmEF,EADzD,EAGTN,IAHS,CAGJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBALS,EAMTC,KANS,CAMH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBARS,C;;;;;;;;;;;;;;;;;;;AAWhB;;;;;;;;;;;iDAKiCV,M;;;;;;uBACjBH,OAAO,CAACmB,GAAR,CACVpB,GAAG,CAACO,MAAJ,CAAWC,QAAX,CAAoBC,gBAApB,CAAqCY,qBAD3B,EAEVjB,MAFU,EAITO,IAJS,CAIJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBANS,EAOTC,KAPS,CAOH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBATS,C;;;;;;;;;;;;;;;;;;;AAYhB;;;;;;;;;;;iDAKkCV,M;;;;;;AAC3BkB,gBAAAA,C,GAAI,KAAKC,eAAL,CAAqBnB,MAArB,C;;uBACKH,OAAO,CAACuB,IAAR,CACVxB,GAAG,CAACO,MAAJ,CAAWC,QAAX,CAAoBC,gBAApB,CAAqCgB,yBAD3B,EAEVH,CAFU,EAITX,IAJS,CAIJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBANS,EAOTC,KAPS,CAOH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBATS,C;;;;;;;;;;;;;;;;;;;;;;;;SAnFEX,qB","sourcesContent":["import API from '../../API';\nimport Request from '../../Requests/Request';\nimport ProjectStatus from './DTO/ProjectStatus';\n\n/**\n * @author Rafal Cymbalsita\n * @class ProjectsService\n * @static\n */\nexport default class ProjectsStatusService {\n   /**\n    *\n    * @param {String} status\n    * @returns {ProjectStatus} ProjectStatus\n    */\n   static createStatusDTO(status) {\n      return new ProjectStatus(status).getStatusDTO();\n   }\n\n   /**\n    * @public\n    * @returns - HTTP Response\n    */\n   static async getProjectStatuses() {\n      return await Request.get(\n         API.ROUTES.PROJECTS.PROJECT_STATUSES.GET_PROJECTS_STATUSES\n      )\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n   /**\n    * @public\n    * @returns - HTTP Response\n    */\n   static async getProjectStatusByName(name) {\n      return await Request.get(\n         API.ROUTES.PROJECTS.PROJECT_STATUSES.GET_PROJECT_STATUS_BY_NAME + name\n      )\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @param {ObjectId} Status._id\n    * @returns - HTTP Response\n    */\n   static async deleteProjectStatusById(id) {\n      return await Request.delete(\n         API.ROUTES.PROJECTS.PROJECT_STATUSES.DELETE_PROJECT_STATUS_BY_ID + id\n      )\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @param {Object} Status\n    * @returns - HTTP Response\n    */\n   static async updateProjectStatus(status) {\n      return await Request.put(\n         API.ROUTES.PROJECTS.PROJECT_STATUSES.UPDATE_PROJECT_STATUS,\n         status\n      )\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @param {String} Status\n    * @returns - HTTP Response\n    */\n   static async saveNewProjectStatus(status) {\n      let s = this.createStatusDTO(status);\n      return await Request.post(\n         API.ROUTES.PROJECTS.PROJECT_STATUSES.CREATE_NEW_PROEJCT_STATUS,\n         s\n      )\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n}\n"]},"metadata":{},"sourceType":"module"}