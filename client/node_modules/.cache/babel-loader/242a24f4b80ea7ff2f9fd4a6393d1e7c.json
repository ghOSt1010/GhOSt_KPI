{"ast":null,"code":"import axios from 'axios';\nimport Auth from '../Auth/Auth';\n/**\n * @returns {Object} axios custom instance with Authorization JWT token header\n * @description Requests are modified with Authorization header (JWT)\n */\n\nvar Request = axios.create({\n  headers: {\n    Authorization: 'Token ' + Auth.getToken('Request')\n  }\n});\nRequest.interceptors.request.use(function (response) {\n  return response;\n}, function (error) {\n  var originalRequest = error.config;\n\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    Auth.getToken('Request');\n    axios.defaults.headers.common['Authorization'] = 'Token ' + Auth.getToken('Request interceptor');\n    return axios(originalRequest);\n  }\n});\nexport default Request; //JSON.parse(localStorage.getItem('user')).token\n//axios.defaults.headers.common['Authorization'] = 'Token ' + Auth.getToken();","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/Modules/Client/API/Requests/Request.js"],"names":["axios","Auth","Request","create","headers","Authorization","getToken","interceptors","request","use","response","error","originalRequest","config","status","_retry","defaults","common"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA;;;;;AAIA,IAAIC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAE;AACNC,IAAAA,aAAa,EAAE,WAAWJ,IAAI,CAACK,QAAL,CAAc,SAAd;AADpB;AADe,CAAb,CAAd;AAKAJ,OAAO,CAACK,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACG,UAAAC,QAAQ,EAAI;AACT,SAAOA,QAAP;AACF,CAHJ,EAIG,UAAAC,KAAK,EAAI;AACN,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAA9B;;AACA,MAAIF,KAAK,CAACD,QAAN,CAAeI,MAAf,KAA0B,GAA1B,IAAiC,CAACF,eAAe,CAACG,MAAtD,EAA8D;AAC3DH,IAAAA,eAAe,CAACG,MAAhB,GAAyB,IAAzB;AACAd,IAAAA,IAAI,CAACK,QAAL,CAAc,SAAd;AAEAN,IAAAA,KAAK,CAACgB,QAAN,CAAeZ,OAAf,CAAuBa,MAAvB,CAA8B,eAA9B,IACG,WAAWhB,IAAI,CAACK,QAAL,CAAc,qBAAd,CADd;AAGA,WAAON,KAAK,CAACY,eAAD,CAAZ;AACF;AACH,CAfJ;AAkBA,eAAeV,OAAf,C,CACA;AACA","sourcesContent":["import axios from 'axios';\nimport Auth from '../Auth/Auth';\n\n/**\n * @returns {Object} axios custom instance with Authorization JWT token header\n * @description Requests are modified with Authorization header (JWT)\n */\nvar Request = axios.create({\n   headers: {\n      Authorization: 'Token ' + Auth.getToken('Request')\n   }\n});\nRequest.interceptors.request.use(\n   response => {\n      return response;\n   },\n   error => {\n      const originalRequest = error.config;\n      if (error.response.status === 401 && !originalRequest._retry) {\n         originalRequest._retry = true;\n         Auth.getToken('Request');\n\n         axios.defaults.headers.common['Authorization'] =\n            'Token ' + Auth.getToken('Request interceptor');\n\n         return axios(originalRequest);\n      }\n   }\n);\n\nexport default Request;\n//JSON.parse(localStorage.getItem('user')).token\n//axios.defaults.headers.common['Authorization'] = 'Token ' + Auth.getToken();\n"]},"metadata":{},"sourceType":"module"}