{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Buttons/Select/Select.jsx\";\nimport React, { Component } from 'react';\nimport { Input } from 'reactstrap';\nimport './Select.css';\n\nvar Select =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Select, _Component);\n\n  function Select() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Select);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Select)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      options: _this.props.options\n    };\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: \"setTheme\",\n    value: function setTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'my-select-dark';\n      }\n\n      if (theme === 'light') {\n        return 'bg-light';\n      }\n    }\n  }, {\n    key: \"renderOptions\",\n    value: function renderOptions() {\n      return this.state.options.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, option.name);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Input, {\n        className: this.setTheme(),\n        type: \"select\",\n        size: \"sm\",\n        name: \"select\",\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.renderOptions());\n    }\n  }]);\n\n  return Select;\n}(Component);\n\nexport { Select as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Buttons/Select/Select.jsx"],"names":["React","Component","Input","Select","state","theme","props","options","map","option","key","_id","name","setTheme","id","renderOptions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,cAAP;;IAEqBC,M;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD,KADb;AAELE,MAAAA,OAAO,EAAE,MAAKD,KAAL,CAAWC;AAFf,K;;;;;;+BAKG;AAAA,UACAF,KADA,GACU,KAAKC,KADf,CACAD,KADA;;AAER,UAAIA,KAAK,KAAK,MAAd,EAAsB;AACnB,eAAO,gBAAP;AACF;;AACD,UAAIA,KAAK,KAAK,OAAd,EAAuB;AACpB,eAAO,UAAP;AACF;AACH;;;oCAEe;AACb,aAAO,KAAKD,KAAL,CAAWG,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,MAAD,EAASC,GAAT,EAAiB;AAC5C,eACG;AAAQ,UAAA,GAAG,EAAEA,GAAb;AAAkB,UAAA,KAAK,EAAED,MAAM,CAACE,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIF,MAAM,CAACG,IADX,CADH;AAKF,OANM,CAAP;AAOF;;;6BAEQ;AACN,aACG,oBAAC,KAAD;AACG,QAAA,SAAS,EAAE,KAAKC,QAAL,EADd;AAEG,QAAA,IAAI,EAAC,QAFR;AAGG,QAAA,IAAI,EAAC,IAHR;AAIG,QAAA,IAAI,EAAC,QAJR;AAKG,QAAA,EAAE,EAAE,KAAKP,KAAL,CAAWQ,EALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,KAAKC,aAAL,EAPJ,CADH;AAWF;;;;EAtCgCd,S;;SAAfE,M","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input } from 'reactstrap';\r\nimport './Select.css';\r\n\r\nexport default class Select extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      options: this.props.options\r\n   };\r\n\r\n   setTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'my-select-dark';\r\n      }\r\n      if (theme === 'light') {\r\n         return 'bg-light';\r\n      }\r\n   }\r\n\r\n   renderOptions() {\r\n      return this.state.options.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option._id}>\r\n               {option.name}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Input\r\n            className={this.setTheme()}\r\n            type='select'\r\n            size='sm'\r\n            name='select'\r\n            id={this.props.id}\r\n         >\r\n            {this.renderOptions()}\r\n         </Input>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}