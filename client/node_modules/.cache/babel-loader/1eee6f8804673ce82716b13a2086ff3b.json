{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/ScoreCard/ScoreCard.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../QuickView/QuickView.css';\nimport { Card, CardHeader, CardFooter, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { Col } from 'reactstrap';\n\nvar ScoreCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScoreCard, _Component);\n\n  function ScoreCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScoreCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScoreCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: 'N/A',\n      icon: '',\n      proc: 0,\n      number: 0,\n      bgColor: 'bg-c-white',\n      txtColor: 'text-gray'\n    };\n\n    _this.getTrendIcon = function (value) {\n      if (value < 0) return \"fas fa-arrow-alt-circle-down\";else if (value > 0) return \"fas fa-arrow-alt-circle-up\";else return \"fas fa-minus-circle\";\n    };\n\n    _this.getBgColor = function (trend) {\n      _this.state.txtColor = \"text-white\";\n      if (trend < 0) return \"bg-o-danger\";else if (trend > 0) return \"bg-o-success \";else {\n        _this.state.txtColor = \"text-gray\";\n        return 'bg-c-white';\n      }\n    };\n\n    _this.getIcon = function (iconName) {\n      if (!iconName) return 'fas fa-bug';else return iconName;\n    };\n\n    return _this;\n  }\n\n  _createClass(ScoreCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          icon = _this$props.icon,\n          procValue = _this$props.procValue,\n          numberValue = _this$props.numberValue,\n          trend = _this$props.trend;\n      return React.createElement(Col, {\n        xl: \"2\",\n        lg: \"3\",\n        md: \"4\",\n        sm: \"6\",\n        xs: \"12\",\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card \".concat(this.getBgColor(trend), \" \").concat(this.state.txtColor),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, title), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.getIcon(icon),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"float-right text-big\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, numberValue)), React.createElement(\"div\", {\n        className: \"float-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"\".concat(this.getTrendIcon(trend), \" float-right\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        class: \"float-right text-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, procValue, \"%\")))));\n    }\n  }]);\n\n  return ScoreCard;\n}(Component);\n\nexport { ScoreCard as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/ScoreCard/ScoreCard.jsx"],"names":["React","Component","Card","CardHeader","CardFooter","CardBody","CardTitle","CardText","Col","ScoreCard","state","name","icon","proc","number","bgColor","txtColor","getTrendIcon","value","getBgColor","trend","getIcon","iconName","props","title","procValue","numberValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,OAAO,+BAAP;AAEA,SACGC,IADH,EACSC,UADT,EACqBC,UADrB,EACiCC,QADjC,EAEGC,SAFH,EAEcC,QAFd,QAGO,YAHP;AAIA,SAASC,GAAT,QAAoB,YAApB;;IAEqBC,S;;;;;;;;;;;;;;;;;UAElBC,K,GAAQ;AACLC,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,IAAI,EAAE,EAFD;AAGLC,MAAAA,IAAI,EAAE,CAHD;AAILC,MAAAA,MAAM,EAAE,CAJH;AAKLC,MAAAA,OAAO,EAAE,YALJ;AAMLC,MAAAA,QAAQ,EAAE;AANL,K;;UASRC,Y,GAAe,UAACC,KAAD,EAAW;AACvB,UAAIA,KAAK,GAAG,CAAZ,EAAe,OAAO,8BAAP,CAAf,KACK,IAAIA,KAAK,GAAG,CAAZ,EAAe,OAAO,4BAAP,CAAf,KACA,OAAO,qBAAP;AACP,K;;UAEDC,U,GAAa,UAACC,KAAD,EAAW;AACrB,YAAKV,KAAL,CAAWM,QAAX,GAAsB,YAAtB;AACA,UAAII,KAAK,GAAG,CAAZ,EAAe,OAAO,aAAP,CAAf,KACK,IAAIA,KAAK,GAAG,CAAZ,EAAe,OAAO,eAAP,CAAf,KACA;AACF,cAAKV,KAAL,CAAWM,QAAX,GAAsB,WAAtB;AACA,eAAO,YAAP;AACF;AACH,K;;UAEDK,O,GAAU,UAACC,QAAD,EAAc;AACrB,UAAI,CAACA,QAAL,EAAe,OAAO,YAAP,CAAf,KACK,OAAOA,QAAP;AACP,K;;;;;;;6BAEQ;AAAA,wBAEiD,KAAKC,KAFtD;AAAA,UAEEC,KAFF,eAEEA,KAFF;AAAA,UAESZ,IAFT,eAESA,IAFT;AAAA,UAEea,SAFf,eAEeA,SAFf;AAAA,UAE0BC,WAF1B,eAE0BA,WAF1B;AAAA,UAEuCN,KAFvC,eAEuCA,KAFvC;AAIN,aACG,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAmB,QAAA,EAAE,EAAC,GAAtB;AAA0B,QAAA,EAAE,EAAC,GAA7B;AAAiC,QAAA,EAAE,EAAC,IAApC;AAAyC,QAAA,SAAS,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,SAAS,iBAAU,KAAKD,UAAL,CAAgBC,KAAhB,CAAV,cAAoC,KAAKV,KAAL,CAAWM,QAA/C,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIQ,KADJ,CADH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAM,QAAA,SAAS,EAAE,KAAKH,OAAL,CAAaT,IAAb,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAEG;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwCc,WAAxC,CAFH,CAJH,EASG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAM,QAAA,SAAS,YAAK,KAAKT,YAAL,CAAkBG,KAAlB,CAAL,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAEG;AAAG,QAAA,KAAK,EAAC,qBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCK,SAAhC,MAFH,CATH,CADH,CADH,CADH;AAsBF;;;;EA1DmCxB,S;;SAAlBQ,S","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../../QuickView/QuickView.css'\n\nimport {\n   Card, CardHeader, CardFooter, CardBody,\n   CardTitle, CardText\n} from 'reactstrap';\nimport { Col } from 'reactstrap';\n\nexport default class ScoreCard extends Component {\n\n   state = {\n      name: 'N/A',\n      icon: '',\n      proc: 0,\n      number: 0,\n      bgColor: 'bg-c-white',\n      txtColor: 'text-gray'\n   }\n\n   getTrendIcon = (value) => {\n      if (value < 0) return \"fas fa-arrow-alt-circle-down\";\n      else if (value > 0) return \"fas fa-arrow-alt-circle-up\";\n      else return \"fas fa-minus-circle\";\n   }\n\n   getBgColor = (trend) => {\n      this.state.txtColor = \"text-white\";\n      if (trend < 0) return \"bg-o-danger\";\n      else if (trend > 0) return \"bg-o-success \";\n      else {\n         this.state.txtColor = \"text-gray\";\n         return 'bg-c-white';\n      }\n   }\n\n   getIcon = (iconName) => {\n      if (!iconName) return 'fas fa-bug';\n      else return iconName;\n   }\n\n   render() {\n\n      const { title, icon, procValue, numberValue, trend } = this.props;\n\n      return (\n         <Col xl=\"2\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"12\" className=\"mt-4\">\n            <Card className={`card ${this.getBgColor(trend)} ${this.state.txtColor}`}>\n               <CardBody>\n                  <CardTitle>\n                     {title}\n                  </CardTitle>\n                  <h1>\n                     <span className={this.getIcon(icon)}></span>\n                     <span className=\"float-right text-big\">{numberValue}</span>\n\n                  </h1>\n                  <div className=\"float-left\">\n                     <span className={`${this.getTrendIcon(trend)} float-right`}></span>\n                     <b class=\"float-right text-sm\">{procValue}%</b>\n                  </div>\n\n               </CardBody>\n            </Card>\n         </Col>\n\n      )\n   }\n}\n"]},"metadata":{},"sourceType":"module"}