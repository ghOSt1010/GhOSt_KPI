{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/KPIs/KPIs.jsx\";\nimport React, { Component } from 'react';\nimport { Tabs, Tab, H2 } from '@blueprintjs/core';\nimport KPIsTable from '../../components/Tables/KPIsTable';\nimport KPIDialog from '../../components/Dialogs/KPIDialog';\nimport Client from '../../Modules/Client/Client';\nimport TableControllers from '../../components/Tables/TableControllers';\nimport BeforeDeleteAlert from '../../components/Alerts/BeforeDeleteAlert';\n\nvar Teams =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Teams, _Component);\n\n  function Teams() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Teams);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Teams)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTabID: 'Teams',\n      selectedTabId: 'Teams',\n      isLoading: true,\n      data: [],\n      isNoData: true,\n      openAlert: true,\n      errorMessage: '',\n      isAddDialogOpen: false,\n      isEditDialogOpen: false,\n      isDeleteAlertOpen: false,\n      canEdit: !false,\n      canDelete: !false,\n      name: '',\n      time_from: new Date(),\n      time_to: _this.setDefaultToDate(new Date()),\n      target: 0,\n      project: '',\n      manager: '',\n      selected: {}\n    };\n\n    _this.getSelected = function (sel, isSelected) {\n      _this.setState({\n        selected: sel,\n        canEdit: isSelected,\n        canDelete: isSelected\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, name, time_from, time_to, target, project, manager, kpi, result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, name = _this$state.name, time_from = _this$state.time_from, time_to = _this$state.time_to, target = _this$state.target, project = _this$state.project, manager = _this$state.manager;\n                _context.next = 4;\n                return Client.Services.KPIsService.createKPIDTO(name, time_from, time_to, target, project, manager);\n\n              case 4:\n                kpi = _context.sent;\n                console.log(kpi);\n                _context.prev = 6;\n                _context.next = 9;\n                return Client.Services.KPIsService.saveKPI(kpi);\n\n              case 9:\n                result = _context.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success(\"KPI \".concat(name, \" successfully saved\"));\n\n                  _this.getData();\n                }\n\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](6);\n\n                _this.handleError(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleUpdate =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var _this$state2, name, time_from, time_to, target, project, manager, selected, kpi, result;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _this$state2 = _this.state, name = _this$state2.name, time_from = _this$state2.time_from, time_to = _this$state2.time_to, target = _this$state2.target, project = _this$state2.project, manager = _this$state2.manager, selected = _this$state2.selected;\n                _context2.prev = 2;\n                _context2.next = 5;\n                return Client.Services.KPIsService.createKPIDTO(name, time_from, time_to, target, project, manager);\n\n              case 5:\n                kpi = _context2.sent;\n                kpi.kpi._id = selected._id;\n                _context2.next = 9;\n                return Client.Services.KPIsService.updateKPI(kpi);\n\n              case 9:\n                result = _context2.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success(\"KPI \".concat(name, \" successfully saved\"));\n\n                  _this.getData();\n                }\n\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](2);\n\n                _this.handleError(_context2.t0);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 13]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.id] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.handleTargetValueChange = function (number) {\n      _this.setState({\n        target: number\n      });\n    };\n\n    _this.handleDateFromChange = function (newFromDate) {\n      _this.setState({\n        time_from: newFromDate\n      });\n    };\n\n    _this.handleDateToChange = function (newToDate) {\n      _this.setState({\n        time_to: newToDate\n      });\n    };\n\n    _this.openEditDialog =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var selected, result, team;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                e.preventDefault();\n                selected = _this.state.selected;\n                _context3.prev = 2;\n                _context3.next = 5;\n                return Client.Services.TeamsService.getTeamById(selected._id);\n\n              case 5:\n                result = _context3.sent;\n\n                if (result.status === 200) {\n                  team = result.data;\n                  console.log(team);\n\n                  _this.setState({\n                    isEditDialogOpen: true,\n                    name: team.name,\n                    manager: team.manager._id\n                  });\n                }\n\n                _context3.next = 13;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](2);\n                console.log(_context3.t0);\n\n                _this.setState({\n                  isEditDialogOpen: true,\n                  name: selected.name,\n                  manager: selected.manager._id\n                });\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 9]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleTabChange = function (activeTabID) {\n      _this.setState({\n        activeTabID: activeTabID,\n        selectedTabId: activeTabID\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Teams, [{\n    key: \"setDefaultToDate\",\n    value: function setDefaultToDate(d) {\n      var today = new Date();\n      var finalDate = new Date(today);\n      var currentDate = today.getDate();\n      finalDate.setDate(currentDate + 30);\n      return finalDate;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.setLoading(true);\n                _context4.prev = 1;\n                _context4.next = 4;\n                return Client.Services.KPIsService.getKPIs();\n\n              case 4:\n                result = _context4.sent;\n                this.setState({\n                  data: result.data,\n                  isNoData: false\n                });\n\n                if (result.data.length === 0) {\n                  this.setState({\n                    isNoData: true\n                  });\n                }\n\n                _context4.next = 12;\n                break;\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](1);\n                this.handleError(_context4.t0);\n\n              case 12:\n                _context4.prev = 12;\n                this.setLoading(false);\n                return _context4.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 9, 12, 15]]);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"deleteItem\",\n    value: function () {\n      var _deleteItem = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                this.resetErrorMsg();\n                _context5.next = 4;\n                return Client.Services.KPIsService.deleteKPIById(id);\n\n              case 4:\n                result = _context5.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success('KPI removed successfully');\n                }\n\n                _context5.next = 11;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](0);\n                this.handleError(_context5.t0);\n\n              case 11:\n                _context5.prev = 11;\n                this.getData();\n                this.closeDeleteAlert();\n                return _context5.finish(11);\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 8, 11, 15]]);\n      }));\n\n      function deleteItem(_x4) {\n        return _deleteItem.apply(this, arguments);\n      }\n\n      return deleteItem;\n    }()\n  }, {\n    key: \"handleError\",\n    value: function handleError(err) {\n      var errorMsg = 'Unknown Error';\n\n      if (err.response.status === 409) {\n        errorMsg = \"Error: \".concat(err.response.data.message);\n        Client.Notifications.alert(errorMsg);\n      }\n\n      if (err.response.status !== 409) {\n        errorMsg = \"Error:  while saving: item\";\n        Client.Notifications.error(errorMsg);\n      }\n\n      this.openAlert(errorMsg);\n    }\n  }, {\n    key: \"openAlert\",\n    value: function openAlert(msg) {\n      this.setState({\n        isAlertOpen: true,\n        errorMessage: msg\n      });\n    }\n  }, {\n    key: \"closeAlert\",\n    value: function closeAlert() {\n      this.setState({\n        isAlertOpen: false,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"resetErrorMsg\",\n    value: function resetErrorMsg() {\n      this.setState({\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"openDialog\",\n    value: function openDialog() {\n      this.setState({\n        isAddDialogOpen: true\n      });\n    }\n  }, {\n    key: \"closeDialog\",\n    value: function closeDialog() {\n      this.setState({\n        isAddDialogOpen: false\n      });\n    }\n  }, {\n    key: \"closeEditDialog\",\n    value: function closeEditDialog() {\n      this.setState({\n        isEditDialogOpen: false\n      });\n    }\n  }, {\n    key: \"openDeleteAlert\",\n    value: function openDeleteAlert() {\n      this.setState({\n        isDeleteAlertOpen: true\n      });\n    }\n  }, {\n    key: \"closeDeleteAlert\",\n    value: function closeDeleteAlert() {\n      this.setState({\n        isDeleteAlertOpen: false\n      });\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(loading) {\n      this.setState({\n        isLoading: loading\n      });\n    }\n  }, {\n    key: \"clearForm\",\n    value: function clearForm() {\n      this.setState({\n        name: '',\n        manager: '',\n        isAlertOpen: false,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"renderControlls\",\n    value: function renderControlls() {\n      var _this2 = this;\n\n      if (this.state.selectedTabId === 'Teams') {\n        return React.createElement(TableControllers, {\n          onEdit: this.openEditDialog,\n          canEdit: this.state.canEdit,\n          onAdd: function onAdd() {\n            return _this2.openDialog();\n          },\n          onDelete: function onDelete() {\n            return _this2.openDeleteAlert();\n          },\n          canDelete: this.state.canDelete,\n          onRefresh: function onRefresh() {\n            return _this2.getData();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          data = _this$state3.data,\n          isLoading = _this$state3.isLoading,\n          name = _this$state3.name,\n          time_from = _this$state3.time_from,\n          time_to = _this$state3.time_to,\n          target = _this$state3.target,\n          project = _this$state3.project,\n          manager = _this$state3.manager,\n          isAlertOpen = _this$state3.isAlertOpen,\n          selected = _this$state3.selected;\n      return React.createElement(\"div\", {\n        id: \"TeamsPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(H2, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Teams Panel\")), React.createElement(Tabs, {\n        onChange: this.handleTabChange,\n        selectedTabId: this.state.selectedTabId,\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        id: \"Teams\",\n        title: \"Teams\",\n        panel: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, React.createElement(KPIsTable, {\n          isEmpty: this.state.isNoData,\n          data: data,\n          onRefresh: function onRefresh() {\n            return _this3.getData();\n          },\n          isLoading: isLoading,\n          onSelection: this.getSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }), React.createElement(KPIDialog, {\n          isOpen: this.state.isEditDialogOpen,\n          toOpen: function toOpen() {\n            return _this3.openEditDialog();\n          },\n          toClose: function toClose() {\n            return _this3.closeEditDialog();\n          },\n          name: name,\n          time_from: time_from,\n          time_to: time_to,\n          target: target,\n          project: project,\n          manager: manager,\n          onChange: this.onChange,\n          handleDateFromChange: this.handleDateFromChange,\n          handleDateToChange: this.handleDateToChange,\n          onTargetValueChange: this.handleTargetValueChange,\n          handleSubmit: this.handleUpdate,\n          buttonCaption: \"Update\",\n          onClear: function onClear() {\n            return _this3.clearForm();\n          },\n          isAlertOpen: isAlertOpen,\n          closeAlert: function closeAlert() {\n            return _this3.closeAlert();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }), React.createElement(KPIDialog, {\n          isOpen: this.state.isAddDialogOpen,\n          toOpen: function toOpen() {\n            return _this3.openDialog();\n          },\n          toClose: function toClose() {\n            return _this3.closeDialog();\n          },\n          name: name,\n          time_from: time_from,\n          time_to: time_to,\n          target: target,\n          project: project,\n          manager: manager,\n          onChange: this.onChange,\n          handleDateFromChange: this.handleDateFromChange,\n          handleDateToChange: this.handleDateToChange,\n          onTargetValueChange: this.handleTargetValueChange,\n          handleSubmit: this.handleSubmit,\n          buttonCaption: \"Add\",\n          onClear: function onClear() {\n            return _this3.clearForm();\n          },\n          isAlertOpen: isAlertOpen,\n          closeAlert: function closeAlert() {\n            return _this3.closeAlert();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }), React.createElement(BeforeDeleteAlert, {\n          isOpen: this.state.isDeleteAlertOpen,\n          onConfirm: function onConfirm() {\n            return _this3.deleteItem(selected._id);\n          },\n          onCancel: function onCancel() {\n            return _this3.closeDeleteAlert();\n          },\n          portalID: \"TeamsPanel\",\n          info: \"Team: \".concat(selected.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(Tabs.Expander, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), this.renderControlls()));\n    }\n  }]);\n\n  return Teams;\n}(Component);\n\nexport { Teams as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/KPIs/KPIs.jsx"],"names":["React","Component","Tabs","Tab","H2","KPIsTable","KPIDialog","Client","TableControllers","BeforeDeleteAlert","Teams","state","activeTabID","selectedTabId","isLoading","data","isNoData","openAlert","errorMessage","isAddDialogOpen","isEditDialogOpen","isDeleteAlertOpen","canEdit","canDelete","name","time_from","Date","time_to","setDefaultToDate","target","project","manager","selected","getSelected","sel","isSelected","setState","handleSubmit","e","preventDefault","Services","KPIsService","createKPIDTO","kpi","console","log","saveKPI","result","status","Notifications","success","getData","handleError","handleUpdate","_id","updateKPI","onChange","id","value","handleTargetValueChange","number","handleDateFromChange","newFromDate","handleDateToChange","newToDate","openEditDialog","TeamsService","getTeamById","team","handleTabChange","d","today","finalDate","currentDate","getDate","setDate","setLoading","getKPIs","length","resetErrorMsg","deleteKPIById","closeDeleteAlert","err","errorMsg","response","message","alert","error","msg","isAlertOpen","loading","openDialog","openDeleteAlert","closeEditDialog","clearForm","closeAlert","closeDialog","deleteItem","renderControlls"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Tabs, Tab, H2 } from '@blueprintjs/core';\nimport KPIsTable from '../../components/Tables/KPIsTable';\nimport KPIDialog from '../../components/Dialogs/KPIDialog';\nimport Client from '../../Modules/Client/Client';\nimport TableControllers from '../../components/Tables/TableControllers';\nimport BeforeDeleteAlert from '../../components/Alerts/BeforeDeleteAlert';\n\nexport default class Teams extends Component {\n   state = {\n      activeTabID: 'Teams',\n      selectedTabId: 'Teams',\n      isLoading: true,\n      data: [],\n      isNoData: true,\n      openAlert: true,\n      errorMessage: '',\n      isAddDialogOpen: false,\n      isEditDialogOpen: false,\n      isDeleteAlertOpen: false,\n      canEdit: !false,\n      canDelete: !false,\n      name: '',\n      time_from: new Date(),\n      time_to: this.setDefaultToDate(new Date()),\n      target: 0,\n      project: '',\n      manager: '',\n      selected: {}\n   };\n\n   setDefaultToDate(d) {\n      const today = new Date();\n      const finalDate = new Date(today);\n      const currentDate = today.getDate();\n      finalDate.setDate(currentDate + 30);\n      return finalDate;\n   }\n\n   getSelected = (sel, isSelected) => {\n      this.setState({\n         selected: sel,\n         canEdit: isSelected,\n         canDelete: isSelected\n      });\n   };\n\n   componentDidMount() {\n      this.getData();\n   }\n\n   async getData() {\n      this.setLoading(true);\n      var result;\n      try {\n         //this.resetErrorMsg();\n         result = await Client.Services.KPIsService.getKPIs();\n         this.setState({\n            data: result.data,\n            isNoData: false\n         });\n         if (result.data.length === 0) {\n            this.setState({ isNoData: true });\n         }\n      } catch (err) {\n         this.handleError(err);\n      } finally {\n         this.setLoading(false);\n      }\n   }\n\n   async deleteItem(id) {\n      var result;\n      try {\n         this.resetErrorMsg();\n         result = await Client.Services.KPIsService.deleteKPIById(id);\n         if (result.status === 200) {\n            Client.Notifications.success('KPI removed successfully');\n         }\n      } catch (err) {\n         this.handleError(err);\n      } finally {\n         this.getData();\n         this.closeDeleteAlert();\n      }\n   }\n\n   handleSubmit = async e => {\n      e.preventDefault();\n      const { name, time_from, time_to, target, project, manager } = this.state;\n      let kpi = await Client.Services.KPIsService.createKPIDTO(\n         name,\n         time_from,\n         time_to,\n         target,\n         project,\n         manager\n      );\n      console.log(kpi);\n      try {\n         let result = await Client.Services.KPIsService.saveKPI(kpi);\n         if (result.status === 200) {\n            Client.Notifications.success(`KPI ${name} successfully saved`);\n            this.getData();\n         }\n      } catch (err) {\n         this.handleError(err);\n      }\n   };\n   handleUpdate = async e => {\n      e.preventDefault();\n      const {\n         name,\n         time_from,\n         time_to,\n         target,\n         project,\n         manager,\n         selected\n      } = this.state;\n\n      try {\n         let kpi = await Client.Services.KPIsService.createKPIDTO(\n            name,\n            time_from,\n            time_to,\n            target,\n            project,\n            manager\n         );\n         kpi.kpi._id = selected._id;\n         let result = await Client.Services.KPIsService.updateKPI(kpi);\n         if (result.status === 200) {\n            Client.Notifications.success(`KPI ${name} successfully saved`);\n            this.getData();\n         }\n      } catch (err) {\n         this.handleError(err);\n      }\n   };\n\n   handleError(err) {\n      var errorMsg = 'Unknown Error';\n      if (err.response.status === 409) {\n         errorMsg = `Error: ${err.response.data.message}`;\n         Client.Notifications.alert(errorMsg);\n      }\n      if (err.response.status !== 409) {\n         errorMsg = `Error:  while saving: item`;\n         Client.Notifications.error(errorMsg);\n      }\n      this.openAlert(errorMsg);\n   }\n\n   openAlert(msg) {\n      this.setState({ isAlertOpen: true, errorMessage: msg });\n   }\n   closeAlert() {\n      this.setState({ isAlertOpen: false, errorMessage: '' });\n   }\n\n   resetErrorMsg() {\n      this.setState({ errorMessage: '' });\n   }\n\n   onChange = e => {\n      const state = this.state;\n      state[e.target.id] = e.target.value;\n      this.setState(state);\n   };\n\n   handleTargetValueChange = number => {\n      this.setState({ target: number });\n   };\n\n   handleDateFromChange = newFromDate => {\n      this.setState({ time_from: newFromDate });\n   };\n   handleDateToChange = newToDate => {\n      this.setState({ time_to: newToDate });\n   };\n\n   openDialog() {\n      this.setState({\n         isAddDialogOpen: true\n      });\n   }\n   closeDialog() {\n      this.setState({\n         isAddDialogOpen: false\n      });\n   }\n\n   openEditDialog = async e => {\n      e.preventDefault();\n      const { selected } = this.state;\n      try {\n         let result = await Client.Services.TeamsService.getTeamById(\n            selected._id\n         );\n         if (result.status === 200) {\n            let team = result.data;\n            console.log(team);\n            this.setState({\n               isEditDialogOpen: true,\n               name: team.name,\n               manager: team.manager._id\n            });\n         }\n      } catch (err) {\n         console.log(err);\n         this.setState({\n            isEditDialogOpen: true,\n            name: selected.name,\n            manager: selected.manager._id\n         });\n      }\n   };\n   closeEditDialog() {\n      this.setState({\n         isEditDialogOpen: false\n      });\n   }\n\n   openDeleteAlert() {\n      this.setState({\n         isDeleteAlertOpen: true\n      });\n   }\n   closeDeleteAlert() {\n      this.setState({\n         isDeleteAlertOpen: false\n      });\n   }\n\n   setLoading(loading) {\n      this.setState({\n         isLoading: loading\n      });\n   }\n\n   handleTabChange = activeTabID => {\n      this.setState({\n         activeTabID: activeTabID,\n         selectedTabId: activeTabID\n      });\n   };\n   clearForm() {\n      this.setState({\n         name: '',\n         manager: '',\n         isAlertOpen: false,\n         errorMessage: ''\n      });\n   }\n\n   renderControlls() {\n      if (this.state.selectedTabId === 'Teams') {\n         return (\n            <TableControllers\n               onEdit={this.openEditDialog}\n               canEdit={this.state.canEdit}\n               onAdd={() => this.openDialog()}\n               onDelete={() => this.openDeleteAlert()}\n               canDelete={this.state.canDelete}\n               onRefresh={() => this.getData()}\n            />\n         );\n      }\n   }\n\n   render() {\n      const {\n         data,\n         isLoading,\n         name,\n         time_from,\n         time_to,\n         target,\n         project,\n         manager,\n         isAlertOpen,\n         selected\n      } = this.state;\n\n      return (\n         <div id='TeamsPanel'>\n            <div className='mt-2'>\n               <H2>Teams Panel</H2>\n            </div>\n            <Tabs\n               onChange={this.handleTabChange}\n               selectedTabId={this.state.selectedTabId}\n               large\n            >\n               <Tab\n                  id='Teams'\n                  title='Teams'\n                  panel={\n                     <div>\n                        <KPIsTable\n                           isEmpty={this.state.isNoData}\n                           data={data}\n                           onRefresh={() => this.getData()}\n                           isLoading={isLoading}\n                           onSelection={this.getSelected}\n                        />\n                        <KPIDialog\n                           isOpen={this.state.isEditDialogOpen}\n                           toOpen={() => this.openEditDialog()}\n                           toClose={() => this.closeEditDialog()}\n                           name={name}\n                           time_from={time_from}\n                           time_to={time_to}\n                           target={target}\n                           project={project}\n                           manager={manager}\n                           onChange={this.onChange}\n                           handleDateFromChange={this.handleDateFromChange}\n                           handleDateToChange={this.handleDateToChange}\n                           onTargetValueChange={this.handleTargetValueChange}\n                           handleSubmit={this.handleUpdate}\n                           buttonCaption='Update'\n                           onClear={() => this.clearForm()}\n                           isAlertOpen={isAlertOpen}\n                           closeAlert={() => this.closeAlert()}\n                        />\n                        <KPIDialog\n                           isOpen={this.state.isAddDialogOpen}\n                           toOpen={() => this.openDialog()}\n                           toClose={() => this.closeDialog()}\n                           name={name}\n                           time_from={time_from}\n                           time_to={time_to}\n                           target={target}\n                           project={project}\n                           manager={manager}\n                           onChange={this.onChange}\n                           handleDateFromChange={this.handleDateFromChange}\n                           handleDateToChange={this.handleDateToChange}\n                           onTargetValueChange={this.handleTargetValueChange}\n                           handleSubmit={this.handleSubmit}\n                           buttonCaption='Add'\n                           onClear={() => this.clearForm()}\n                           isAlertOpen={isAlertOpen}\n                           closeAlert={() => this.closeAlert()}\n                        />\n                        <BeforeDeleteAlert\n                           isOpen={this.state.isDeleteAlertOpen}\n                           onConfirm={() => this.deleteItem(selected._id)}\n                           onCancel={() => this.closeDeleteAlert()}\n                           portalID='TeamsPanel'\n                           info={`Team: ${selected.name}`}\n                        />\n                     </div>\n                  }\n               />\n               <Tabs.Expander />\n               {this.renderControlls()}\n            </Tabs>\n         </div>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}