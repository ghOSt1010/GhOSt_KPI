{"ast":null,"code":"import _objectWithoutProperties from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/Routes/PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Client from '../Modules/Client/Client';\nimport AppBar from '../components/AppBar/AppBar';\nimport SideBar from '../components/Sidebar/Sidebar';\nimport MainContainer from '../components/MainContainer/MainContainer';\nexport default function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  //const { layout: Layout, component: Component, ...rest } = this.props;\n  if (this.props.layout === 'app') {\n    return (// Show the component only when the user is logged in\n      // Otherwise, redirect the user to /signin page\n      React.createElement(Route, Object.assign({}, rest, {\n        render: function render(props) {\n          return Client.isAuthenticated() ? React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, React.createElement(AppBar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }), React.createElement(SideBar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }), React.createElement(MainContainer, {\n            appView: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(Component, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          })))) : React.createElement(Redirect, {\n            to: \"/login\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }))\n    );\n  }\n\n  if (this.props.layout === 'home') {\n    return (// Show the component only when the user is logged in\n      // Otherwise, redirect the user to /signin page\n      React.createElement(Route, Object.assign({}, rest, {\n        render: function render(props) {\n          return Client.isAuthenticated() ? React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(AppBar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }), React.createElement(MainContainer, {\n            homeView: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(Component, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          })))) : React.createElement(Redirect, {\n            to: \"/login\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }))\n    );\n  }\n}","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/Routes/PrivateRoute.jsx"],"names":["React","Route","Redirect","Client","AppBar","SideBar","MainContainer","PrivateRoute","Component","component","rest","props","layout","isAuthenticated"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AAEA,eAAe,SAASC,YAAT,OAAyD;AAAA,MAAtBC,SAAsB,QAAjCC,SAAiC;AAAA,MAARC,IAAQ;;AACrE;AAEA,MAAI,KAAKC,KAAL,CAAWC,MAAX,KAAsB,KAA1B,EAAiC;AAC9B,WACG;AACA;AACA,0BAAC,KAAD,oBACOF,IADP;AAEG,QAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,iBACVR,MAAM,CAACU,eAAP,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAEG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,EAGG,oBAAC,aAAD;AAAe,YAAA,OAAO,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,CAHH,CADH,GASG,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVO;AAAA,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHH;AAoBF;;AACD,MAAI,KAAKA,KAAL,CAAWC,MAAX,KAAsB,MAA1B,EAAkC;AAC/B,WACG;AACA;AACA,0BAAC,KAAD,oBACOF,IADP;AAEG,QAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,iBACVR,MAAM,CAACU,eAAP,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAGG,oBAAC,aAAD;AAAe,YAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,CAHH,CADH,GASG,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVO;AAAA,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHH;AAoBF;AACH","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Client from '../Modules/Client/Client';\r\nimport AppBar from '../components/AppBar/AppBar';\r\nimport SideBar from '../components/Sidebar/Sidebar';\r\nimport MainContainer from '../components/MainContainer/MainContainer';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n   //const { layout: Layout, component: Component, ...rest } = this.props;\r\n\r\n   if (this.props.layout === 'app') {\r\n      return (\r\n         // Show the component only when the user is logged in\r\n         // Otherwise, redirect the user to /signin page\r\n         <Route\r\n            {...rest}\r\n            render={props =>\r\n               Client.isAuthenticated() ? (\r\n                  <div>\r\n                     <AppBar />\r\n                     <SideBar />\r\n                     <MainContainer appView>\r\n                        <Component {...props} />\r\n                     </MainContainer>\r\n                  </div>\r\n               ) : (\r\n                  <Redirect to='/login' />\r\n               )\r\n            }\r\n         />\r\n      );\r\n   }\r\n   if (this.props.layout === 'home') {\r\n      return (\r\n         // Show the component only when the user is logged in\r\n         // Otherwise, redirect the user to /signin page\r\n         <Route\r\n            {...rest}\r\n            render={props =>\r\n               Client.isAuthenticated() ? (\r\n                  <div>\r\n                     <AppBar />\r\n\r\n                     <MainContainer homeView>\r\n                        <Component {...props} />\r\n                     </MainContainer>\r\n                  </div>\r\n               ) : (\r\n                  <Redirect to='/login' />\r\n               )\r\n            }\r\n         />\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}