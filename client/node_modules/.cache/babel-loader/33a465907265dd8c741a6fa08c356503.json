{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/scarlet_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/scarlet_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/scarlet_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/scarlet_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/scarlet_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/scarlet_app/client/src/components/Forms/ContactTargetForms/UpdateContactTargetForm.jsx\";\nimport React, { Component } from 'react';\nimport { Col, Alert, Button, Form, FormGroup, CustomInput, Label, Input, ButtonGroup } from 'reactstrap';\nimport axios from 'axios';\nimport RoleOptions from '../Options/RoleOptions';\nimport SupportTypeOptions from '../Options/SupportTypeOptions';\n\nvar UpdateContactTargetForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateContactTargetForm, _Component);\n\n  function UpdateContactTargetForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateContactTargetForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateContactTargetForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      id: _this.props.id,\n      role: _this.props.role,\n      supportType: _this.props.supportType,\n      en: _this.props.en,\n      target: _this.props.target,\n      message: '',\n      supportTypeArr: ['Dedicated', 'Shared']\n    };\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.name] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.onSwitch = function (e) {\n      var en = _this.state.en;\n\n      _this.setState({\n        en: !en\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          id = _this$state.id,\n          role = _this$state.role,\n          supportType = _this$state.supportType,\n          en = _this$state.en,\n          target = _this$state.target;\n      var URL = '/api/employees/contactTargets/';\n      var data = {\n        target: {\n          id: id,\n          role: role,\n          supportType: supportType,\n          en: en,\n          target: target\n        }\n      };\n      axios.put(URL, data).then(function (res) {\n        _this.setState({\n          created: 'ok',\n          message: 'Contact Target saved successfully'\n        });\n      }).catch(function (err) {\n        _this.setState({\n          created: 'error',\n          message: 'Something went wrong',\n          err: err\n        });\n\n        alert(JSON.stringify(err));\n      });\n    };\n\n    _this.clearForm = function () {\n      _this.setState({\n        id: _this.props.id,\n        role: _this.props.role,\n        supportType: _this.props.supportType,\n        en: _this.props.en,\n        target: _this.props.target,\n        message: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UpdateContactTargetForm, [{\n    key: \"setInputTheme\",\n    value: function setInputTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"alertStyle\",\n    value: function alertStyle() {\n      var created = this.state.created;\n      if (created === 'ok') return 'border-success text-success';\n      if (created === 'error') return 'border-danger text-danger';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          role = _this$state2.role,\n          supportType = _this$state2.supportType,\n          en = _this$state2.en,\n          target = _this$state2.target,\n          message = _this$state2.message;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Update Contact Target\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), message !== '' && React.createElement(Alert, {\n        className: \"bg-transparent border rounded-corners text-center \".concat(this.alertStyle()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, message), React.createElement(Form, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"role\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Role\"), React.createElement(Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(RoleOptions, {\n        name: \"role\",\n        value: role,\n        onChange: this.onChange,\n        className: this.setInputTheme(),\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"email\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Support Type\"), React.createElement(Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(SupportTypeOptions, {\n        name: \"supportType\",\n        value: supportType,\n        onChange: this.onChange,\n        className: this.setInputTheme(),\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"Project\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"EN / Non EN\"), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"switch\",\n        id: \"en\",\n        name: \"en\",\n        checked: en === true ? true : false,\n        onChange: this.onSwitch,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"Project\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Target\"), React.createElement(Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        id: \"target\",\n        name: \"target\",\n        value: target,\n        onChange: this.onChange,\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        onClick: this.clearForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Update\")))));\n    }\n  }]);\n\n  return UpdateContactTargetForm;\n}(Component);\n\nexport { UpdateContactTargetForm as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/scarlet_app/client/src/components/Forms/ContactTargetForms/UpdateContactTargetForm.jsx"],"names":["React","Component","Col","Alert","Button","Form","FormGroup","CustomInput","Label","Input","ButtonGroup","axios","RoleOptions","SupportTypeOptions","UpdateContactTargetForm","state","theme","props","id","role","supportType","en","target","message","supportTypeArr","onChange","e","name","value","setState","onSwitch","onSubmit","preventDefault","URL","data","put","then","res","created","catch","err","alert","JSON","stringify","clearForm","alertStyle","setInputTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Col,\r\n   Alert,\r\n   Button,\r\n   Form,\r\n   FormGroup,\r\n   CustomInput,\r\n   Label,\r\n   Input,\r\n   ButtonGroup\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nimport RoleOptions from '../Options/RoleOptions';\r\nimport SupportTypeOptions from '../Options/SupportTypeOptions';\r\n\r\nexport default class UpdateContactTargetForm extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      id: this.props.id,\r\n      role: this.props.role,\r\n      supportType: this.props.supportType,\r\n      en: this.props.en,\r\n      target: this.props.target,\r\n      message: '',\r\n      supportTypeArr: ['Dedicated', 'Shared']\r\n   };\r\n\r\n   onChange = e => {\r\n      const state = this.state;\r\n      state[e.target.name] = e.target.value;\r\n      this.setState(state);\r\n   };\r\n\r\n   onSwitch = e => {\r\n      const { en } = this.state;\r\n      this.setState({ en: !en });\r\n   };\r\n\r\n   onSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const { id, role, supportType, en, target } = this.state;\r\n\r\n      const URL = '/api/employees/contactTargets/';\r\n\r\n      const data = {\r\n         target: {\r\n            id: id,\r\n            role: role,\r\n            supportType: supportType,\r\n            en: en,\r\n            target: target\r\n         }\r\n      };\r\n\r\n      axios\r\n         .put(URL, data)\r\n         .then(res => {\r\n            this.setState({\r\n               created: 'ok',\r\n               message: 'Contact Target saved successfully'\r\n            });\r\n         })\r\n         .catch(err => {\r\n            this.setState({\r\n               created: 'error',\r\n               message: 'Something went wrong',\r\n               err: err\r\n            });\r\n            alert(JSON.stringify(err));\r\n         });\r\n   };\r\n\r\n   clearForm = () => {\r\n      this.setState({\r\n         id: this.props.id,\r\n         role: this.props.role,\r\n         supportType: this.props.supportType,\r\n         en: this.props.en,\r\n         target: this.props.target,\r\n         message: ''\r\n      });\r\n   };\r\n\r\n   setInputTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   alertStyle() {\r\n      const { created } = this.state;\r\n      if (created === 'ok') return 'border-success text-success';\r\n      if (created === 'error') return 'border-danger text-danger';\r\n   }\r\n\r\n   render() {\r\n      const { role, supportType, en, target, message } = this.state;\r\n\r\n      return (\r\n         <div>\r\n            <h5>Update Contact Target</h5>\r\n            <hr />\r\n            {message !== '' && (\r\n               <Alert\r\n                  className={`bg-transparent border rounded-corners text-center ${this.alertStyle()}`}\r\n               >\r\n                  {message}\r\n               </Alert>\r\n            )}\r\n\r\n            <Form className='mb-3'>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='role' md={3} size='sm'>\r\n                     Role\r\n                  </Label>\r\n                  <Col md={8}>\r\n                     <RoleOptions\r\n                        name='role'\r\n                        value={role}\r\n                        onChange={this.onChange}\r\n                        className={this.setInputTheme()}\r\n                        disabled\r\n                     />\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='email' md={3} size='sm'>\r\n                     Support Type\r\n                  </Label>\r\n                  <Col md={8}>\r\n                     <SupportTypeOptions\r\n                        name='supportType'\r\n                        value={supportType}\r\n                        onChange={this.onChange}\r\n                        className={this.setInputTheme()}\r\n                        disabled\r\n                     />\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='Project' md={3} size='sm'>\r\n                     EN / Non EN\r\n                  </Label>\r\n                  <Col md={4}>\r\n                     <CustomInput\r\n                        type='switch'\r\n                        id='en'\r\n                        name='en'\r\n                        checked={en === true ? true : false}\r\n                        onChange={this.onSwitch}\r\n                        disabled\r\n                     />\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='Project' md={3} size='sm'>\r\n                     Target\r\n                  </Label>\r\n                  <Col md={8}>\r\n                     <Input\r\n                        type='number'\r\n                        id='target'\r\n                        name='target'\r\n                        value={target}\r\n                        onChange={this.onChange}\r\n                        className={this.setInputTheme()}\r\n                     />\r\n                  </Col>\r\n               </FormGroup>\r\n\r\n               <div className='text-right'>\r\n                  <ButtonGroup>\r\n                     <Button size='sm' onClick={this.clearForm}>\r\n                        Reset\r\n                     </Button>\r\n                     <Button color='primary' size='sm' onClick={this.onSubmit}>\r\n                        Update\r\n                     </Button>\r\n                  </ButtonGroup>\r\n               </div>\r\n            </Form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}