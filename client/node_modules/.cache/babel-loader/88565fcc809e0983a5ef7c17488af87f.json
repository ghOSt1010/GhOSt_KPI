{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n  }\n\n  _createClass(Auth, null, [{\n    key: \"authenticateUser\",\n\n    /**\r\n     * Authenticate a user. Save a token string in Local Storage\r\n     *\r\n     * @param {object} user\r\n     */\n    value: function authenticateUser(token) {\n      localStorage.setItem('user', JSON.stringify(token));\n      return this.isUserAuthenticated();\n    }\n    /**\r\n     * Check if a user is authenticated - check if a token is saved in Local Storage\r\n     * @async\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"isUserAuthenticated\",\n    value: function isUserAuthenticated() {\n      return localStorage.getItem('user') !== null;\n    }\n    /**\r\n     * Deauthenticate a user. Remove a token from Local Storage.\r\n     * @async\r\n     */\n\n  }, {\n    key: \"deauthenticateUser\",\n    value: function deauthenticateUser() {\n      localStorage.removeItem('user');\n    }\n    /**\r\n     * Get a token value.\r\n     *\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      var token = JSON.parse(localStorage.getItem('user'));\n      return token.token;\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport default Auth;","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/Modules/Auth/Auth.js"],"names":["Auth","token","localStorage","setItem","JSON","stringify","isUserAuthenticated","getItem","removeItem","parse"],"mappings":";;;IAAMA,I;;;;;;;;;;AACH;;;;;qCAKwBC,K,EAAO;AAC5BC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA7B;AACA,aAAO,KAAKK,mBAAL,EAAP;AACF;AAED;;;;;;;;0CAK6B;AAC1B,aAAOJ,YAAY,CAACK,OAAb,CAAqB,MAArB,MAAiC,IAAxC;AACF;AAED;;;;;;;yCAI4B;AACzBL,MAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;AACF;AAED;;;;;;;;+BAKkB;AACf,UAAIP,KAAK,GAAGG,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAX,CAAZ;AACA,aAAON,KAAK,CAACA,KAAb;AACF;;;;;;AAGJ,eAAeD,IAAf","sourcesContent":["class Auth {\r\n   /**\r\n    * Authenticate a user. Save a token string in Local Storage\r\n    *\r\n    * @param {object} user\r\n    */\r\n   static authenticateUser(token) {\r\n      localStorage.setItem('user', JSON.stringify(token));\r\n      return this.isUserAuthenticated();\r\n   }\r\n\r\n   /**\r\n    * Check if a user is authenticated - check if a token is saved in Local Storage\r\n    * @async\r\n    * @returns {boolean}\r\n    */\r\n   static isUserAuthenticated() {\r\n      return localStorage.getItem('user') !== null;\r\n   }\r\n\r\n   /**\r\n    * Deauthenticate a user. Remove a token from Local Storage.\r\n    * @async\r\n    */\r\n   static deauthenticateUser() {\r\n      localStorage.removeItem('user');\r\n   }\r\n\r\n   /**\r\n    * Get a token value.\r\n    *\r\n    * @returns {string}\r\n    */\r\n   static getToken() {\r\n      var token = JSON.parse(localStorage.getItem('user'));\r\n      return token.token;\r\n   }\r\n}\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}