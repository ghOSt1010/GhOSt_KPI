{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/AppSideBar/AppSideBar.jsx\";\nimport React, { Component } from 'react';\nimport Sidebar from '../Sidebar/Sidebar';\nimport SidebarItem from '../Sidebar/SidebarItem';\nimport SidebarItemSpecial from '../Sidebar/SidebarItemSpecial';\nimport Client from '../../Modules/Client/Client';\nimport UIManager from '../../Modules/UIManager/UIManager';\nimport { MenuDivider } from '@blueprintjs/core';\n\nvar AppSideBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppSideBar, _Component);\n\n  function AppSideBar(props) {\n    var _this;\n\n    _classCallCheck(this, AppSideBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppSideBar).call(this, props));\n\n    _this.handleLogout = function (e) {\n      e.preventDefault();\n      Client.logout();\n\n      _this.setState({\n        logout: true\n      });\n    };\n\n    _this.state = {\n      selected: 'home',\n      themeIcon: UIManager.isDarkThemeEnabled() ? 'flash' : 'moon',\n      themeToSwitch: UIManager.isDarkThemeEnabled() ? 'Light' : 'Dark',\n      logout: false,\n      goHome: false,\n      isOpen: false\n    };\n    _this.switchTheme = _this.switchTheme.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogout = _this.handleLogout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppSideBar, [{\n    key: \"changeSelection\",\n    value: function changeSelection(id) {\n      this.setState({\n        selected: id\n      });\n    }\n  }, {\n    key: \"switchTheme\",\n    value: function switchTheme() {\n      UIManager.swtichTheme();\n      UIManager.setChartView();\n      this.setState({\n        themeIcon: UIManager.isDarkThemeEnabled() ? 'flash' : 'moon',\n        themeToSwitch: UIManager.isDarkThemeEnabled() ? 'Light' : 'Dark'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selected = this.state.selected;\n      return React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(SidebarItem, {\n        to: \"/home\",\n        icon: \"home\",\n        selected: selected === 'home',\n        onClick: function onClick() {\n          return _this2.changeSelection('home');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(SidebarItem, {\n        to: \"/KPIs\",\n        icon: \"locate\",\n        selected: selected === 'KPIs',\n        onClick: function onClick() {\n          return _this2.changeSelection('KPIs');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(SidebarItem, {\n        to: \"/Dashboards\",\n        icon: \"dashboard\",\n        selected: selected === 'dashboard',\n        onClick: function onClick() {\n          return _this2.changeSelection('dashboard');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(SidebarItem, {\n        to: \"/Employees\",\n        icon: \"user\",\n        selected: selected === 'employees',\n        onClick: function onClick() {\n          return _this2.changeSelection('employees');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(SidebarItem, {\n        to: \"/Projects\",\n        icon: \"projects\",\n        selected: selected === 'projects',\n        onClick: function onClick() {\n          return _this2.changeSelection('projects');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(SidebarItem, {\n        to: \"/Teams\",\n        icon: \"people\",\n        selected: selected === 'teams',\n        onClick: function onClick() {\n          return _this2.changeSelection('teams');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(SidebarItem, {\n        to: \"/Reports\",\n        icon: \"manually-entered-data\",\n        selected: selected === 'reports',\n        onClick: function onClick() {\n          return _this2.changeSelection('reports');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(SidebarItem, {\n        to: \"/Settings\",\n        icon: \"cog\",\n        selected: selected === 'settings',\n        onClick: function onClick() {\n          return _this2.changeSelection('settings');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(SidebarItem, {\n        to: \"/AdminPanel\",\n        icon: \"control\",\n        selected: selected === 'admin',\n        onClick: function onClick() {\n          return _this2.changeSelection('admin');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(MenuDivider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(SidebarItemSpecial, {\n        icon: this.state.themeIcon,\n        intent: \"primary\",\n        onClick: this.switchTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(SidebarItemSpecial, {\n        icon: \"power\",\n        intent: \"danger\",\n        onClick: this.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AppSideBar;\n}(Component);\n\nexport { AppSideBar as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/AppSideBar/AppSideBar.jsx"],"names":["React","Component","Sidebar","SidebarItem","SidebarItemSpecial","Client","UIManager","MenuDivider","AppSideBar","props","handleLogout","e","preventDefault","logout","setState","state","selected","themeIcon","isDarkThemeEnabled","themeToSwitch","goHome","isOpen","switchTheme","bind","id","swtichTheme","setChartView","changeSelection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Sidebar from '../Sidebar/Sidebar';\nimport SidebarItem from '../Sidebar/SidebarItem';\nimport SidebarItemSpecial from '../Sidebar/SidebarItemSpecial';\nimport Client from '../../Modules/Client/Client';\nimport UIManager from '../../Modules/UIManager/UIManager';\nimport { MenuDivider } from '@blueprintjs/core';\n\nexport default class AppSideBar extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         selected: 'home',\n         themeIcon: UIManager.isDarkThemeEnabled() ? 'flash' : 'moon',\n         themeToSwitch: UIManager.isDarkThemeEnabled() ? 'Light' : 'Dark',\n         logout: false,\n         goHome: false,\n         isOpen: false\n      };\n      this.switchTheme = this.switchTheme.bind(this);\n      this.handleLogout = this.handleLogout.bind(this);\n   }\n\n   changeSelection(id) {\n      this.setState({ selected: id });\n   }\n\n   switchTheme() {\n      UIManager.swtichTheme();\n      UIManager.setChartView();\n      this.setState({\n         themeIcon: UIManager.isDarkThemeEnabled() ? 'flash' : 'moon',\n         themeToSwitch: UIManager.isDarkThemeEnabled() ? 'Light' : 'Dark'\n      });\n   }\n\n   handleLogout = e => {\n      e.preventDefault();\n      Client.logout();\n      this.setState({\n         logout: true\n      });\n   };\n\n   render() {\n      const { selected } = this.state;\n      return (\n         <Sidebar>\n            <SidebarItem\n               to='/home'\n               icon='home'\n               selected={selected === 'home'}\n               onClick={() => this.changeSelection('home')}\n            />\n            <SidebarItem\n               to='/KPIs'\n               icon='locate'\n               selected={selected === 'KPIs'}\n               onClick={() => this.changeSelection('KPIs')}\n            />\n            <SidebarItem\n               to='/Dashboards'\n               icon='dashboard'\n               selected={selected === 'dashboard'}\n               onClick={() => this.changeSelection('dashboard')}\n            />\n            <SidebarItem\n               to='/Employees'\n               icon='user'\n               selected={selected === 'employees'}\n               onClick={() => this.changeSelection('employees')}\n            />\n            <SidebarItem\n               to='/Projects'\n               icon='projects'\n               selected={selected === 'projects'}\n               onClick={() => this.changeSelection('projects')}\n            />\n            <SidebarItem\n               to='/Teams'\n               icon='people'\n               selected={selected === 'teams'}\n               onClick={() => this.changeSelection('teams')}\n            />\n            <SidebarItem\n               to='/Reports'\n               icon='manually-entered-data'\n               selected={selected === 'reports'}\n               onClick={() => this.changeSelection('reports')}\n            />\n            <SidebarItem\n               to='/Settings'\n               icon='cog'\n               selected={selected === 'settings'}\n               onClick={() => this.changeSelection('settings')}\n            />\n            <SidebarItem\n               to='/AdminPanel'\n               icon='control'\n               selected={selected === 'admin'}\n               onClick={() => this.changeSelection('admin')}\n            />\n            <MenuDivider />\n            <SidebarItemSpecial\n               icon={this.state.themeIcon}\n               intent='primary'\n               onClick={this.switchTheme}\n            />\n            <SidebarItemSpecial\n               icon='power'\n               intent='danger'\n               onClick={this.handleLogout}\n            />\n         </Sidebar>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}