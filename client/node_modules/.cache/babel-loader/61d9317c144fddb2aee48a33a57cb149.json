{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Forms/SLAsForms/UpdateSLAForm.jsx\";\nimport React, { Component } from 'react';\nimport { Col, Alert, Button, Form, FormGroup, FormText, Label, Input, ButtonGroup } from 'reactstrap';\nimport axios from 'axios';\n\nvar UpdateSLAForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateSLAForm, _Component);\n\n  function UpdateSLAForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateSLAForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateSLAForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      id: _this.props.id,\n      projectName: _this.props.projectName,\n      projectsArr: [],\n      slaType: _this.props.slaType,\n      slaTypesArr: [],\n      SLA: _this.props.SLA,\n      description: _this.props.description,\n      target: _this.props.target,\n      logic: _this.props.logic,\n      logicArr: ['>=', '>', '=', '<', '<='],\n      message: ''\n    };\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.name] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          id = _this$state.id,\n          projectName = _this$state.projectName,\n          slaType = _this$state.slaType,\n          SLA = _this$state.SLA,\n          description = _this$state.description,\n          logic = _this$state.logic,\n          target = _this$state.target;\n      var URL = '/api/sla/';\n      var data = {\n        sla: {\n          _id: id,\n          project: projectName,\n          type: slaType,\n          SLA: SLA,\n          description: description,\n          logic: logic,\n          target: target\n        }\n      };\n      axios.put(URL, data).then(function (res) {\n        _this.setState({\n          created: 'ok',\n          message: 'SLA updated successfully'\n        });\n      }).catch(function (err) {\n        _this.setState({\n          created: 'error',\n          message: 'Something went wrong',\n          err: err\n        });\n      });\n    };\n\n    _this.clearForm = function () {\n      _this.setState({\n        projectName: _this.props.projectName,\n        slaType: _this.props.slaType,\n        SLA: _this.props.SLA,\n        description: _this.props.description,\n        target: _this.props.target,\n        logic: _this.props.logic,\n        message: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UpdateSLAForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProjects();\n      this.getSLATypes();\n    }\n  }, {\n    key: \"getProjects\",\n    value: function getProjects() {\n      var _this2 = this;\n\n      var URL = '/api/projects';\n      axios.get(URL).then(function (res) {\n        _this2.setState({\n          projectsArr: res.data,\n          projectName: res.data[0]._id\n        });\n      }).catch(function (err) {\n        alert('Somethig went wrong with loading Projects list');\n      });\n    }\n  }, {\n    key: \"renderProjectOptions\",\n    value: function renderProjectOptions() {\n      return this.state.projectsArr.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, option.name);\n      });\n    }\n  }, {\n    key: \"getSLATypes\",\n    value: function getSLATypes() {\n      var _this3 = this;\n\n      var URL = '/api/sla/types/all';\n      axios.get(URL).then(function (res) {\n        _this3.setState({\n          slaTypesArr: res.data,\n          slaType: res.data[0]._id\n        });\n      }).catch(function (err) {\n        alert('Somethig went wrong with loading SLAs Types list');\n      });\n    }\n  }, {\n    key: \"renderSLATypesOptions\",\n    value: function renderSLATypesOptions() {\n      return this.state.slaTypesArr.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, option.type);\n      });\n    }\n  }, {\n    key: \"renderLogicOptions\",\n    value: function renderLogicOptions() {\n      return this.state.logicArr.map(function (a) {\n        return React.createElement(\"option\", {\n          key: a,\n          value: a,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, a);\n      });\n    }\n  }, {\n    key: \"setInputTheme\",\n    value: function setInputTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"setSelectTheme\",\n    value: function setSelectTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"alertStyle\",\n    value: function alertStyle() {\n      var created = this.state.created;\n      if (created === 'ok') return 'border-success text-success';\n      if (created === 'error') return 'border-danger text-danger';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          projectName = _this$state2.projectName,\n          slaType = _this$state2.slaType,\n          SLA = _this$state2.SLA,\n          description = _this$state2.description,\n          logic = _this$state2.logic,\n          target = _this$state2.target,\n          message = _this$state2.message;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, message !== '' && React.createElement(Alert, {\n        className: \"bg-transparent border rounded-corners text-center \".concat(this.alertStyle()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, message), React.createElement(Form, {\n        className: \"mb-2\",\n        ref: \"createProjectForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"projectName\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Project Name\"), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"projectName\",\n        id: \"projectName\",\n        ref: \"projectName\",\n        size: \"sm\",\n        value: projectName,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, this.renderProjectOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Please provide Project Name\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"slaType\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"SLA Type\"), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"slaType\",\n        id: \"slaType\",\n        size: \"sm\",\n        value: slaType,\n        onChange: this.onChange,\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.renderSLATypesOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Please select SLA Type\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"SLA\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"SLA\"), React.createElement(Col, {\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"SLA\",\n        id: \"SLA\",\n        size: \"sm\",\n        value: SLA,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Please provide SLA info\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"description\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Col, {\n        md: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"textarea\",\n        name: \"description\",\n        id: \"description\",\n        size: \"sm\",\n        value: description,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Please provide SLA description\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"target\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Target\"), React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"target\",\n        id: \"target\",\n        size: \"sm\",\n        value: target,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Please provide SLA Target\")), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"logic\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"SLA Logic\"), React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"logic\",\n        id: \"logic\",\n        size: \"sm\",\n        value: logic,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, this.renderLogicOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Please select SLA logic\"))), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        onClick: this.clearForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Update\")))));\n    }\n  }]);\n\n  return UpdateSLAForm;\n}(Component);\n\nexport { UpdateSLAForm as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Forms/SLAsForms/UpdateSLAForm.jsx"],"names":["React","Component","Col","Alert","Button","Form","FormGroup","FormText","Label","Input","ButtonGroup","axios","UpdateSLAForm","state","theme","props","id","projectName","projectsArr","slaType","slaTypesArr","SLA","description","target","logic","logicArr","message","onChange","e","name","value","setState","onSubmit","preventDefault","URL","data","sla","_id","project","type","put","then","res","created","catch","err","clearForm","getProjects","getSLATypes","get","alert","map","option","key","a","alertStyle","setInputTheme","renderProjectOptions","renderSLATypesOptions","setSelectTheme","renderLogicOptions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Col,\r\n   Alert,\r\n   Button,\r\n   Form,\r\n   FormGroup,\r\n   FormText,\r\n   Label,\r\n   Input,\r\n   ButtonGroup\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class UpdateSLAForm extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      id: this.props.id,\r\n      projectName: this.props.projectName,\r\n      projectsArr: [],\r\n      slaType: this.props.slaType,\r\n      slaTypesArr: [],\r\n      SLA: this.props.SLA,\r\n      description: this.props.description,\r\n      target: this.props.target,\r\n      logic: this.props.logic,\r\n      logicArr: ['>=', '>', '=', '<', '<='],\r\n      message: ''\r\n   };\r\n\r\n   componentDidMount() {\r\n      this.getProjects();\r\n      this.getSLATypes();\r\n   }\r\n\r\n   getProjects() {\r\n      const URL = '/api/projects';\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               projectsArr: res.data,\r\n               projectName: res.data[0]._id\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Somethig went wrong with loading Projects list');\r\n         });\r\n   }\r\n   renderProjectOptions() {\r\n      return this.state.projectsArr.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option._id}>\r\n               {option.name}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n   getSLATypes() {\r\n      const URL = '/api/sla/types/all';\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               slaTypesArr: res.data,\r\n               slaType: res.data[0]._id\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Somethig went wrong with loading SLAs Types list');\r\n         });\r\n   }\r\n   renderSLATypesOptions() {\r\n      return this.state.slaTypesArr.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option._id}>\r\n               {option.type}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n   renderLogicOptions() {\r\n      return this.state.logicArr.map(a => {\r\n         return (\r\n            <option key={a} value={a}>\r\n               {a}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n   onChange = e => {\r\n      const state = this.state;\r\n      state[e.target.name] = e.target.value;\r\n      this.setState(state);\r\n   };\r\n\r\n   onSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const {\r\n         id,\r\n         projectName,\r\n         slaType,\r\n         SLA,\r\n         description,\r\n         logic,\r\n         target\r\n      } = this.state;\r\n\r\n      const URL = '/api/sla/';\r\n\r\n      const data = {\r\n         sla: {\r\n            _id: id,\r\n            project: projectName,\r\n            type: slaType,\r\n            SLA: SLA,\r\n            description: description,\r\n            logic: logic,\r\n            target: target\r\n         }\r\n      };\r\n\r\n      axios\r\n         .put(URL, data)\r\n         .then(res => {\r\n            this.setState({\r\n               created: 'ok',\r\n               message: 'SLA updated successfully'\r\n            });\r\n         })\r\n         .catch(err => {\r\n            this.setState({\r\n               created: 'error',\r\n               message: 'Something went wrong',\r\n               err: err\r\n            });\r\n         });\r\n   };\r\n\r\n   clearForm = () => {\r\n      this.setState({\r\n         projectName: this.props.projectName,\r\n         slaType: this.props.slaType,\r\n         SLA: this.props.SLA,\r\n         description: this.props.description,\r\n         target: this.props.target,\r\n         logic: this.props.logic,\r\n         message: ''\r\n      });\r\n   };\r\n\r\n   setInputTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   setSelectTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   alertStyle() {\r\n      const { created } = this.state;\r\n      if (created === 'ok') return 'border-success text-success';\r\n      if (created === 'error') return 'border-danger text-danger';\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         projectName,\r\n         slaType,\r\n         SLA,\r\n         description,\r\n         logic,\r\n         target,\r\n         message\r\n      } = this.state;\r\n\r\n      return (\r\n         <div>\r\n            {message !== '' && (\r\n               <Alert\r\n                  className={`bg-transparent border rounded-corners text-center ${this.alertStyle()}`}\r\n               >\r\n                  {message}\r\n               </Alert>\r\n            )}\r\n            <Form className='mb-2' ref='createProjectForm'>\r\n               <FormGroup row>\r\n                  <Label\r\n                     className='text-right'\r\n                     for='projectName'\r\n                     md={3}\r\n                     size='sm'\r\n                  >\r\n                     Project Name\r\n                  </Label>\r\n                  <Col md={4}>\r\n                     <Input\r\n                        type='select'\r\n                        name='projectName'\r\n                        id='projectName'\r\n                        ref='projectName'\r\n                        size='sm'\r\n                        value={projectName}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setInputTheme()}\r\n                     >\r\n                        {this.renderProjectOptions()}\r\n                     </Input>\r\n                     <FormText>Please provide Project Name</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='slaType' md={3} size='sm'>\r\n                     SLA Type\r\n                  </Label>\r\n                  <Col md={4}>\r\n                     <Input\r\n                        type='select'\r\n                        name='slaType'\r\n                        id='slaType'\r\n                        size='sm'\r\n                        value={slaType}\r\n                        onChange={this.onChange}\r\n                        className={this.setInputTheme()}\r\n                     >\r\n                        {this.renderSLATypesOptions()}\r\n                     </Input>\r\n                     <FormText>Please select SLA Type</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='SLA' md={3} size='sm'>\r\n                     SLA\r\n                  </Label>\r\n                  <Col md={5}>\r\n                     <Input\r\n                        type='text'\r\n                        name='SLA'\r\n                        id='SLA'\r\n                        size='sm'\r\n                        value={SLA}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                     <FormText>Please provide SLA info</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label\r\n                     className='text-right'\r\n                     for='description'\r\n                     md={3}\r\n                     size='sm'\r\n                  >\r\n                     Description\r\n                  </Label>\r\n                  <Col md={9}>\r\n                     <Input\r\n                        type='textarea'\r\n                        name='description'\r\n                        id='description'\r\n                        size='sm'\r\n                        value={description}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                     <FormText>Please provide SLA description</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='target' md={3} size='sm'>\r\n                     Target\r\n                  </Label>\r\n                  <Col md={2}>\r\n                     <Input\r\n                        type='number'\r\n                        name='target'\r\n                        id='target'\r\n                        size='sm'\r\n                        value={target}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                     <FormText>Please provide SLA Target</FormText>\r\n                  </Col>\r\n\r\n                  <Label className='text-right' for='logic' md={3} size='sm'>\r\n                     SLA Logic\r\n                  </Label>\r\n                  <Col md={2}>\r\n                     <Input\r\n                        type='select'\r\n                        name='logic'\r\n                        id='logic'\r\n                        size='sm'\r\n                        value={logic}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     >\r\n                        {this.renderLogicOptions()}\r\n                     </Input>\r\n                     <FormText>Please select SLA logic</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n\r\n               <div className='text-right'>\r\n                  <ButtonGroup>\r\n                     <Button size='sm' onClick={this.clearForm}>\r\n                        Reset\r\n                     </Button>\r\n                     <Button color='primary' size='sm' onClick={this.onSubmit}>\r\n                        Update\r\n                     </Button>\r\n                  </ButtonGroup>\r\n               </div>\r\n            </Form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}