{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Dashboards/components/ChartsBuilder.jsx\";\nimport React, { Component } from 'react';\nimport CardWithModal from '../../../components/Card/CardWithModal';\nimport LineChart from '../../../components/Charts/ApexChart/LineChart';\n\nvar ChartsBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChartsBuilder, _Component);\n\n  function ChartsBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChartsBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChartsBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      kpis: []\n    };\n    return _this;\n  }\n\n  _createClass(ChartsBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unpackData();\n    }\n  }, {\n    key: \"unpackData\",\n    value: function unpackData() {\n      var k = this.props.data.map(function (d) {\n        return {\n          name: d.name,\n          status: d.status,\n          completed: d.completed,\n          labels: d.reports.map(function (r) {\n            return new Date(r.reportedAt).toLocaleString();\n          }),\n          target: d.target,\n          series: [{\n            name: d.name,\n            data: d.reports.map(function (r) {\n              return r.result;\n            })\n          }]\n        };\n      });\n      console.log(k);\n      this.setState({\n        kpis: k\n      });\n    }\n  }, {\n    key: \"renderKPIs\",\n    value: function renderKPIs() {\n      return this.state.kpis.map(function (kpi, key) {\n        return React.createElement(CardWithModal, {\n          headerText: kpi.name,\n          className: key > 0 ? 'mt-3' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(LineChart, {\n          labels: kpi.labels,\n          yaxisLabel: \"Results\",\n          xasisLabel: \"Reports\",\n          series: kpi.series,\n          targetValue: kpi.target,\n          targetInfo: \"KPI target\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.renderKPIs());\n    }\n  }]);\n\n  return ChartsBuilder;\n}(Component);\n\nexport { ChartsBuilder as default };\nChartsBuilder.defaultProps = {\n  data: []\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Dashboards/components/ChartsBuilder.jsx"],"names":["React","Component","CardWithModal","LineChart","ChartsBuilder","state","kpis","unpackData","k","props","data","map","d","name","status","completed","labels","reports","r","Date","reportedAt","toLocaleString","target","series","result","console","log","setState","kpi","key","renderKPIs","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,SAAP,MAAsB,gDAAtB;;IAEqBC,a;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,IAAI,EAAE;AADD,K;;;;;;wCAGY;AACjB,WAAKC,UAAL;AACF;;;iCAEY;AACV,UAAIC,CAAC,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoB,UAAAC,CAAC,EAAI;AAC9B,eAAO;AACJC,UAAAA,IAAI,EAAED,CAAC,CAACC,IADJ;AAEJC,UAAAA,MAAM,EAAEF,CAAC,CAACE,MAFN;AAGJC,UAAAA,SAAS,EAAEH,CAAC,CAACG,SAHT;AAIJC,UAAAA,MAAM,EAAEJ,CAAC,CAACK,OAAF,CAAUN,GAAV,CAAc,UAAAO,CAAC,EAAI;AACxB,mBAAO,IAAIC,IAAJ,CAASD,CAAC,CAACE,UAAX,EAAuBC,cAAvB,EAAP;AACF,WAFO,CAJJ;AAOJC,UAAAA,MAAM,EAAEV,CAAC,CAACU,MAPN;AAQJC,UAAAA,MAAM,EAAE,CACL;AACGV,YAAAA,IAAI,EAAED,CAAC,CAACC,IADX;AAEGH,YAAAA,IAAI,EAAEE,CAAC,CAACK,OAAF,CAAUN,GAAV,CAAc,UAAAO,CAAC,EAAI;AACtB,qBAAOA,CAAC,CAACM,MAAT;AACF,aAFK;AAFT,WADK;AARJ,SAAP;AAiBF,OAlBO,CAAR;AAmBAC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,CAAZ;AACA,WAAKmB,QAAL,CAAc;AAAErB,QAAAA,IAAI,EAAEE;AAAR,OAAd;AACF;;;iCACY;AACV,aAAO,KAAKH,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoB,UAACiB,GAAD,EAAMC,GAAN,EAAc;AACtC,eACG,oBAAC,aAAD;AACG,UAAA,UAAU,EAAED,GAAG,CAACf,IADnB;AAEG,UAAA,SAAS,EAAEgB,GAAG,GAAG,CAAN,GAAU,MAAV,GAAmB,EAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,oBAAC,SAAD;AACG,UAAA,MAAM,EAAED,GAAG,CAACZ,MADf;AAEG,UAAA,UAAU,EAAC,SAFd;AAGG,UAAA,UAAU,EAAC,SAHd;AAIG,UAAA,MAAM,EAAEY,GAAG,CAACL,MAJf;AAKG,UAAA,WAAW,EAAEK,GAAG,CAACN,MALpB;AAMG,UAAA,UAAU,EAAC,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJH,CADH;AAeF,OAhBM,CAAP;AAiBF;;;6BAEQ;AACN,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKQ,UAAL,EAAN,CAAP;AACF;;;;EArDuC7B,S;;SAAtBG,a;AAwDrBA,aAAa,CAAC2B,YAAd,GAA6B;AAC1BrB,EAAAA,IAAI,EAAE;AADoB,CAA7B","sourcesContent":["import React, { Component } from 'react';\nimport CardWithModal from '../../../components/Card/CardWithModal';\nimport LineChart from '../../../components/Charts/ApexChart/LineChart';\n\nexport default class ChartsBuilder extends Component {\n   state = {\n      kpis: []\n   };\n   componentDidMount() {\n      this.unpackData();\n   }\n\n   unpackData() {\n      var k = this.props.data.map(d => {\n         return {\n            name: d.name,\n            status: d.status,\n            completed: d.completed,\n            labels: d.reports.map(r => {\n               return new Date(r.reportedAt).toLocaleString();\n            }),\n            target: d.target,\n            series: [\n               {\n                  name: d.name,\n                  data: d.reports.map(r => {\n                     return r.result;\n                  })\n               }\n            ]\n         };\n      });\n      console.log(k);\n      this.setState({ kpis: k });\n   }\n   renderKPIs() {\n      return this.state.kpis.map((kpi, key) => {\n         return (\n            <CardWithModal\n               headerText={kpi.name}\n               className={key > 0 ? 'mt-3' : ''}\n            >\n               <LineChart\n                  labels={kpi.labels}\n                  yaxisLabel='Results'\n                  xasisLabel='Reports'\n                  series={kpi.series}\n                  targetValue={kpi.target}\n                  targetInfo='KPI target'\n               />\n            </CardWithModal>\n         );\n      });\n   }\n\n   render() {\n      return <div>{this.renderKPIs()}</div>;\n   }\n}\n\nChartsBuilder.defaultProps = {\n   data: []\n};\n"]},"metadata":{},"sourceType":"module"}