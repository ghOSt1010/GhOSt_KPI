{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/Home/Home.jsx\";\nimport React, { Component } from 'react';\nimport { Row } from 'reactstrap';\nimport { Button } from '@blueprintjs/core';\nimport MainContainer from '../../components/MainContainer/MainContainer';\nimport IconCard from './components/IconCard/IconCard';\nimport StdCard from '../../components/Card/StdCard';\nimport Client from '../../Modules/Client/Client';\nimport UIManager from '../../Modules/UIManager/UIManager';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      theme: UIManager.getTheme(),\n      testResult: null,\n      testServiceResult: null\n    };\n    _this.getUserData = _this.getUserData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.testService = _this.testService.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"getUserData\",\n    value: function () {\n      var _getUserData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Client.testingCurrentUserAuth();\n\n              case 2:\n                result = _context.sent;\n                this.setState({\n                  testResult: result\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getUserData() {\n        return _getUserData.apply(this, arguments);\n      }\n\n      return getUserData;\n    }()\n  }, {\n    key: \"testService\",\n    value: function () {\n      var _testService = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var result_;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Client.API.SERVICES.EmployeesService.getEmployeeById('5e01fe115a1c9d0875846656');\n\n              case 2:\n                result_ = _context2.sent;\n                this.setState({\n                  testServiceResult: result_\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function testService() {\n        return _testService.apply(this, arguments);\n      }\n\n      return testService;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MainContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(IconCard, {\n        icon: \"chart\",\n        theme: this.state.theme,\n        title: \"Dashboards\",\n        link: \"/Dashboards/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(IconCard, {\n        icon: \"projects\",\n        theme: this.state.theme,\n        title: \"Projects\",\n        link: \"/Project/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(IconCard, {\n        icon: \"join-table\",\n        theme: this.state.theme,\n        title: \"Report\",\n        link: \"/Report/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(IconCard, {\n        icon: \"cog\",\n        theme: this.state.theme,\n        title: \"Admin Panel\",\n        link: \"AdminPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(StdCard, {\n        icon: \"fas fa-rss\",\n        headerText: \"Project info\",\n        size: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" Project info \"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"current version: 0.0.1\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Author: Rafal Cymbalista\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Test Authentication:\", ' ', React.createElement(Button, {\n        icon: this.state.testResult ? 'unlock' : 'lock',\n        minimal: true,\n        onClick: this.getUserData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.testResult))), React.createElement(StdCard, {\n        headerText: \"test.serv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Testing Services\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"play\",\n        minimal: true,\n        intent: \"danger\",\n        onClick: this.testService,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.state.testServiceResult)))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport { Home as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/Home/Home.jsx"],"names":["React","Component","Row","Button","MainContainer","IconCard","StdCard","Client","UIManager","Home","props","state","theme","getTheme","testResult","testServiceResult","getUserData","bind","testService","testingCurrentUserAuth","result","setState","API","SERVICES","EmployeesService","getEmployeeById","result_"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row } from 'reactstrap';\nimport { Button } from '@blueprintjs/core';\nimport MainContainer from '../../components/MainContainer/MainContainer';\nimport IconCard from './components/IconCard/IconCard';\nimport StdCard from '../../components/Card/StdCard';\nimport Client from '../../Modules/Client/Client';\n\nimport UIManager from '../../Modules/UIManager/UIManager';\n\nexport default class Home extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         theme: UIManager.getTheme(),\n         testResult: null,\n         testServiceResult: null\n      };\n      this.getUserData = this.getUserData.bind(this);\n      this.testService = this.testService.bind(this);\n   }\n\n   async getUserData() {\n      let result = await Client.testingCurrentUserAuth();\n      this.setState({\n         testResult: result\n      });\n   }\n\n   async testService() {\n      let result_ = await Client.API.SERVICES.EmployeesService.getEmployeeById(\n         '5e01fe115a1c9d0875846656'\n      );\n      this.setState({\n         testServiceResult: result_\n      });\n   }\n\n   render() {\n      return (\n         <MainContainer>\n            <div className='container-fluid'>\n               <Row>\n                  <IconCard\n                     icon='chart'\n                     theme={this.state.theme}\n                     title='Dashboards'\n                     link='/Dashboards/'\n                  />\n                  <IconCard\n                     icon='projects'\n                     theme={this.state.theme}\n                     title='Projects'\n                     link='/Project/'\n                  />\n                  <IconCard\n                     icon='join-table'\n                     theme={this.state.theme}\n                     title='Report'\n                     link='/Report/'\n                  />\n                  <IconCard\n                     icon='cog'\n                     theme={this.state.theme}\n                     title='Admin Panel'\n                     link='AdminPanel'\n                  />\n               </Row>\n               <Row>\n                  <StdCard\n                     icon='fas fa-rss'\n                     headerText='Project info'\n                     size='xl'\n                  >\n                     <h3> Project info </h3>\n                     <hr />\n                     <h5>current version: 0.0.1</h5>\n                     <hr />\n                     <h5>Author: Rafal Cymbalista</h5>\n\n                     <h5>\n                        Test Authentication:{' '}\n                        <Button\n                           icon={this.state.testResult ? 'unlock' : 'lock'}\n                           minimal\n                           onClick={this.getUserData}\n                        ></Button>\n                        <p>{this.state.testResult}</p>\n                     </h5>\n                  </StdCard>\n                  <StdCard headerText='test.serv'>\n                     <h3>Testing Services</h3>\n                     <p>\n                        <Button\n                           icon='play'\n                           minimal\n                           intent='danger'\n                           onClick={this.testService}\n                        />\n                     </p>\n                     <p>{this.state.testServiceResult}</p>\n                  </StdCard>\n               </Row>\n            </div>\n         </MainContainer>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}