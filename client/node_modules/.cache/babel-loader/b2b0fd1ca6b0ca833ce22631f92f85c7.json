{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Charts/ApexChart/LineChart.jsx\";\nimport React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport UIManager from '../../../Modules/UIManager/UIManager';\n\nvar LineChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LineChart, _Component);\n\n  function LineChart(props) {\n    var _this;\n\n    _classCallCheck(this, LineChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LineChart).call(this, props));\n    _this.state = {\n      options: {\n        chart: {\n          id: 'basic-bar',\n          background: 'transparent',\n          dropShadow: {\n            enabled: true,\n            color: '#000',\n            top: 18,\n            left: 7,\n            blur: 10,\n            opacity: 0.2\n          },\n          foreColor: UIManager.getTheme() === 'dark' ? '#f5f8fa' : '#1e1e1e',\n          toolbar: false\n        },\n        dataLabels: {\n          enabled: true\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        title: {\n          text: 'Some Data',\n          align: 'left'\n        },\n        grid: {\n          borderColor: 'rbga(0,0,0,0.5)',\n          row: {\n            colors: ['rgba(0,0,0,0.2)', 'transparent'],\n            // takes an array which will be repeated on columns\n            opacity: 0.5\n          }\n        },\n        xaxis: {\n          type: 'category',\n          title: {\n            text: 'Year'\n          },\n          labels: {\n            style: {\n              cssClass: 'text'\n            }\n          },\n          categories: _this.props.labels,\n          axisBorder: {\n            show: true\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        yaxis: {\n          title: {\n            text: _this.props.yaxis\n          },\n          min: 5,\n          max: 150\n        },\n        annotations: {\n          position: 'back',\n          yaxis: [{\n            y: _this.props.targetValue,\n            y2: null,\n            strokeDashArray: 3,\n            borderColor: 'red',\n            fillColor: '#b30000',\n            opacity: 0.8,\n            offsetX: 0,\n            offsetY: 0,\n            yAxisIndex: 0,\n            label: {\n              borderColor: 'transparent',\n              style: {\n                color: '#fff',\n                background: '#b30000'\n              },\n              position: 'right',\n              offsetX: 0,\n              offsetY: 20,\n              text: _this.props.targetInfo\n            }\n          }, {\n            y: _this.getAverage() - 5,\n            y2: _this.getAverage() + 5,\n            strokeDashArray: 3,\n            borderColor: '#228b22',\n            fillColor: '#228b22',\n            opacity: 0.8,\n            offsetX: 0,\n            offsetY: 0,\n            yAxisIndex: 0,\n            label: {\n              borderColor: 'transparent',\n              style: {\n                color: '#fff',\n                background: '#228b22'\n              },\n              position: 'left',\n              text: 'Average',\n              offsetX: 45,\n              offsetY: 0\n            }\n          }]\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'right',\n          floating: true,\n          offsetY: -25,\n          offsetX: -5\n        }\n      },\n      series: _this.props.series\n    };\n    return _this;\n  }\n\n  _createClass(LineChart, [{\n    key: \"getAverage\",\n    value: function getAverage() {\n      var values = this.props.series[0].data;\n      var sum = values.reduce(function (previous, current) {\n        return current += previous;\n      });\n      var avg = sum / values.length;\n      return avg;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Chart, {\n        options: this.state.options,\n        series: this.props.series,\n        type: \"line\",\n        width: \"100%\",\n        height: 350,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return LineChart;\n}(Component);\n\nexport { LineChart as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Charts/ApexChart/LineChart.jsx"],"names":["React","Component","Chart","UIManager","LineChart","props","state","options","chart","id","background","dropShadow","enabled","color","top","left","blur","opacity","foreColor","getTheme","toolbar","dataLabels","stroke","curve","title","text","align","grid","borderColor","row","colors","xaxis","type","labels","style","cssClass","categories","axisBorder","show","tooltip","yaxis","min","max","annotations","position","y","targetValue","y2","strokeDashArray","fillColor","offsetX","offsetY","yAxisIndex","label","targetInfo","getAverage","legend","horizontalAlign","floating","series","values","data","sum","reduce","previous","current","avg","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\n\nimport UIManager from '../../../Modules/UIManager/UIManager';\n\nexport default class LineChart extends Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         options: {\n            chart: {\n               id: 'basic-bar',\n               background: 'transparent',\n               dropShadow: {\n                  enabled: true,\n                  color: '#000',\n                  top: 18,\n                  left: 7,\n                  blur: 10,\n                  opacity: 0.2\n               },\n               foreColor:\n                  UIManager.getTheme() === 'dark' ? '#f5f8fa' : '#1e1e1e',\n               toolbar: false\n            },\n            dataLabels: {\n               enabled: true\n            },\n            stroke: {\n               curve: 'smooth'\n            },\n            title: {\n               text: 'Some Data',\n               align: 'left'\n            },\n            grid: {\n               borderColor: 'rbga(0,0,0,0.5)',\n               row: {\n                  colors: ['rgba(0,0,0,0.2)', 'transparent'], // takes an array which will be repeated on columns\n                  opacity: 0.5\n               }\n            },\n            xaxis: {\n               type: 'category',\n               title: {\n                  text: 'Year'\n               },\n               labels: {\n                  style: {\n                     cssClass: 'text'\n                  }\n               },\n\n               categories: this.props.labels,\n               axisBorder: {\n                  show: true\n               },\n               tooltip: {\n                  enabled: false\n               }\n            },\n            yaxis: {\n               title: {\n                  text: this.props.yaxis\n               },\n               min: 5,\n               max: 150\n            },\n            annotations: {\n               position: 'back',\n               yaxis: [\n                  {\n                     y: this.props.targetValue,\n                     y2: null,\n                     strokeDashArray: 3,\n                     borderColor: 'red',\n                     fillColor: '#b30000',\n                     opacity: 0.8,\n                     offsetX: 0,\n                     offsetY: 0,\n                     yAxisIndex: 0,\n                     label: {\n                        borderColor: 'transparent',\n                        style: {\n                           color: '#fff',\n                           background: '#b30000'\n                        },\n                        position: 'right',\n                        offsetX: 0,\n                        offsetY: 20,\n                        text: this.props.targetInfo\n                     }\n                  },\n                  {\n                     y: this.getAverage() - 5,\n                     y2: this.getAverage() + 5,\n                     strokeDashArray: 3,\n                     borderColor: '#228b22',\n                     fillColor: '#228b22',\n                     opacity: 0.8,\n                     offsetX: 0,\n                     offsetY: 0,\n                     yAxisIndex: 0,\n                     label: {\n                        borderColor: 'transparent',\n                        style: {\n                           color: '#fff',\n                           background: '#228b22'\n                        },\n                        position: 'left',\n                        text: 'Average',\n                        offsetX: 45,\n                        offsetY: 0\n                     }\n                  }\n               ]\n            },\n            legend: {\n               position: 'top',\n               horizontalAlign: 'right',\n               floating: true,\n               offsetY: -25,\n               offsetX: -5\n            }\n         },\n         series: this.props.series\n      };\n   }\n\n   getAverage() {\n      let values = this.props.series[0].data;\n      let sum = values.reduce((previous, current) => (current += previous));\n      let avg = sum / values.length;\n      return avg;\n   }\n   render() {\n      return (\n         <Chart\n            options={this.state.options}\n            series={this.props.series}\n            type='line'\n            width='100%'\n            height={350}\n         />\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}