{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Forms/ProjectForms/CreateProjectForm/CreateProjectForm.jsx\";\nimport React, { Component } from 'react';\nimport { Col, Alert, Button, Form, FormGroup, FormText, Label, Input, ButtonGroup } from 'reactstrap';\nimport axios from 'axios';\n\nvar CreateProjectForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateProjectForm, _Component);\n\n  function CreateProjectForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateProjectForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateProjectForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      projectName: '',\n      status: '',\n      deliveryType: '',\n      smsArr: [],\n      opsArr: [],\n      statusArr: [],\n      deliveryTypeArr: [],\n      sm: '',\n      ops: '',\n      cim: 0,\n      ras: 0,\n      message: ''\n    };\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.name] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          projectName = _this$state.projectName,\n          status = _this$state.status,\n          deliveryType = _this$state.deliveryType,\n          sm = _this$state.sm,\n          ops = _this$state.ops,\n          cim = _this$state.cim,\n          ras = _this$state.ras;\n      var URL = 'http://localhost:3001/api/projects/';\n      var data = {\n        project: {\n          name: projectName,\n          status: status,\n          deliveryType: deliveryType,\n          sm: sm,\n          ops: ops,\n          cim: cim,\n          ras: ras,\n          created: ''\n        }\n      };\n      axios.post(URL, data).then(function (res) {\n        _this.setState({\n          created: 'ok',\n          message: 'Project saved successfully'\n        });\n      }).catch(function (err) {\n        _this.setState({\n          created: 'error',\n          message: 'Something went wrong',\n          err: err\n        });\n      });\n    };\n\n    _this.clearForm = function () {\n      _this.setState({\n        projectName: '',\n        status: 'Delivery',\n        deliveryType: 'Dedicated',\n        sm: '',\n        ops: '',\n        cim: '',\n        ras: '',\n        message: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateProjectForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getSms();\n      this.getOps();\n      this.getDeliveryTypes();\n      this.getStatuses();\n    }\n  }, {\n    key: \"getSms\",\n    value: function getSms() {\n      var _this2 = this;\n\n      var URL = 'http://localhost:3001/api/employees/role/Service%20Manager';\n      axios.get(URL).then(function (res) {\n        _this2.setState({\n          smsArr: res.data,\n          sm: res.data[0]._id\n        });\n      }).catch(function (err) {\n        alert('Somethig went wrong with loading SM list');\n      });\n    }\n  }, {\n    key: \"renderSmsOptions\",\n    value: function renderSmsOptions() {\n      return this.state.smsArr.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, option.name);\n      });\n    }\n  }, {\n    key: \"getOps\",\n    value: function getOps() {\n      var _this3 = this;\n\n      var URL = 'http://localhost:3001/api/employees/role/Operations%20Manager';\n      axios.get(URL).then(function (res) {\n        _this3.setState({\n          opsArr: res.data,\n          ops: res.data[0]._id\n        });\n      }).catch(function (err) {\n        alert('Somethig went wrong with loading OPS list');\n      });\n    }\n  }, {\n    key: \"renderOpsOptions\",\n    value: function renderOpsOptions() {\n      return this.state.opsArr.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, option.name);\n      });\n    }\n  }, {\n    key: \"getDeliveryTypes\",\n    value: function getDeliveryTypes() {\n      var _this4 = this;\n\n      var URL = 'http://localhost:3001/api/projects/deliveryTypes/all';\n      axios.get(URL).then(function (res) {\n        _this4.setState({\n          deliveryTypeArr: res.data,\n          deliveryType: res.data[0]._id\n        });\n      }).catch(function (err) {\n        alert('Somethig went wrong with loading delivery types list');\n      });\n    }\n  }, {\n    key: \"renderDeliveryTypesOptions\",\n    value: function renderDeliveryTypesOptions() {\n      return this.state.deliveryTypeArr.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, option.deliveryType);\n      });\n    }\n  }, {\n    key: \"getStatuses\",\n    value: function getStatuses() {\n      var _this5 = this;\n\n      var URL = 'http://localhost:3001/api/projects/statuses/all';\n      axios.get(URL).then(function (res) {\n        _this5.setState({\n          statusArr: res.data,\n          status: res.data[0]._id\n        });\n      }).catch(function (err) {\n        alert('Somethig went wrong with loading delivery types list');\n      });\n    }\n  }, {\n    key: \"renderStatusesOptions\",\n    value: function renderStatusesOptions() {\n      return this.state.statusArr.map(function (option, key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: option._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, option.status);\n      });\n    }\n  }, {\n    key: \"setInputTheme\",\n    value: function setInputTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"setSelectTheme\",\n    value: function setSelectTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"alertStyle\",\n    value: function alertStyle() {\n      var created = this.state.created;\n      if (created === 'ok') return 'border-success text-success';\n      if (created === 'error') return 'border-danger text-danger';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          projectName = _this$state2.projectName,\n          status = _this$state2.status,\n          deliveryType = _this$state2.deliveryType,\n          sm = _this$state2.sm,\n          ops = _this$state2.ops,\n          cim = _this$state2.cim,\n          ras = _this$state2.ras,\n          message = _this$state2.message;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, message !== '' && React.createElement(Alert, {\n        className: \"bg-transparent border rounded-corners text-center \".concat(this.alertStyle()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, message), React.createElement(Form, {\n        className: \"mb-2\",\n        ref: \"createProjectForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"projectName\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Project Name\"), React.createElement(Col, {\n        md: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"input\",\n        name: \"projectName\",\n        id: \"projectName\",\n        ref: \"projectName\",\n        size: \"sm\",\n        value: projectName,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Please provide Project Name\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"status\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Status\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"status\",\n        id: \"status\",\n        size: \"sm\",\n        value: status,\n        onChange: this.onChange,\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, this.renderStatusesOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Please select Status\")), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"deliveryType\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Delivery Type\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"deliveryType\",\n        id: \"deliveryType\",\n        size: \"sm\",\n        value: deliveryType,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, this.renderDeliveryTypesOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Please select delivery type\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"sm\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Service Manager\"), React.createElement(Col, {\n        md: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"sm\",\n        id: \"sm\",\n        size: \"sm\",\n        value: sm,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, this.renderSmsOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Please provide Service Manager Name\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"ops\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Operations Manager\"), React.createElement(Col, {\n        md: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"ops\",\n        id: \"ops\",\n        size: \"sm\",\n        value: ops,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, this.renderOpsOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Please provide Operations Manager Name\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"cim\",\n        md: 1,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"CIM\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"cim\",\n        id: \"cim\",\n        size: \"sm\",\n        value: cim,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Please provide CIM\")), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"ras\",\n        md: 1,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"RAS\"), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"ras\",\n        id: \"ras\",\n        size: \"sm\",\n        value: ras,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"Please provide RAS\"))), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        onClick: this.clearForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, \"Add\")))));\n    }\n  }]);\n\n  return CreateProjectForm;\n}(Component);\n\nexport { CreateProjectForm as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Forms/ProjectForms/CreateProjectForm/CreateProjectForm.jsx"],"names":["React","Component","Col","Alert","Button","Form","FormGroup","FormText","Label","Input","ButtonGroup","axios","CreateProjectForm","state","theme","props","projectName","status","deliveryType","smsArr","opsArr","statusArr","deliveryTypeArr","sm","ops","cim","ras","message","onChange","e","target","name","value","setState","onSubmit","preventDefault","URL","data","project","created","post","then","res","catch","err","clearForm","getSms","getOps","getDeliveryTypes","getStatuses","get","_id","alert","map","option","key","alertStyle","setInputTheme","renderStatusesOptions","setSelectTheme","renderDeliveryTypesOptions","renderSmsOptions","renderOpsOptions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Col,\r\n   Alert,\r\n   Button,\r\n   Form,\r\n   FormGroup,\r\n   FormText,\r\n   Label,\r\n   Input,\r\n   ButtonGroup\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateProjectForm extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      projectName: '',\r\n      status: '',\r\n      deliveryType: '',\r\n      smsArr: [],\r\n      opsArr: [],\r\n      statusArr: [],\r\n      deliveryTypeArr: [],\r\n      sm: '',\r\n      ops: '',\r\n      cim: 0,\r\n      ras: 0,\r\n      message: ''\r\n   };\r\n\r\n   componentDidMount() {\r\n      this.getSms();\r\n      this.getOps();\r\n      this.getDeliveryTypes();\r\n      this.getStatuses();\r\n   }\r\n\r\n   getSms() {\r\n      const URL = 'http://localhost:3001/api/employees/role/Service%20Manager';\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               smsArr: res.data,\r\n               sm: res.data[0]._id\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Somethig went wrong with loading SM list');\r\n         });\r\n   }\r\n   renderSmsOptions() {\r\n      return this.state.smsArr.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option._id}>\r\n               {option.name}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n   getOps() {\r\n      const URL =\r\n         'http://localhost:3001/api/employees/role/Operations%20Manager';\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               opsArr: res.data,\r\n               ops: res.data[0]._id\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Somethig went wrong with loading OPS list');\r\n         });\r\n   }\r\n   renderOpsOptions() {\r\n      return this.state.opsArr.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option._id}>\r\n               {option.name}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n   getDeliveryTypes() {\r\n      const URL = 'http://localhost:3001/api/projects/deliveryTypes/all';\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               deliveryTypeArr: res.data,\r\n               deliveryType: res.data[0]._id\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Somethig went wrong with loading delivery types list');\r\n         });\r\n   }\r\n   renderDeliveryTypesOptions() {\r\n      return this.state.deliveryTypeArr.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option._id}>\r\n               {option.deliveryType}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n   getStatuses() {\r\n      const URL = 'http://localhost:3001/api/projects/statuses/all';\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               statusArr: res.data,\r\n               status: res.data[0]._id\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Somethig went wrong with loading delivery types list');\r\n         });\r\n   }\r\n   renderStatusesOptions() {\r\n      return this.state.statusArr.map((option, key) => {\r\n         return (\r\n            <option key={key} value={option._id}>\r\n               {option.status}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n\r\n   onChange = e => {\r\n      const state = this.state;\r\n      state[e.target.name] = e.target.value;\r\n      this.setState(state);\r\n   };\r\n\r\n   onSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const {\r\n         projectName,\r\n         status,\r\n         deliveryType,\r\n         sm,\r\n         ops,\r\n         cim,\r\n         ras\r\n      } = this.state;\r\n\r\n      const URL = 'http://localhost:3001/api/projects/';\r\n\r\n      const data = {\r\n         project: {\r\n            name: projectName,\r\n            status: status,\r\n            deliveryType: deliveryType,\r\n            sm: sm,\r\n            ops: ops,\r\n            cim: cim,\r\n            ras: ras,\r\n            created: ''\r\n         }\r\n      };\r\n\r\n      axios\r\n         .post(URL, data)\r\n         .then(res => {\r\n            this.setState({\r\n               created: 'ok',\r\n               message: 'Project saved successfully'\r\n            });\r\n         })\r\n         .catch(err => {\r\n            this.setState({\r\n               created: 'error',\r\n               message: 'Something went wrong',\r\n               err: err\r\n            });\r\n         });\r\n   };\r\n\r\n   clearForm = () => {\r\n      this.setState({\r\n         projectName: '',\r\n         status: 'Delivery',\r\n         deliveryType: 'Dedicated',\r\n         sm: '',\r\n         ops: '',\r\n         cim: '',\r\n         ras: '',\r\n         message: ''\r\n      });\r\n   };\r\n\r\n   setInputTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   setSelectTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   alertStyle() {\r\n      const { created } = this.state;\r\n      if (created === 'ok') return 'border-success text-success';\r\n      if (created === 'error') return 'border-danger text-danger';\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         projectName,\r\n         status,\r\n         deliveryType,\r\n         sm,\r\n         ops,\r\n         cim,\r\n         ras,\r\n         message\r\n      } = this.state;\r\n\r\n      return (\r\n         <div>\r\n            {message !== '' && (\r\n               <Alert\r\n                  className={`bg-transparent border rounded-corners text-center ${this.alertStyle()}`}\r\n               >\r\n                  {message}\r\n               </Alert>\r\n            )}\r\n            <Form className='mb-2' ref='createProjectForm'>\r\n               <FormGroup row>\r\n                  <Label\r\n                     className='text-right'\r\n                     for='projectName'\r\n                     md={3}\r\n                     size='sm'\r\n                  >\r\n                     Project Name\r\n                  </Label>\r\n                  <Col md={9}>\r\n                     <Input\r\n                        type='input'\r\n                        name='projectName'\r\n                        id='projectName'\r\n                        ref='projectName'\r\n                        size='sm'\r\n                        value={projectName}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setInputTheme()}\r\n                     />\r\n                     <FormText>Please provide Project Name</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='status' md={3} size='sm'>\r\n                     Status\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='select'\r\n                        name='status'\r\n                        id='status'\r\n                        size='sm'\r\n                        value={status}\r\n                        onChange={this.onChange}\r\n                        className={this.setInputTheme()}\r\n                     >\r\n                        {this.renderStatusesOptions()}\r\n                     </Input>\r\n                     <FormText>Please select Status</FormText>\r\n                  </Col>\r\n\r\n                  <Label\r\n                     className='text-right'\r\n                     for='deliveryType'\r\n                     md={3}\r\n                     size='sm'\r\n                  >\r\n                     Delivery Type\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='select'\r\n                        name='deliveryType'\r\n                        id='deliveryType'\r\n                        size='sm'\r\n                        value={deliveryType}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     >\r\n                        {this.renderDeliveryTypesOptions()}\r\n                     </Input>\r\n                     <FormText>Please select delivery type</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='sm' md={3} size='sm'>\r\n                     Service Manager\r\n                  </Label>\r\n                  <Col md={9}>\r\n                     <Input\r\n                        type='select'\r\n                        name='sm'\r\n                        id='sm'\r\n                        size='sm'\r\n                        value={sm}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     >\r\n                        {this.renderSmsOptions()}\r\n                     </Input>\r\n                     <FormText>Please provide Service Manager Name</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='ops' md={3} size='sm'>\r\n                     Operations Manager\r\n                  </Label>\r\n                  <Col md={9}>\r\n                     <Input\r\n                        type='select'\r\n                        name='ops'\r\n                        id='ops'\r\n                        size='sm'\r\n                        value={ops}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     >\r\n                        {this.renderOpsOptions()}\r\n                     </Input>\r\n                     <FormText>Please provide Operations Manager Name</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Col md={4} />\r\n                  <Label className='text-right' for='cim' md={1} size='sm'>\r\n                     CIM\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='number'\r\n                        name='cim'\r\n                        id='cim'\r\n                        size='sm'\r\n                        value={cim}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                     <FormText>Please provide CIM</FormText>\r\n                  </Col>\r\n\r\n                  <Label className='text-right' for='ras' md={1} size='sm'>\r\n                     RAS\r\n                  </Label>\r\n                  <Col md={3}>\r\n                     <Input\r\n                        type='number'\r\n                        name='ras'\r\n                        id='ras'\r\n                        size='sm'\r\n                        value={ras}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                     <FormText>Please provide RAS</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n\r\n               <div className='text-right'>\r\n                  <ButtonGroup>\r\n                     <Button size='sm' onClick={this.clearForm}>\r\n                        Clear\r\n                     </Button>\r\n                     <Button color='primary' size='sm' onClick={this.onSubmit}>\r\n                        Add\r\n                     </Button>\r\n                  </ButtonGroup>\r\n               </div>\r\n            </Form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}