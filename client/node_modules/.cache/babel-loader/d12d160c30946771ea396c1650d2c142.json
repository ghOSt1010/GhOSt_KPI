{"ast":null,"code":"import _objectWithoutProperties from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/Routes/PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Auth from '../Modules/Auth/Auth';\nexport default function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  //const { layout: Layout, component: Component, ...rest } = this.props;\n  return (// Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    React.createElement(Route, Object.assign({}, rest, {\n      render: function render(props) {\n        return Auth.isUserAuthenticated() ? React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }))\n  );\n}\n/*const PrivateRoute = ({ component: Component, ...rest }) => {\r\n   return (\r\n      // Show the component only when the user is logged in\r\n      // Otherwise, redirect the user to /signin page\r\n      <Route\r\n         {...rest}\r\n         render={props =>\r\n            Auth.isUserAuthenticated() ? (\r\n               <Component {...props} />\r\n            ) : (\r\n               <Redirect to='/login' />\r\n            )\r\n         }\r\n      />\r\n   );\r\n};\r\n*/","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/Routes/PrivateRoute.jsx"],"names":["React","Route","Redirect","Auth","PrivateRoute","Component","component","rest","props","isUserAuthenticated"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,eAAe,SAASC,YAAT,OAAyD;AAAA,MAAtBC,SAAsB,QAAjCC,SAAiC;AAAA,MAARC,IAAQ;;AACrE;AAEA,SACG;AACA;AACA,wBAAC,KAAD,oBACOA,IADP;AAEG,MAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,eACVL,IAAI,CAACM,mBAAL,KACG,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADH,GAGG,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJO;AAAA,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHH;AAcF;AAED","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Auth from '../Modules/Auth/Auth';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n   //const { layout: Layout, component: Component, ...rest } = this.props;\r\n\r\n   return (\r\n      // Show the component only when the user is logged in\r\n      // Otherwise, redirect the user to /signin page\r\n      <Route\r\n         {...rest}\r\n         render={props =>\r\n            Auth.isUserAuthenticated() ? (\r\n               <Component {...props} />\r\n            ) : (\r\n               <Redirect to='/login' />\r\n            )\r\n         }\r\n      />\r\n   );\r\n}\r\n\r\n/*const PrivateRoute = ({ component: Component, ...rest }) => {\r\n   return (\r\n      // Show the component only when the user is logged in\r\n      // Otherwise, redirect the user to /signin page\r\n      <Route\r\n         {...rest}\r\n         render={props =>\r\n            Auth.isUserAuthenticated() ? (\r\n               <Component {...props} />\r\n            ) : (\r\n               <Redirect to='/login' />\r\n            )\r\n         }\r\n      />\r\n   );\r\n};\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}