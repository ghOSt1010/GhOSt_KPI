{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/EmployeesTable.jsx\";\nimport React, { Component } from 'react';\nimport { HTMLTable, Button, NonIdealState, H5, Spinner, Card, Icon } from '@blueprintjs/core';\n\nvar employeesTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(employeesTable, _Component);\n\n  function employeesTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, employeesTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(employeesTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      errorMsg: '',\n      showEditCard: false,\n      employeeForEdit: {},\n      selected: ''\n    };\n    return _this;\n  }\n\n  _createClass(employeesTable, [{\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"text-center pl-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Employee Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Is employee\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"employee Type\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Project\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Team\")));\n    }\n  }, {\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.renderTableRows());\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      var _this2 = this;\n\n      var data = this.props.data;\n      return data.map(function (employee, key) {\n        return React.createElement(\"tr\", {\n          key: employee._id,\n          onClick: function onClick(e) {\n            return _this2.handleSelection(e, employee);\n          },\n          className: \"pl-2 \".concat(_this2.state.selected._id === employee._id ? 'bg-selected' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"text-center pl-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, key), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, employee.name), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, employee.email), React.createElement(\"th\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, employee.user !== null ? React.createElement(Icon, {\n          icon: \"tick\",\n          intent: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }) : React.createElement(Icon, {\n          icon: \"small-cross\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        })), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, employee.type.name), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, employee.project.name), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, employee.team.name));\n      });\n    }\n  }, {\n    key: \"handleSelection\",\n    value: function handleSelection(e, employee) {\n      e.preventDefault();\n      this.props.onSelection(employee, false);\n      this.setState({\n        selected: employee\n      });\n    }\n  }, {\n    key: \"renderNonIdealState\",\n    value: function renderNonIdealState(header, information) {\n      var _this3 = this;\n\n      return React.createElement(NonIdealState, {\n        icon: \"issue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(H5, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, header)), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, information), React.createElement(Button, {\n        icon: \"refresh\",\n        minimal: true,\n        onClick: function onClick() {\n          _this3.props.onRefresh();\n\n          _this3.setState({\n            errorMsg: ''\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      if (this.state.errorMsg) {\n        this.renderNonIdealState('Something went wrong', 'Cannot load employees table');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"overflow-x-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(HTMLTable, {\n        fill: \"true\",\n        striped: true,\n        condensed: true,\n        interactive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.renderTableHeader(), this.renderTableBody()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.props.isLoading;\n\n      if (isLoading) {\n        return React.createElement(Spinner, {\n          intent: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Card, {\n        elevation: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.renderContent());\n    }\n  }]);\n\n  return employeesTable;\n}(Component);\n\nexport { employeesTable as default };\nemployeesTable.defaultProps = {\n  data: [],\n  onRefresh: function onRefresh() {\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/EmployeesTable.jsx"],"names":["React","Component","HTMLTable","Button","NonIdealState","H5","Spinner","Card","Icon","employeesTable","state","errorMsg","showEditCard","employeeForEdit","selected","renderTableRows","data","props","map","employee","key","_id","e","handleSelection","name","email","user","type","project","team","preventDefault","onSelection","setState","header","information","onRefresh","renderNonIdealState","renderTableHeader","renderTableBody","isLoading","renderContent","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n   HTMLTable,\n   Button,\n   NonIdealState,\n   H5,\n   Spinner,\n   Card,\n   Icon\n} from '@blueprintjs/core';\n\nexport default class employeesTable extends Component {\n   state = {\n      errorMsg: '',\n      showEditCard: false,\n      employeeForEdit: {},\n      selected: ''\n   };\n\n   renderTableHeader() {\n      return (\n         <thead>\n            <tr>\n               <th className='text-center pl-3'>#</th>\n               <th>Employee Name</th>\n               <th>Email</th>\n               <th className='text-center'>Is employee</th>\n               <th>employee Type</th>\n               <th>Project</th>\n               <th>Team</th>\n            </tr>\n         </thead>\n      );\n   }\n   renderTableBody() {\n      return <tbody>{this.renderTableRows()}</tbody>;\n   }\n   renderTableRows() {\n      const { data } = this.props;\n      return data.map((employee, key) => {\n         return (\n            <tr\n               key={employee._id}\n               onClick={e => this.handleSelection(e, employee)}\n               className={`pl-2 ${\n                  this.state.selected._id === employee._id ? 'bg-selected' : ''\n               }`}\n            >\n               <td className='text-center pl-3'>{key}</td>\n               <th>{employee.name}</th>\n               <th>{employee.email}</th>\n               <th className='text-center'>\n                  {employee.user !== null ? (\n                     <Icon icon='tick' intent='success' />\n                  ) : (\n                     <Icon icon='small-cross' />\n                  )}\n               </th>\n               <th>{employee.type.name}</th>\n               <th>{employee.project.name}</th>\n               <th>{employee.team.name}</th>\n            </tr>\n         );\n      });\n   }\n\n   handleSelection(e, employee) {\n      e.preventDefault();\n      this.props.onSelection(employee, false);\n      this.setState({\n         selected: employee\n      });\n   }\n\n   renderNonIdealState(header, information) {\n      return (\n         <NonIdealState icon='issue'>\n            <H5>\n               <strong>{header}</strong>\n            </H5>\n            <i>{information}</i>\n            <Button\n               icon='refresh'\n               minimal\n               onClick={() => {\n                  this.props.onRefresh();\n                  this.setState({\n                     errorMsg: ''\n                  });\n               }}\n            ></Button>\n         </NonIdealState>\n      );\n   }\n\n   renderContent() {\n      if (this.state.errorMsg) {\n         this.renderNonIdealState(\n            'Something went wrong',\n            'Cannot load employees table'\n         );\n      }\n\n      return (\n         <div className='overflow-x-scroll'>\n            <HTMLTable fill='true' striped condensed interactive>\n               {this.renderTableHeader()}\n               {this.renderTableBody()}\n            </HTMLTable>\n         </div>\n      );\n   }\n   render() {\n      const { isLoading } = this.props;\n\n      if (isLoading) {\n         return <Spinner intent='primary'></Spinner>;\n      }\n      return <Card elevation='2'>{this.renderContent()}</Card>;\n   }\n}\nemployeesTable.defaultProps = {\n   data: [],\n   onRefresh: function() {\n      return;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}