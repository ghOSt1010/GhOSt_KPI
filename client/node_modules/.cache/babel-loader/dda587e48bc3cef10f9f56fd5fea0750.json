{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/KPIsTable.jsx\";\nimport React, { Component } from 'react';\nimport { HTMLTable, Button, NonIdealState, H5, Spinner, Card } from '@blueprintjs/core';\n\nvar KPIsTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(KPIsTable, _Component);\n\n  function KPIsTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, KPIsTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(KPIsTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      errorMsg: '',\n      showEditCard: false,\n      kpiForEdit: {},\n      selected: ''\n    };\n    return _this;\n  }\n\n  _createClass(KPIsTable, [{\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"text-center pl-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"KPI Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Valid From\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Valid Until\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Target\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Project\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Manager\")));\n    }\n  }, {\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.renderTableRows());\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      var _this2 = this;\n\n      var data = this.props.data;\n      return data.map(function (kpi, key) {\n        return React.createElement(\"tr\", {\n          key: kpi._id,\n          onClick: function onClick(e) {\n            return _this2.handleSelection(e, kpi);\n          },\n          className: \"pl-2 \".concat(_this2.state.selected._id === kpi._id ? 'bg-selected' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"text-center pl-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, key), React.createElement(\"td\", {\n          style: {\n            paddingLeft: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, kpi.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, new Date(kpi.time_from).toLocaleDateString()), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, new Date(kpi.time_to).toLocaleDateString()), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, kpi.target), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, kpi.project.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, kpi.manager.name));\n      });\n    }\n  }, {\n    key: \"handleSelection\",\n    value: function handleSelection(e, kpi) {\n      e.preventDefault();\n      this.props.onSelection(kpi, false);\n      this.setState({\n        selected: kpi\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this3 = this;\n\n      if (this.state.errorMsg) {\n        return React.createElement(NonIdealState, {\n          icon: \"issue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(H5, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Something went wrong\")), React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Cannot load KPIs table\"), React.createElement(Button, {\n          icon: \"refresh\",\n          minimal: true,\n          onClick: function onClick() {\n            _this3.props.onRefresh();\n\n            _this3.setState({\n              errorMsg: ''\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }));\n      }\n\n      if (this.props.isEmpty) {\n        return React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(NonIdealState, {\n          icon: \"issue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(H5, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"There are no KPIs in database\")), React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"-----\"), React.createElement(Button, {\n          icon: \"refresh\",\n          minimal: true,\n          onClick: function onClick() {\n            _this3.props.onRefresh();\n\n            _this3.setState({\n              errorMsg: ''\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"overflow-x-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(HTMLTable, {\n        fill: \"true\",\n        striped: true,\n        condensed: true,\n        interactive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.renderTableHeader(), this.renderTableBody()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.props.isLoading;\n\n      if (isLoading) {\n        return React.createElement(Spinner, {\n          intent: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Card, {\n        elevation: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.renderContent());\n    }\n  }]);\n\n  return KPIsTable;\n}(Component);\n\nexport { KPIsTable as default };\nKPIsTable.defaultProps = {\n  data: [],\n  onRefresh: function onRefresh() {\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/KPIsTable.jsx"],"names":["React","Component","HTMLTable","Button","NonIdealState","H5","Spinner","Card","KPIsTable","state","errorMsg","showEditCard","kpiForEdit","selected","renderTableRows","data","props","map","kpi","key","_id","e","handleSelection","paddingLeft","name","Date","time_from","toLocaleDateString","time_to","target","project","manager","preventDefault","onSelection","setState","onRefresh","isEmpty","renderTableHeader","renderTableBody","isLoading","renderContent","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n   HTMLTable,\n   Button,\n   NonIdealState,\n   H5,\n   Spinner,\n   Card\n} from '@blueprintjs/core';\n\nexport default class KPIsTable extends Component {\n   state = {\n      errorMsg: '',\n      showEditCard: false,\n      kpiForEdit: {},\n      selected: ''\n   };\n\n   renderTableHeader() {\n      return (\n         <thead>\n            <tr>\n               <th className='text-center pl-3'>#</th>\n               <th>KPI Name</th>\n               <th>Valid From</th>\n               <th>Valid Until</th>\n               <th className='text-center'>Target</th>\n               <th>Project</th>\n               <th>Manager</th>\n            </tr>\n         </thead>\n      );\n   }\n   renderTableBody() {\n      return <tbody>{this.renderTableRows()}</tbody>;\n   }\n   renderTableRows() {\n      const { data } = this.props;\n      return data.map((kpi, key) => {\n         return (\n            <tr\n               key={kpi._id}\n               onClick={e => this.handleSelection(e, kpi)}\n               className={`pl-2 ${\n                  this.state.selected._id === kpi._id ? 'bg-selected' : ''\n               }`}\n            >\n               <td className='text-center pl-3'>{key}</td>\n               <td style={{ paddingLeft: '20px' }}>{kpi.name}</td>\n               <td>{new Date(kpi.time_from).toLocaleDateString()}</td>\n               <td>{new Date(kpi.time_to).toLocaleDateString()}</td>\n               <td className='text-center'>{kpi.target}</td>\n               <td>{kpi.project.name}</td>\n               <td>{kpi.manager.name}</td>\n            </tr>\n         );\n      });\n   }\n\n   handleSelection(e, kpi) {\n      e.preventDefault();\n      this.props.onSelection(kpi, false);\n      this.setState({\n         selected: kpi\n      });\n   }\n\n   renderContent() {\n      if (this.state.errorMsg) {\n         return (\n            <NonIdealState icon='issue'>\n               <H5>\n                  <strong>Something went wrong</strong>\n               </H5>\n               <i>Cannot load KPIs table</i>\n               <Button\n                  icon='refresh'\n                  minimal\n                  onClick={() => {\n                     this.props.onRefresh();\n                     this.setState({\n                        errorMsg: ''\n                     });\n                  }}\n               ></Button>\n            </NonIdealState>\n         );\n      }\n      if (this.props.isEmpty) {\n         return (\n            <div className='card-body'>\n               <NonIdealState icon='issue'>\n                  <H5>\n                     <strong>There are no KPIs in database</strong>\n                  </H5>\n                  <i>-----</i>\n                  <Button\n                     icon='refresh'\n                     minimal\n                     onClick={() => {\n                        this.props.onRefresh();\n                        this.setState({\n                           errorMsg: ''\n                        });\n                     }}\n                  ></Button>\n               </NonIdealState>\n            </div>\n         );\n      }\n      return (\n         <div className='overflow-x-scroll'>\n            <HTMLTable fill='true' striped condensed interactive>\n               {this.renderTableHeader()}\n               {this.renderTableBody()}\n            </HTMLTable>\n         </div>\n      );\n   }\n   render() {\n      const { isLoading } = this.props;\n\n      if (isLoading) {\n         return <Spinner intent='primary'></Spinner>;\n      }\n      return <Card elevation='2'>{this.renderContent()}</Card>;\n   }\n}\nKPIsTable.defaultProps = {\n   data: [],\n   onRefresh: function() {\n      return;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}