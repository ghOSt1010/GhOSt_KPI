{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Selects/LanguageOptions.jsx\";\nimport React, { Component } from 'react';\nimport { HTMLSelect } from '@blueprintjs/core';\nimport Client from '../../Modules/Client/Client';\n\nvar LanguageOptions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LanguageOptions, _Component);\n\n  function LanguageOptions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LanguageOptions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LanguageOptions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      option: '',\n      options: []\n    };\n    return _this;\n  }\n\n  _createClass(LanguageOptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getOptions();\n    }\n  }, {\n    key: \"getOptions\",\n    value: function () {\n      var _getOptions = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return Client.Services.LanguageService.getLanguages();\n\n              case 3:\n                result = _context.sent;\n                this.setState({\n                  options: result.data\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                this.setState({\n                  options: new Array('N/A')\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function getOptions() {\n        return _getOptions.apply(this, arguments);\n      }\n\n      return getOptions;\n    }()\n  }, {\n    key: \"renderOptions\",\n    value: function renderOptions() {\n      if (this.state.options) {\n        return this.state.options.map(function (option, key) {\n          return React.createElement(\"option\", {\n            key: key,\n            value: option._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, option.language);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(HTMLSelect, {\n        id: this.props.id,\n        ref: this.props.ref,\n        onChange: this.props.onChange,\n        disabled: this.props.disabled,\n        fill: this.props.fill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        hidden: true,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.placeholder), this.renderOptions());\n    }\n  }]);\n\n  return LanguageOptions;\n}(Component);\n\nexport { LanguageOptions as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Selects/LanguageOptions.jsx"],"names":["React","Component","HTMLSelect","Client","LanguageOptions","state","option","options","getOptions","Services","LanguageService","getLanguages","result","setState","data","Array","map","key","_id","language","props","id","ref","onChange","disabled","fill","placeholder","renderOptions"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;IAEqBC,e;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,OAAO,EAAE;AAFJ,K;;;;;;wCAKY;AACjB,WAAKC,UAAL;AACF;;;;;;;;;;;;;;uBAIwBL,MAAM,CAACM,QAAP,CAAgBC,eAAhB,CAAgCC,YAAhC,E;;;AAAfC,gBAAAA,M;AACJ,qBAAKC,QAAL,CAAc;AACXN,kBAAAA,OAAO,EAAEK,MAAM,CAACE;AADL,iBAAd;;;;;;;AAIA,qBAAKD,QAAL,CAAc;AACXN,kBAAAA,OAAO,EAAE,IAAIQ,KAAJ,CAAU,KAAV;AADE,iBAAd;;;;;;;;;;;;;;;;;;oCAMU;AACb,UAAI,KAAKV,KAAL,CAAWE,OAAf,EAAwB;AACrB,eAAO,KAAKF,KAAL,CAAWE,OAAX,CAAmBS,GAAnB,CAAuB,UAACV,MAAD,EAASW,GAAT,EAAiB;AAC5C,iBACG;AAAQ,YAAA,GAAG,EAAEA,GAAb;AAAkB,YAAA,KAAK,EAAEX,MAAM,CAACY,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACIZ,MAAM,CAACa,QADX,CADH;AAKF,SANM,CAAP;AAOF;AACH;;;6BAEQ;AACN,aACG,oBAAC,UAAD;AACG,QAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,EADlB;AAEG,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,GAFnB;AAGG,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAHxB;AAIG,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAJxB;AAKG,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,IALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,MAAM,MAAvB;AAAwB,QAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKL,KAAL,CAAWM,WADf,CAPH,EAUI,KAAKC,aAAL,EAVJ,CADH;AAcF;;;;EAlDyC1B,S;;SAAxBG,e","sourcesContent":["import React, { Component } from 'react';\r\nimport { HTMLSelect } from '@blueprintjs/core';\r\nimport Client from '../../Modules/Client/Client';\r\n\r\nexport default class LanguageOptions extends Component {\r\n   state = {\r\n      option: '',\r\n      options: []\r\n   };\r\n\r\n   componentDidMount() {\r\n      this.getOptions();\r\n   }\r\n\r\n   async getOptions() {\r\n      try {\r\n         var result = await Client.Services.LanguageService.getLanguages();\r\n         this.setState({\r\n            options: result.data\r\n         });\r\n      } catch (err) {\r\n         this.setState({\r\n            options: new Array('N/A')\r\n         });\r\n      }\r\n   }\r\n\r\n   renderOptions() {\r\n      if (this.state.options) {\r\n         return this.state.options.map((option, key) => {\r\n            return (\r\n               <option key={key} value={option._id}>\r\n                  {option.language}\r\n               </option>\r\n            );\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <HTMLSelect\r\n            id={this.props.id}\r\n            ref={this.props.ref}\r\n            onChange={this.props.onChange}\r\n            disabled={this.props.disabled}\r\n            fill={this.props.fill}\r\n         >\r\n            <option selected hidden disabled>\r\n               {this.props.placeholder}\r\n            </option>\r\n            {this.renderOptions()}\r\n         </HTMLSelect>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}