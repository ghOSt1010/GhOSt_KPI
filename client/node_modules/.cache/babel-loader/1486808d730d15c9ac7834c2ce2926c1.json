{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Teams/Teams.jsx\";\nimport React, { Component } from 'react';\nimport { Tabs, Tab, H2, Alert, Portal, H5, Classes } from '@blueprintjs/core';\nimport TeamsTable from '../../components/Tables/TeamsTable';\nimport ProjectDialog from '../../components/Dialogs/ProjectDialog';\nimport Client from '../../Modules/Client/Client';\nimport TableControllers from '../../components/Tables/TableControllers';\n\nvar Teams =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Teams, _Component);\n\n  function Teams() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Teams);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Teams)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTabID: 'Teams',\n      selectedTabId: 'Teams',\n      isLoading: true,\n      data: [],\n      openAlert: true,\n      errorMessage: '',\n      isAddDialogOpen: false,\n      isEditDialogOpen: false,\n      isDeleteAlertOpen: false,\n      canEdit: !false,\n      canDelete: !false,\n      name: '',\n      manager: '',\n      selected: {}\n    };\n\n    _this.getSelected = function (sel, isSelected) {\n      _this.setState({\n        selected: sel,\n        canEdit: isSelected,\n        canDelete: isSelected\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, name, manager, errorMsg, project, result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, name = _this$state.name, manager = _this$state.manager;\n                errorMsg = 'Unknown Error';\n                _context.next = 5;\n                return Client.Services.ProjectsService.createProjectDTO(name, manager);\n\n              case 5:\n                project = _context.sent;\n                _context.prev = 6;\n                _context.next = 9;\n                return Client.Services.ProjectsService.saveProject(project);\n\n              case 9:\n                result = _context.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success(\"Project \".concat(name, \" successfully saved\"));\n\n                  _this.getData();\n                }\n\n                _context.next = 18;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](6);\n\n                if (_context.t0.response.status === 409) {\n                  errorMsg = \"Error: \".concat(_context.t0.response.data.message);\n                  Client.Notifications.alert(errorMsg);\n                }\n\n                if (_context.t0.response.status !== 409) {\n                  errorMsg = \"Error:  while saving: \".concat(name, \" Project\");\n                  Client.Notifications.error(errorMsg);\n                }\n\n                _this.openAlert(errorMsg);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleUpdate =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var _this$state2, name, manager, selected, errorMsg, project, result;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _this$state2 = _this.state, name = _this$state2.name, manager = _this$state2.manager, selected = _this$state2.selected;\n                errorMsg = 'Unknown Error';\n                _context2.prev = 3;\n                _context2.next = 6;\n                return Client.Services.ProjectsService.createProjectDTO(name, manager);\n\n              case 6:\n                project = _context2.sent;\n                project.project._id = selected._id;\n                _context2.next = 10;\n                return Client.Services.ProjectsService.updateProject(project);\n\n              case 10:\n                result = _context2.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success(\"Project \".concat(name, \" successfully saved\"));\n\n                  _this.getData();\n\n                  console.log(result.data.employee);\n                }\n\n                _context2.next = 19;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](3);\n\n                if (_context2.t0.response.status === 409) {\n                  errorMsg = \"Error: \".concat(_context2.t0.response.data.message);\n                  Client.Notifications.alert(errorMsg);\n                }\n\n                if (_context2.t0.response.status !== 409) {\n                  errorMsg = \"Error:  while saving: \".concat(name, \" project\");\n                  Client.Notifications.error(errorMsg);\n                }\n\n                _this.openAlert(errorMsg);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 14]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.id] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.openEditDialog =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var selected, errorMsg, result, project;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                e.preventDefault();\n                selected = _this.state.selected;\n                errorMsg = 'Unknown Error';\n                _context3.prev = 3;\n                _context3.next = 6;\n                return Client.Services.ProjectsService.getProjectById(selected._id);\n\n              case 6:\n                result = _context3.sent;\n\n                if (result.status === 200) {\n                  project = result.data;\n\n                  _this.setState({\n                    isEditDialogOpen: true,\n                    name: project.name,\n                    manager: project.manager._id\n                  });\n                }\n\n                _context3.next = 14;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.log(_context3.t0);\n\n                _this.setState({\n                  isEditDialogOpen: true,\n                  name: selected.name,\n                  manager: selected.manager._id\n                });\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[3, 10]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleTabChange = function (activeTabID) {\n      _this.setState({\n        activeTabID: activeTabID,\n        selectedTabId: activeTabID\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Teams, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.setLoading(true);\n                _context4.prev = 1;\n                _context4.next = 4;\n                return Client.Services.TeamsService.getTeams();\n\n              case 4:\n                result = _context4.sent;\n                this.setState({\n                  data: result.data\n                });\n                _context4.next = 13;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](1);\n                alert(_context4.t0);\n                this.setState({\n                  errorMsg: _context4.t0.response\n                });\n                Client.Notifications.alert('Error while loading Teams list');\n\n              case 13:\n                _context4.prev = 13;\n                this.setLoading(false);\n                return _context4.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 8, 13, 16]]);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"deleteItem\",\n    value: function () {\n      var _deleteItem = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                this.resetErrorMsg();\n                _context5.next = 4;\n                return Client.Services.TeamsService.deleteTeamByID(id);\n\n              case 4:\n                result = _context5.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success('Item removed successfully');\n                }\n\n                _context5.next = 12;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](0);\n                this.setState({\n                  errorMsg: _context5.t0.response.status\n                });\n                Client.Notifications.alert('Error, cannot delete item');\n\n              case 12:\n                _context5.prev = 12;\n                this.getData();\n                this.closeDeleteAlert();\n                return _context5.finish(12);\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 8, 12, 16]]);\n      }));\n\n      function deleteItem(_x4) {\n        return _deleteItem.apply(this, arguments);\n      }\n\n      return deleteItem;\n    }()\n  }, {\n    key: \"openAlert\",\n    value: function openAlert(msg) {\n      this.setState({\n        isAlertOpen: true,\n        errorMessage: msg\n      });\n    }\n  }, {\n    key: \"closeAlert\",\n    value: function closeAlert() {\n      this.setState({\n        isAlertOpen: false,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"resetErrorMsg\",\n    value: function resetErrorMsg() {\n      this.setState({\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"openDialog\",\n    value: function openDialog() {\n      this.setState({\n        isAddDialogOpen: true\n      });\n    }\n  }, {\n    key: \"closeDialog\",\n    value: function closeDialog() {\n      this.setState({\n        isAddDialogOpen: false\n      });\n    }\n  }, {\n    key: \"closeEditDialog\",\n    value: function closeEditDialog() {\n      this.setState({\n        isEditDialogOpen: false\n      });\n    }\n  }, {\n    key: \"openDeleteAlert\",\n    value: function openDeleteAlert() {\n      this.setState({\n        isDeleteAlertOpen: true\n      });\n    }\n  }, {\n    key: \"closeDeleteAlert\",\n    value: function closeDeleteAlert() {\n      this.setState({\n        isDeleteAlertOpen: false\n      });\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(loading) {\n      this.setState({\n        isLoading: loading\n      });\n    }\n  }, {\n    key: \"clearForm\",\n    value: function clearForm() {\n      this.setState({\n        name: '',\n        manager: '',\n        isAlertOpen: false,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"renderControlls\",\n    value: function renderControlls() {\n      var _this2 = this;\n\n      if (this.state.selectedTabId === 'Teams') {\n        return React.createElement(TableControllers, {\n          onEdit: this.openEditDialog,\n          canEdit: this.state.canEdit,\n          onAdd: function onAdd() {\n            return _this2.openDialog();\n          },\n          onDelete: function onDelete() {\n            return _this2.openDeleteAlert();\n          },\n          canDelete: this.state.canDelete,\n          onRefresh: function onRefresh() {\n            return _this2.getData();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          data = _this$state3.data,\n          isLoading = _this$state3.isLoading,\n          name = _this$state3.name,\n          manager = _this$state3.manager,\n          isAlertOpen = _this$state3.isAlertOpen,\n          selected = _this$state3.selected;\n      return React.createElement(\"div\", {\n        id: \"ProjectsPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(H2, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Teams Panel\")), React.createElement(Tabs, {\n        onChange: this.handleTabChange,\n        selectedTabId: this.state.selectedTabId,\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        id: \"Teams\",\n        title: \"Teams\",\n        panel: React.createElement(TeamsTable, {\n          data: data,\n          onRefresh: function onRefresh() {\n            return _this3.getData();\n          },\n          isLoading: isLoading,\n          onSelection: this.getSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(Tabs.Expander, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), this.renderControlls()), React.createElement(ProjectDialog, {\n        isOpen: this.state.isEditDialogOpen,\n        toOpen: function toOpen() {\n          return _this3.openEditDialog();\n        },\n        toClose: function toClose() {\n          return _this3.closeEditDialog();\n        },\n        name: name,\n        manager: manager,\n        selectedManager: manager,\n        onChange: this.onChange,\n        handleSubmit: this.handleUpdate,\n        buttonCaption: \"Update\",\n        onClear: function onClear() {\n          return _this3.clearForm();\n        },\n        isAlertOpen: isAlertOpen,\n        closeAlert: function closeAlert() {\n          return _this3.closeAlert();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(ProjectDialog, {\n        isOpen: this.state.isAddDialogOpen,\n        toOpen: function toOpen() {\n          return _this3.openDialog();\n        },\n        toClose: function toClose() {\n          return _this3.closeDialog();\n        },\n        name: name,\n        manager: manager,\n        onChange: this.onChange,\n        handleSubmit: this.handleSubmit,\n        buttonCaption: \"Add\",\n        onClear: function onClear() {\n          return _this3.clearForm();\n        },\n        isAlertOpen: isAlertOpen,\n        closeAlert: function closeAlert() {\n          return _this3.closeAlert();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), React.createElement(Alert, {\n        isOpen: this.state.isDeleteAlertOpen,\n        confirmButtonText: \"Delete\",\n        onConfirm: function onConfirm() {\n          return _this3.deleteItem(selected._id);\n        },\n        cancelButtonText: \"Cancel\",\n        onCancel: function onCancel() {\n          return _this3.closeDeleteAlert();\n        },\n        intent: \"danger\",\n        icon: \"issue\",\n        ussePortal: React.createElement(Portal, {\n          container: document.getElementById('AdminPanel'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(H5, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Are you sure that you want to delete this user?\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Team: \".concat(selected.name)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        className: Classes.TEXT_MUTED,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Will be permanentyly deleted...\")));\n    }\n  }]);\n\n  return Teams;\n}(Component);\n\nexport { Teams as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Teams/Teams.jsx"],"names":["React","Component","Tabs","Tab","H2","Alert","Portal","H5","Classes","TeamsTable","ProjectDialog","Client","TableControllers","Teams","state","activeTabID","selectedTabId","isLoading","data","openAlert","errorMessage","isAddDialogOpen","isEditDialogOpen","isDeleteAlertOpen","canEdit","canDelete","name","manager","selected","getSelected","sel","isSelected","setState","handleSubmit","e","preventDefault","errorMsg","Services","ProjectsService","createProjectDTO","project","saveProject","result","status","Notifications","success","getData","response","message","alert","error","handleUpdate","_id","updateProject","console","log","employee","onChange","target","id","value","openEditDialog","getProjectById","handleTabChange","setLoading","TeamsService","getTeams","resetErrorMsg","deleteTeamByID","closeDeleteAlert","msg","isAlertOpen","loading","openDialog","openDeleteAlert","renderControlls","closeEditDialog","clearForm","closeAlert","closeDialog","deleteItem","document","getElementById","TEXT_MUTED"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Tabs, Tab, H2, Alert, Portal, H5, Classes } from '@blueprintjs/core';\nimport TeamsTable from '../../components/Tables/TeamsTable';\nimport ProjectDialog from '../../components/Dialogs/ProjectDialog';\nimport Client from '../../Modules/Client/Client';\nimport TableControllers from '../../components/Tables/TableControllers';\n\nexport default class Teams extends Component {\n   state = {\n      activeTabID: 'Teams',\n      selectedTabId: 'Teams',\n      isLoading: true,\n      data: [],\n      openAlert: true,\n      errorMessage: '',\n      isAddDialogOpen: false,\n      isEditDialogOpen: false,\n      isDeleteAlertOpen: false,\n      canEdit: !false,\n      canDelete: !false,\n      name: '',\n      manager: '',\n      selected: {}\n   };\n\n   getSelected = (sel, isSelected) => {\n      this.setState({\n         selected: sel,\n         canEdit: isSelected,\n         canDelete: isSelected\n      });\n   };\n\n   componentDidMount() {\n      this.getData();\n   }\n\n   async getData() {\n      this.setLoading(true);\n      var result;\n      try {\n         //this.resetErrorMsg();\n         result = await Client.Services.TeamsService.getTeams();\n         this.setState({\n            data: result.data\n         });\n      } catch (err) {\n         alert(err);\n         this.setState({ errorMsg: err.response });\n         Client.Notifications.alert('Error while loading Teams list');\n      } finally {\n         this.setLoading(false);\n      }\n   }\n\n   async deleteItem(id) {\n      var result;\n      try {\n         this.resetErrorMsg();\n         result = await Client.Services.TeamsService.deleteTeamByID(id);\n         if (result.status === 200) {\n            Client.Notifications.success('Item removed successfully');\n         }\n      } catch (err) {\n         this.setState({ errorMsg: err.response.status });\n         Client.Notifications.alert('Error, cannot delete item');\n      } finally {\n         this.getData();\n         this.closeDeleteAlert();\n      }\n   }\n\n   handleSubmit = async e => {\n      e.preventDefault();\n      const { name, manager } = this.state;\n      var errorMsg = 'Unknown Error';\n      let project = await Client.Services.ProjectsService.createProjectDTO(\n         name,\n         manager\n      );\n      try {\n         let result = await Client.Services.ProjectsService.saveProject(\n            project\n         );\n         if (result.status === 200) {\n            Client.Notifications.success(`Project ${name} successfully saved`);\n            this.getData();\n         }\n      } catch (err) {\n         if (err.response.status === 409) {\n            errorMsg = `Error: ${err.response.data.message}`;\n            Client.Notifications.alert(errorMsg);\n         }\n         if (err.response.status !== 409) {\n            errorMsg = `Error:  while saving: ${name} Project`;\n            Client.Notifications.error(errorMsg);\n         }\n         this.openAlert(errorMsg);\n      }\n   };\n   handleUpdate = async e => {\n      e.preventDefault();\n      const { name, manager, selected } = this.state;\n\n      var errorMsg = 'Unknown Error';\n      try {\n         let project = await Client.Services.ProjectsService.createProjectDTO(\n            name,\n            manager\n         );\n         project.project._id = selected._id;\n         let result = await Client.Services.ProjectsService.updateProject(\n            project\n         );\n         if (result.status === 200) {\n            Client.Notifications.success(`Project ${name} successfully saved`);\n            this.getData();\n            console.log(result.data.employee);\n         }\n      } catch (err) {\n         if (err.response.status === 409) {\n            errorMsg = `Error: ${err.response.data.message}`;\n            Client.Notifications.alert(errorMsg);\n         }\n         if (err.response.status !== 409) {\n            errorMsg = `Error:  while saving: ${name} project`;\n            Client.Notifications.error(errorMsg);\n         }\n         this.openAlert(errorMsg);\n      }\n   };\n   openAlert(msg) {\n      this.setState({ isAlertOpen: true, errorMessage: msg });\n   }\n   closeAlert() {\n      this.setState({ isAlertOpen: false, errorMessage: '' });\n   }\n\n   resetErrorMsg() {\n      this.setState({ errorMessage: '' });\n   }\n\n   onChange = e => {\n      const state = this.state;\n      state[e.target.id] = e.target.value;\n      this.setState(state);\n   };\n\n   openDialog() {\n      this.setState({\n         isAddDialogOpen: true\n      });\n   }\n   closeDialog() {\n      this.setState({\n         isAddDialogOpen: false\n      });\n   }\n\n   openEditDialog = async e => {\n      e.preventDefault();\n      const { selected } = this.state;\n      var errorMsg = 'Unknown Error';\n      try {\n         let result = await Client.Services.ProjectsService.getProjectById(\n            selected._id\n         );\n         if (result.status === 200) {\n            let project = result.data;\n            this.setState({\n               isEditDialogOpen: true,\n               name: project.name,\n               manager: project.manager._id\n            });\n         }\n      } catch (err) {\n         console.log(err);\n         this.setState({\n            isEditDialogOpen: true,\n            name: selected.name,\n            manager: selected.manager._id\n         });\n      }\n   };\n   closeEditDialog() {\n      this.setState({\n         isEditDialogOpen: false\n      });\n   }\n\n   openDeleteAlert() {\n      this.setState({\n         isDeleteAlertOpen: true\n      });\n   }\n   closeDeleteAlert() {\n      this.setState({\n         isDeleteAlertOpen: false\n      });\n   }\n\n   setLoading(loading) {\n      this.setState({\n         isLoading: loading\n      });\n   }\n\n   handleTabChange = activeTabID => {\n      this.setState({\n         activeTabID: activeTabID,\n         selectedTabId: activeTabID\n      });\n   };\n   clearForm() {\n      this.setState({\n         name: '',\n         manager: '',\n         isAlertOpen: false,\n         errorMessage: ''\n      });\n   }\n\n   renderControlls() {\n      if (this.state.selectedTabId === 'Teams') {\n         return (\n            <TableControllers\n               onEdit={this.openEditDialog}\n               canEdit={this.state.canEdit}\n               onAdd={() => this.openDialog()}\n               onDelete={() => this.openDeleteAlert()}\n               canDelete={this.state.canDelete}\n               onRefresh={() => this.getData()}\n            />\n         );\n      }\n   }\n\n   render() {\n      const {\n         data,\n         isLoading,\n         name,\n         manager,\n         isAlertOpen,\n         selected\n      } = this.state;\n\n      return (\n         <div id='ProjectsPanel'>\n            <div className='mt-2'>\n               <H2>Teams Panel</H2>\n            </div>\n            <Tabs\n               onChange={this.handleTabChange}\n               selectedTabId={this.state.selectedTabId}\n               large\n            >\n               <Tab\n                  id='Teams'\n                  title='Teams'\n                  panel={\n                     <TeamsTable\n                        data={data}\n                        onRefresh={() => this.getData()}\n                        isLoading={isLoading}\n                        onSelection={this.getSelected}\n                     />\n                  }\n               />\n               <Tabs.Expander />\n               {this.renderControlls()}\n            </Tabs>\n            <ProjectDialog\n               isOpen={this.state.isEditDialogOpen}\n               toOpen={() => this.openEditDialog()}\n               toClose={() => this.closeEditDialog()}\n               name={name}\n               manager={manager}\n               selectedManager={manager}\n               onChange={this.onChange}\n               handleSubmit={this.handleUpdate}\n               buttonCaption='Update'\n               onClear={() => this.clearForm()}\n               isAlertOpen={isAlertOpen}\n               closeAlert={() => this.closeAlert()}\n            />\n            <ProjectDialog\n               isOpen={this.state.isAddDialogOpen}\n               toOpen={() => this.openDialog()}\n               toClose={() => this.closeDialog()}\n               name={name}\n               manager={manager}\n               onChange={this.onChange}\n               handleSubmit={this.handleSubmit}\n               buttonCaption='Add'\n               onClear={() => this.clearForm()}\n               isAlertOpen={isAlertOpen}\n               closeAlert={() => this.closeAlert()}\n            />\n            <Alert\n               isOpen={this.state.isDeleteAlertOpen}\n               confirmButtonText='Delete'\n               onConfirm={() => this.deleteItem(selected._id)}\n               cancelButtonText='Cancel'\n               onCancel={() => this.closeDeleteAlert()}\n               intent='danger'\n               icon='issue'\n               ussePortal={\n                  <Portal container={document.getElementById('AdminPanel')} />\n               }\n            >\n               <H5>Are you sure that you want to delete this user?</H5>\n               <strong>{`Team: ${selected.name}`}</strong>\n               <p></p>\n               <strong\n                  className={Classes.TEXT_MUTED}\n               >{`Will be permanentyly deleted...`}</strong>\n            </Alert>\n         </div>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}