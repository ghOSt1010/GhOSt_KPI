{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n *    UIManager controls the user specific preferences in local storage\n *    ver:  0.0.1 \n *    info: init release\n */\nvar UIManager =\n/*#__PURE__*/\nfunction () {\n  function UIManager() {\n    _classCallCheck(this, UIManager);\n  }\n\n  _createClass(UIManager, null, [{\n    key: \"setTheme\",\n\n    /**\n     * Save user theme in local storage \n     * \n     * @param {String} theme \n     */\n    value: function setTheme(theme) {\n      localStorage.setItem(\"theme\", theme);\n    }\n    /**\n     * Get user theme from local storage and set default theme if no theme selected\n     */\n\n  }, {\n    key: \"getTheme\",\n    value: function getTheme() {\n      if (!this.isThemeSet()) this.setTheme(\"light\");\n      return localStorage.getItem(\"theme\");\n    }\n    /**\n     * Check if theme is saved in local storage\n     */\n\n  }, {\n    key: \"isThemeSet\",\n    value: function isThemeSet() {\n      return localStorage.getItem(\"theme\") !== null;\n    }\n  }]);\n\n  return UIManager;\n}();\n\nexport default UIManager;","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/Modules/UIManager/UIManager.js"],"names":["UIManager","theme","localStorage","setItem","isThemeSet","setTheme","getItem"],"mappings":";;;AAAA;;;;;IAMMA,S;;;;;;;;;;AAEH;;;;;6BAKgBC,K,EAAO;AACpBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACF;AAED;;;;;;+BAGkB;AACf,UAAI,CAAC,KAAKG,UAAL,EAAL,EAAwB,KAAKC,QAAL,CAAc,OAAd;AACxB,aAAOH,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAP;AACF;AAED;;;;;;iCAGoB;AACjB,aAAOJ,YAAY,CAACI,OAAb,CAAqB,OAArB,MAAkC,IAAzC;AACF;;;;;;AAIJ,eAAeN,SAAf","sourcesContent":["/**\n *    UIManager controls the user specific preferences in local storage\n *    ver:  0.0.1 \n *    info: init release\n */\n\nclass UIManager {\n\n   /**\n    * Save user theme in local storage \n    * \n    * @param {String} theme \n    */\n   static setTheme(theme) {\n      localStorage.setItem(\"theme\", theme);\n   }\n\n   /**\n    * Get user theme from local storage and set default theme if no theme selected\n    */\n   static getTheme() {\n      if (!this.isThemeSet()) this.setTheme(\"light\");\n      return localStorage.getItem(\"theme\");\n   }\n\n   /**\n    * Check if theme is saved in local storage\n    */\n   static isThemeSet() {\n      return localStorage.getItem(\"theme\") !== null;\n   }\n\n}\n\nexport default UIManager;\n"]},"metadata":{},"sourceType":"module"}