{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/ScoreCard/ScoreCard.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nvar ScoreCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScoreCard, _Component);\n\n  function ScoreCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScoreCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScoreCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: 'N/A',\n      proc: 0,\n      number: 0,\n      trend: 0,\n      bgColor: 'bg-c-white',\n      txtColor: 'text-gray'\n    };\n\n    _this.getTrendIcon = function (value) {\n      if (value < 0) return \" fas fa-arrow-alt-circle-down\";else if (value > 0) return \"fas fa-arrow-alt-circle-up\";else return \"fas fa-minus-circle\";\n    };\n\n    _this.getBgColor = function () {\n      if (_this.trend < 0) return \"bg-danger\";else if (_this.trend > 0) return \"bg-success\";else return 'bg-c-white';\n    };\n\n    return _this;\n  }\n\n  _createClass(ScoreCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          procValue = _this$props.procValue,\n          numberValue = _this$props.numberValue,\n          trend = _this$props.trend;\n      return React.createElement(\"div\", {\n        className: \"col-sm-2 col-xs-6 mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card bg-white txt-grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, title, React.createElement(\"span\", {\n        className: \"\".concat(this.getTrendIcon(trend), \" float-right\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        class: \"float-right text-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, procValue, \"%\")), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"float-right text-big\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, numberValue)))));\n    }\n  }]);\n\n  return ScoreCard;\n}(Component);\n\nexport { ScoreCard as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/ScoreCard/ScoreCard.jsx"],"names":["React","Component","ScoreCard","state","name","proc","number","trend","bgColor","txtColor","getTrendIcon","value","getBgColor","props","title","procValue","numberValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;;IAGqBC,S;;;;;;;;;;;;;;;;;UAElBC,K,GAAQ;AACLC,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,IAAI,EAAE,CAFD;AAGLC,MAAAA,MAAM,EAAE,CAHH;AAILC,MAAAA,KAAK,EAAE,CAJF;AAKLC,MAAAA,OAAO,EAAE,YALJ;AAMLC,MAAAA,QAAQ,EAAE;AANL,K;;UASRC,Y,GAAe,UAACC,KAAD,EAAU;AACtB,UAAGA,KAAK,GAAG,CAAX,EAAc,OAAO,+BAAP,CAAd,KACK,IAAIA,KAAK,GAAG,CAAZ,EAAe,OAAO,4BAAP,CAAf,KACA,OAAO,qBAAP;AACP,K;;UAEDC,U,GAAa,YAAM;AAChB,UAAG,MAAKL,KAAL,GAAa,CAAhB,EAAmB,OAAO,WAAP,CAAnB,KACK,IAAI,MAAKA,KAAL,GAAa,CAAjB,EAAoB,OAAO,YAAP,CAApB,KACA,OAAO,YAAP;AACP,K;;;;;;;6BAEQ;AAAA,wBAE0C,KAAKM,KAF/C;AAAA,UAEEC,KAFF,eAEEA,KAFF;AAAA,UAESC,SAFT,eAESA,SAFT;AAAA,UAEoBC,WAFpB,eAEoBA,WAFpB;AAAA,UAEiCT,KAFjC,eAEiCA,KAFjC;AAIN,aACG;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKO,KAAL,EACG;AAAM,QAAA,SAAS,YAAK,KAAKJ,YAAL,CAAkBH,KAAlB,CAAL,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAGG;AAAG,QAAA,KAAK,EAAC,qBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCQ,SAAhC,MAHH,CADH,EAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAEG;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwCC,WAAxC,CAFH,CANH,CADH,CADH,CADH;AAiBF;;;;EA5CmCf,S;;SAAlBC,S","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nexport default class ScoreCard extends Component {\n\n   state = {\n      name: 'N/A',\n      proc: 0,\n      number: 0,\n      trend: 0,\n      bgColor: 'bg-c-white',\n      txtColor: 'text-gray'\n   }\n\n   getTrendIcon = (value) =>{\n      if(value < 0) return \" fas fa-arrow-alt-circle-down\";\n      else if (value > 0) return \"fas fa-arrow-alt-circle-up\";\n      else return \"fas fa-minus-circle\"\n   }\n\n   getBgColor = () => {\n      if(this.trend < 0) return \"bg-danger\";\n      else if (this.trend > 0) return \"bg-success\";\n      else return 'bg-c-white';\n   }\n\n   render() {\n\n      const { title, procValue, numberValue, trend} = this.props;\n\n      return (\n         <div className=\"col-sm-2 col-xs-6 mt-4\" >\n            <div className=\"card bg-white txt-grey\">\n               <div className=\"card-body\">\n                  <h6>{title}\n                     <span className={`${this.getTrendIcon(trend)} float-right`}>\n                     </span>\n                     <b class=\"float-right text-sm\">{procValue}%</b>\n                  </h6>\n                  <h1>\n                     <span className=\"fa fa-users\"></span>\n                     <span className=\"float-right text-big\">{numberValue}</span>\n                  </h1>\n               </div>\n            </div>\n         </div>\n      )\n   }\n}\n"]},"metadata":{},"sourceType":"module"}