{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/Home/Home.jsx\";\nimport React, { Component } from 'react';\nimport { Row } from 'reactstrap';\nimport { Button } from '@blueprintjs/core';\nimport IconCard from './components/IconCard/IconCard';\nimport StdCard from '../../components/Card/StdCard';\nimport Client from '../../Modules/Client/Client';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      testResult: '',\n      testServiceResult: []\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//this.getUserData();\n    }\n  }, {\n    key: \"getUserData\",\n    value: function () {\n      var _getUserData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Client.testingCurrentUserAuth();\n\n              case 2:\n                result = _context.sent;\n                console.log(result);\n                this.setState({\n                  testResult: result\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getUserData() {\n        return _getUserData.apply(this, arguments);\n      }\n\n      return getUserData;\n    }()\n  }, {\n    key: \"testService\",\n    value: function () {\n      var _testService = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _r;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Client.Services.EmployeesService.getEmployees();\n\n              case 2:\n                _r = _context2.sent;\n                this.setState({\n                  testServiceResult: \"\".concat(_r[0].name, \"  \").concat(_r[0].email, \" \\n \").concat(_r[0]._id)\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function testService() {\n        return _testService.apply(this, arguments);\n      }\n\n      return testService;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(IconCard, {\n        icon: \"chart\",\n        theme: this.state.theme,\n        title: \"Dashboards\",\n        link: \"/Dashboards/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(IconCard, {\n        icon: \"projects\",\n        theme: this.state.theme,\n        title: \"Projects\",\n        link: \"/Projects/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(IconCard, {\n        icon: \"join-table\",\n        theme: this.state.theme,\n        title: \"Reports\",\n        link: \"/Reports/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(IconCard, {\n        icon: \"cog\",\n        theme: this.state.theme,\n        title: \"Admin Panel\",\n        link: \"AdminPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(StdCard, {\n        icon: \"info-sign\",\n        headerText: \"Project info\",\n        size: \"xl\",\n        isBodyOpen: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" Project info \"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"current version: 0.0.1\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Author: Rafal Cymbalista\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Test Authentication:\", ' ', React.createElement(Button, {\n        icon: this.state.testResult ? 'unlock' : 'lock',\n        minimal: true,\n        onClick: function onClick() {\n          return _this2.getUserData;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.testResult))), React.createElement(StdCard, {\n        headerText: \"test.serv\",\n        icon: \"play\",\n        isBodyOpen: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Testing Services \"), React.createElement(Button, {\n        icon: \"play\",\n        minimal: true,\n        intent: \"primary\",\n        onClick: function onClick() {\n          return _this2.testService;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.testServiceResult))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport { Home as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/Home/Home.jsx"],"names":["React","Component","Row","Button","IconCard","StdCard","Client","Home","state","testResult","testServiceResult","testingCurrentUserAuth","result","console","log","setState","Services","EmployeesService","getEmployees","_r","name","email","_id","theme","getUserData","testService"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row } from 'reactstrap';\nimport { Button } from '@blueprintjs/core';\nimport IconCard from './components/IconCard/IconCard';\nimport StdCard from '../../components/Card/StdCard';\nimport Client from '../../Modules/Client/Client';\n\nexport default class Home extends Component {\n   state = {\n      testResult: '',\n      testServiceResult: []\n   };\n   componentDidMount() {\n      //this.getUserData();\n   }\n\n   async getUserData() {\n      let result = await Client.testingCurrentUserAuth();\n      console.log(result);\n      this.setState({\n         testResult: result\n      });\n   }\n\n   async testService() {\n      let _r = await Client.Services.EmployeesService.getEmployees();\n      this.setState({\n         testServiceResult: `${_r[0].name}  ${_r[0].email} \\n ${_r[0]._id}`\n      });\n   }\n\n   render() {\n      return (\n         <div className='container-fluid'>\n            <Row>\n               <IconCard\n                  icon='chart'\n                  theme={this.state.theme}\n                  title='Dashboards'\n                  link='/Dashboards/'\n               />\n               <IconCard\n                  icon='projects'\n                  theme={this.state.theme}\n                  title='Projects'\n                  link='/Projects/'\n               />\n               <IconCard\n                  icon='join-table'\n                  theme={this.state.theme}\n                  title='Reports'\n                  link='/Reports/'\n               />\n               <IconCard\n                  icon='cog'\n                  theme={this.state.theme}\n                  title='Admin Panel'\n                  link='AdminPanel'\n               />\n            </Row>\n            <Row>\n               <StdCard\n                  icon='info-sign'\n                  headerText='Project info'\n                  size='xl'\n                  isBodyOpen={false}\n               >\n                  <h3> Project info </h3>\n                  <hr />\n                  <h5>current version: 0.0.1</h5>\n                  <hr />\n                  <h5>Author: Rafal Cymbalista</h5>\n\n                  <h5>\n                     Test Authentication:{' '}\n                     <Button\n                        icon={this.state.testResult ? 'unlock' : 'lock'}\n                        minimal\n                        onClick={() => this.getUserData}\n                     ></Button>\n                     <p>{this.state.testResult}</p>\n                  </h5>\n               </StdCard>\n               <StdCard headerText='test.serv' icon='play' isBodyOpen={false}>\n                  <h3>Testing Services </h3>\n                  <Button\n                     icon='play'\n                     minimal\n                     intent='primary'\n                     onClick={() => this.testService}\n                  />\n                  <p>{this.state.testServiceResult}</p>\n               </StdCard>\n            </Row>\n         </div>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}