{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/KPIsTable.jsx\";\nimport React, { Component } from 'react';\nimport Table from './Table';\nimport TableCell from './TableCell';\nimport TableHeaders from './TableHeaders';\n\nvar KPIsTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(KPIsTable, _Component);\n\n  function KPIsTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, KPIsTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(KPIsTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: '',\n      headers: [{\n        text: '#',\n        center: true\n      }, {\n        text: 'KPI'\n      }, {\n        text: 'Valid From'\n      }, {\n        text: 'Valid Until'\n      }, {\n        text: 'Target',\n        center: true\n      }, {\n        text: 'Project'\n      }, {\n        text: 'Manager'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(KPIsTable, [{\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      return React.createElement(TableHeaders, {\n        headers: this.state.headers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.renderTableRows());\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      var _this2 = this;\n\n      var data = this.props.data;\n      return data.map(function (kpi, key) {\n        return React.createElement(\"tr\", {\n          key: kpi._id,\n          onClick: function onClick(e) {\n            return _this2.handleSelection(e, kpi);\n          },\n          className: \"\".concat(_this2.state.selected._id === kpi._id ? 'bg-selected' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          key: key,\n          value: key,\n          center: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: kpi.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: new Date(kpi.time_from).toLocaleDateString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: new Date(kpi.time_to).toLocaleDateString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: kpi.target,\n          center: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: kpi.project.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          value: kpi.manager.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"handleSelection\",\n    value: function handleSelection(e, kpi) {\n      e.preventDefault();\n      var selected = this.state.selected;\n\n      if (selected._id !== kpi._id) {\n        this.props.onSelection(kpi, false);\n        this.setState({\n          selected: kpi\n        });\n        return;\n      }\n\n      this.props.onSelection({}, true);\n      this.setState({\n        selected: {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table, {\n        headers: this.state.headers,\n        rows: this.renderTableRows(),\n        errorMsg: this.props.errorMsg,\n        isLoading: this.props.isLoading,\n        onRefresh: this.props.onRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return KPIsTable;\n}(Component);\n\nexport { KPIsTable as default };\nKPIsTable.defaultProps = {\n  data: [],\n  onRefresh: function onRefresh() {\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/components/Tables/KPIsTable.jsx"],"names":["React","Component","Table","TableCell","TableHeaders","KPIsTable","state","selected","headers","text","center","renderTableRows","data","props","map","kpi","key","_id","e","handleSelection","name","Date","time_from","toLocaleDateString","time_to","target","project","manager","preventDefault","onSelection","setState","errorMsg","isLoading","onRefresh","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from './Table';\nimport TableCell from './TableCell';\nimport TableHeaders from './TableHeaders';\n\nexport default class KPIsTable extends Component {\n   state = {\n      selected: '',\n      headers: [\n         { text: '#', center: true },\n         { text: 'KPI' },\n         { text: 'Valid From' },\n         { text: 'Valid Until' },\n         { text: 'Target', center: true },\n         { text: 'Project' },\n         { text: 'Manager' }\n      ]\n   };\n\n   renderTableHeader() {\n      return <TableHeaders headers={this.state.headers} />;\n   }\n   renderTableBody() {\n      return <tbody>{this.renderTableRows()}</tbody>;\n   }\n   renderTableRows() {\n      const { data } = this.props;\n      return data.map((kpi, key) => {\n         return (\n            <tr\n               key={kpi._id}\n               onClick={e => this.handleSelection(e, kpi)}\n               className={`${\n                  this.state.selected._id === kpi._id ? 'bg-selected' : ''\n               }`}\n            >\n               <TableCell key={key} value={key} center />\n               <TableCell value={kpi.name} />\n               <TableCell\n                  value={new Date(kpi.time_from).toLocaleDateString()}\n               />\n               <TableCell value={new Date(kpi.time_to).toLocaleDateString()} />\n               <TableCell value={kpi.target} center />\n               <TableCell value={kpi.project.name} />\n               <TableCell value={kpi.manager.name} />\n            </tr>\n         );\n      });\n   }\n\n   handleSelection(e, kpi) {\n      e.preventDefault();\n      const { selected } = this.state;\n      if (selected._id !== kpi._id) {\n         this.props.onSelection(kpi, false);\n         this.setState({\n            selected: kpi\n         });\n         return;\n      }\n      this.props.onSelection({}, true);\n      this.setState({ selected: {} });\n   }\n\n   render() {\n      return (\n         <Table\n            headers={this.state.headers}\n            rows={this.renderTableRows()}\n            errorMsg={this.props.errorMsg}\n            isLoading={this.props.isLoading}\n            onRefresh={this.props.onRefresh}\n         />\n      );\n   }\n}\nKPIsTable.defaultProps = {\n   data: [],\n   onRefresh: function() {\n      return;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}