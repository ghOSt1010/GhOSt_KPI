{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/MainDashboard/MainDashboard.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { Row, TabContent, TabPane } from \"reactstrap\";\nimport TopBar from \"../Nav/TopBar/TopBar\";\nimport LeftBar from \"../Nav/LeftBar/LeftBar\";\nimport NavItem from \"../Nav/NavItem/NavItem\";\nimport QuickView from \"../QuickView/QuickView\";\nimport ReportControl from \"../ReportControl/ReportControl\";\nimport ChartCard from \"../Card/ChartCard/ChartCard\";\nimport StdCard from \"../Card/StdCard\";\nimport DataTable from \"../Table/DataTable\";\nimport InputTable from \"../Table/InputTable\";\nimport MainContainer from \"../MainContainer/MainContainer\";\nimport TeamTable from \"../Table/TeamTable/TeamTable\";\n\nvar testData = require(\"../../Data_OldStatic/old_data\");\n\nvar MainDashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainDashboard, _Component);\n\n  function MainDashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainDashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainDashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: \"dark\",\n      showReportFilter: false,\n      activeTab: \"1\"\n    };\n    _this.testd = testData;\n    _this.data = {\n      labels: _this.labels(),\n      datasets: [{\n        label: \"Data\",\n        backgroundColor: \"#4099ff\",\n        borderColor: \"#4099ff\",\n        data: _this.productivityData()\n      }]\n    };\n    _this.dataBar = {\n      labels: _this.labels(),\n      datasets: [{\n        label: \"Actual Productivity\",\n        backgroundColor: \"rgba(255,165,0,0.8)\",\n        data: _this.actualProductivityData()\n      }, {\n        label: \"Productivity\",\n        backgroundColor: \"rgba(0, 191, 255, 0.8)\",\n        data: _this.productivityData()\n      }]\n    };\n    _this.data_line = {\n      labels: _this.labels(),\n      datasets: [{\n        label: \"Actual Productivity\",\n        borderColor: \"rgba(0, 191, 255, 0.8)\",\n        backgroundColor: \"rgba(0,0,0,0)\",\n        data: _this.actualProductivityData()\n      }, {\n        label: \"Productivity\",\n        borderColor: \"rgba(255,165,0,0.8)\",\n        backgroundColor: \"rgba(0,0,0,0)\",\n        data: _this.productivityData()\n      }]\n    };\n    _this.dataRound = {\n      labels: [\"a\", \"b\"],\n      datasets: [{\n        label: \"Data\",\n        backgroundColor: [\"#4099ff\", \"#FFF3201\"],\n        borderColor: \"transparent\",\n        data: [90, 10]\n      }]\n    };\n\n    _this.switchShowReportFilter = function () {\n      _this.setState(function (state) {\n        return {\n          showReportFilter: !state.showReportFilter\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MainDashboard, [{\n    key: \"setBgByTheme\",\n    value: function setBgByTheme(theme) {\n      if (theme === \"dark\") {\n        return \"main-data-bg-dark\";\n      }\n\n      if (theme === \"light\") {\n        return \"main-data-bg-light\";\n      } else {\n        return \"main-data-bg-dark\";\n      }\n    }\n  }, {\n    key: \"switchTab\",\n    value: function switchTab(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"labels\",\n    value: function labels() {\n      return this.testd.map(function (P) {\n        return P.Project_Name;\n      });\n    }\n  }, {\n    key: \"productivityData\",\n    value: function productivityData() {\n      return this.testd.map(function (P) {\n        return P.TotalProductivity;\n      });\n    }\n  }, {\n    key: \"actualProductivityData\",\n    value: function actualProductivityData() {\n      return this.testd.map(function (P) {\n        return P.ActualProductivity;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(MainContainer, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(TopBar, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        icon: \"fas fa-filter\",\n        onClick: this.switchShowReportFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(LeftBar, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        icon: \"fa fa-signal\",\n        active: this.state.activeTab === \"1\",\n        onClick: function onClick() {\n          _this2.switchTab(\"1\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(NavItem, {\n        icon: \"fa fa-users\",\n        active: this.state.activeTab === \"2\",\n        onClick: function onClick() {\n          _this2.switchTab(\"2\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(NavItem, {\n        icon: \"fa fa-check-square \",\n        active: this.state.activeTab === \"3\",\n        onClick: function onClick() {\n          _this2.switchTab(\"3\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(ReportControl, {\n        theme: this.state.theme,\n        show: this.state.showReportFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(QuickView, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Bar\",\n        data: this.dataBar,\n        headerText: \"Graf\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Line\",\n        data: this.data_line,\n        headerText: \"Graf\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Line\",\n        data: this.data,\n        headerText: \"Line_test\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Bar\",\n        data: this.data,\n        headerText: \"Bar_test\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Pie\",\n        data: this.dataRound,\n        headerText: \"Pie Test\",\n        size: \"s\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Doughnut\",\n        data: this.dataRound,\n        headerText: \"Doughnut test\",\n        size: \"s\",\n        height: 300,\n        width: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"Radar\",\n        data: this.dataBar,\n        headerText: \"Radar test\",\n        height: 300,\n        width: 700,\n        size: \"s\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(ChartCard, {\n        theme: this.state.theme,\n        chartType: \"hBar\",\n        data: this.dataBar,\n        headerText: \"Horizontal Bar\",\n        height: 300,\n        width: 700,\n        size: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(ReportControl, {\n        theme: this.state.theme,\n        show: this.state.showReportFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(StdCard, {\n        theme: this.state.theme,\n        icon: \"fa fa-table\",\n        headerText: \"table _test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(InputTable, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), React.createElement(StdCard, {\n        theme: this.state.theme,\n        icon: \"fa fa-table\",\n        headerText: \"table _test\",\n        size: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(TeamTable, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return MainDashboard;\n}(Component);\n\nexport { MainDashboard as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/MainDashboard/MainDashboard.jsx"],"names":["React","Component","Row","TabContent","TabPane","TopBar","LeftBar","NavItem","QuickView","ReportControl","ChartCard","StdCard","DataTable","InputTable","MainContainer","TeamTable","testData","require","MainDashboard","state","theme","showReportFilter","activeTab","testd","data","labels","datasets","label","backgroundColor","borderColor","productivityData","dataBar","actualProductivityData","data_line","dataRound","switchShowReportFilter","setState","tab","map","P","Project_Name","TotalProductivity","ActualProductivity","switchTab"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\n\r\nimport { Row, TabContent, TabPane } from \"reactstrap\";\r\nimport TopBar from \"../Nav/TopBar/TopBar\";\r\nimport LeftBar from \"../Nav/LeftBar/LeftBar\";\r\nimport NavItem from \"../Nav/NavItem/NavItem\";\r\nimport QuickView from \"../QuickView/QuickView\";\r\nimport ReportControl from \"../ReportControl/ReportControl\";\r\nimport ChartCard from \"../Card/ChartCard/ChartCard\";\r\nimport StdCard from \"../Card/StdCard\";\r\nimport DataTable from \"../Table/DataTable\";\r\nimport InputTable from \"../Table/InputTable\";\r\nimport MainContainer from \"../MainContainer/MainContainer\";\r\nimport TeamTable from \"../Table/TeamTable/TeamTable\";\r\n\r\nconst testData = require(\"../../Data_OldStatic/old_data\");\r\nexport default class MainDashboard extends Component {\r\n   state = {\r\n      theme: \"dark\",\r\n      showReportFilter: false,\r\n      activeTab: \"1\"\r\n   };\r\n\r\n   setBgByTheme(theme) {\r\n      if (theme === \"dark\") {\r\n         return \"main-data-bg-dark\";\r\n      }\r\n      if (theme === \"light\") {\r\n         return \"main-data-bg-light\";\r\n      } else {\r\n         return \"main-data-bg-dark\";\r\n      }\r\n   }\r\n\r\n   switchTab(tab) {\r\n      if (this.state.activeTab !== tab) {\r\n         this.setState({\r\n            activeTab: tab\r\n         });\r\n      }\r\n   }\r\n\r\n   testd = testData;\r\n\r\n   labels() {\r\n      return this.testd.map(P => P.Project_Name);\r\n   }\r\n\r\n   productivityData() {\r\n      return this.testd.map(P => P.TotalProductivity);\r\n   }\r\n\r\n   actualProductivityData() {\r\n      return this.testd.map(P => P.ActualProductivity);\r\n   }\r\n\r\n   data = {\r\n      labels: this.labels(),\r\n      datasets: [\r\n         {\r\n            label: \"Data\",\r\n            backgroundColor: \"#4099ff\",\r\n            borderColor: \"#4099ff\",\r\n            data: this.productivityData()\r\n         }\r\n      ]\r\n   };\r\n   dataBar = {\r\n      labels: this.labels(),\r\n      datasets: [\r\n         {\r\n            label: \"Actual Productivity\",\r\n            backgroundColor: \"rgba(255,165,0,0.8)\",\r\n            data: this.actualProductivityData()\r\n         },\r\n         {\r\n            label: \"Productivity\",\r\n            backgroundColor: \"rgba(0, 191, 255, 0.8)\",\r\n            data: this.productivityData()\r\n         }\r\n      ]\r\n   };\r\n   data_line = {\r\n      labels: this.labels(),\r\n      datasets: [\r\n         {\r\n            label: \"Actual Productivity\",\r\n            borderColor: \"rgba(0, 191, 255, 0.8)\",\r\n            backgroundColor: \"rgba(0,0,0,0)\",\r\n            data: this.actualProductivityData()\r\n         },\r\n         {\r\n            label: \"Productivity\",\r\n            borderColor: \"rgba(255,165,0,0.8)\",\r\n            backgroundColor: \"rgba(0,0,0,0)\",\r\n            data: this.productivityData()\r\n         }\r\n      ]\r\n   };\r\n   dataRound = {\r\n      labels: [\"a\", \"b\"],\r\n      datasets: [\r\n         {\r\n            label: \"Data\",\r\n            backgroundColor: [\"#4099ff\", \"#FFF3201\"],\r\n            borderColor: \"transparent\",\r\n            data: [90, 10]\r\n         }\r\n      ]\r\n   };\r\n\r\n   switchShowReportFilter = () => {\r\n      this.setState(state => ({ showReportFilter: !state.showReportFilter }));\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <MainContainer theme={this.state.theme}>\r\n            <TopBar theme={this.state.theme}>\r\n               <NavItem\r\n                  icon=\"fas fa-filter\"\r\n                  onClick={this.switchShowReportFilter}\r\n               />\r\n            </TopBar>\r\n            <LeftBar theme={this.state.theme}>\r\n               <NavItem\r\n                  icon=\"fa fa-signal\"\r\n                  active={this.state.activeTab === \"1\"}\r\n                  onClick={() => {\r\n                     this.switchTab(\"1\");\r\n                  }}\r\n               />\r\n               <NavItem\r\n                  icon=\"fa fa-users\"\r\n                  active={this.state.activeTab === \"2\"}\r\n                  onClick={() => {\r\n                     this.switchTab(\"2\");\r\n                  }}\r\n               />\r\n               <NavItem\r\n                  icon=\"fa fa-check-square \"\r\n                  active={this.state.activeTab === \"3\"}\r\n                  onClick={() => {\r\n                     this.switchTab(\"3\");\r\n                  }}\r\n               />\r\n            </LeftBar>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n               <TabPane tabId=\"1\">\r\n                  <ReportControl\r\n                     theme={this.state.theme}\r\n                     show={this.state.showReportFilter}\r\n                  />\r\n                  <QuickView theme={this.state.theme} />\r\n                  <Row>\r\n                     <ChartCard\r\n                        theme={this.state.theme}\r\n                        chartType=\"Bar\"\r\n                        data={this.dataBar}\r\n                        headerText=\"Graf\"\r\n                        height={300}\r\n                        width={700}\r\n                     />\r\n                     <ChartCard\r\n                        theme={this.state.theme}\r\n                        chartType=\"Line\"\r\n                        data={this.data_line}\r\n                        headerText=\"Graf\"\r\n                        height={300}\r\n                        width={700}\r\n                     />\r\n                     <ChartCard\r\n                        theme={this.state.theme}\r\n                        chartType=\"Line\"\r\n                        data={this.data}\r\n                        headerText=\"Line_test\"\r\n                        height={300}\r\n                        width={700}\r\n                     />\r\n                     <ChartCard\r\n                        theme={this.state.theme}\r\n                        chartType=\"Bar\"\r\n                        data={this.data}\r\n                        headerText=\"Bar_test\"\r\n                        height={300}\r\n                        width={700}\r\n                     />\r\n                     <ChartCard\r\n                        theme={this.state.theme}\r\n                        chartType=\"Pie\"\r\n                        data={this.dataRound}\r\n                        headerText=\"Pie Test\"\r\n                        size=\"s\"\r\n                        height={300}\r\n                        width={700}\r\n                     />\r\n                     <ChartCard\r\n                        theme={this.state.theme}\r\n                        chartType=\"Doughnut\"\r\n                        data={this.dataRound}\r\n                        headerText=\"Doughnut test\"\r\n                        size=\"s\"\r\n                        height={300}\r\n                        width={700}\r\n                     />\r\n                     <ChartCard\r\n                        theme={this.state.theme}\r\n                        chartType=\"Radar\"\r\n                        data={this.dataBar}\r\n                        headerText=\"Radar test\"\r\n                        height={300}\r\n                        width={700}\r\n                        size=\"s\"\r\n                     />\r\n                     <ChartCard\r\n                        theme={this.state.theme}\r\n                        chartType=\"hBar\"\r\n                        data={this.dataBar}\r\n                        headerText=\"Horizontal Bar\"\r\n                        height={300}\r\n                        width={700}\r\n                        size=\"xl\"\r\n                     />\r\n                  </Row>\r\n               </TabPane>\r\n               <TabPane tabId=\"2\">\r\n                  <ReportControl\r\n                     theme={this.state.theme}\r\n                     show={this.state.showReportFilter}\r\n                  />\r\n                  <Row>\r\n                     <StdCard\r\n                        theme={this.state.theme}\r\n                        icon=\"fa fa-table\"\r\n                        headerText=\"table _test\"\r\n                     >\r\n                        <DataTable theme={this.state.theme} />\r\n                        <InputTable theme={this.state.theme} />\r\n                     </StdCard>\r\n                     <StdCard\r\n                        theme={this.state.theme}\r\n                        icon=\"fa fa-table\"\r\n                        headerText=\"table _test\"\r\n                        size=\"xl\"\r\n                     >\r\n                        <TeamTable theme={this.state.theme} />\r\n                     </StdCard>\r\n                  </Row>\r\n               </TabPane>\r\n            </TabContent>\r\n         </MainContainer>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}