{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Settings/Settings.jsx\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Form, FormGroup, Label, Input, CustomInput, TabContent, TabPane } from \"reactstrap\";\nimport TopBar from \"../Nav/TopBar/TopBar\";\nimport LeftBar from \"../Nav/LeftBar/LeftBar\";\nimport NavItem from \"../Nav/NavItem/NavItem\";\nimport AppSettings from \"./AppSettings/AppSettings\";\nimport UserSettings from \"./UserSettings/UserSettings\";\nimport StdCard from \"../Card/StdCard\";\nimport MainContainer from \"../MainContainer/MainContainer\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport CreateUser from \"../Users/CreateUser\";\nimport UIManager from \"../../Modules/UIManager/UIManager\";\n\nvar Settings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Settings, _Component);\n\n  function Settings(props) {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Settings).call(this, props));\n    _this.state = {\n      theme: UIManager.getTheme(),\n      showReportFilter: false,\n      activeTab: \"1\"\n    };\n    _this.switchTheme = _this.switchTheme.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"switchTheme\",\n    value: function switchTheme() {\n      var theme = this.state.theme;\n\n      if (theme === \"dark\") {\n        UIManager.setTheme(\"light\");\n      }\n\n      if (theme === \"light\") {\n        UIManager.setTheme(\"dark\");\n      }\n\n      this.setState({\n        theme: UIManager.getTheme()\n      });\n    }\n  }, {\n    key: \"isDarkModeEnabled\",\n    value: function isDarkModeEnabled() {\n      if (UIManager.getTheme() === \"dark\") return true;\n      return false;\n    }\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(theme) {\n      if (theme === \"dark\") {\n        return \"table-dark\";\n      }\n\n      if (theme === \"light\") {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"setInputTheme\",\n    value: function setInputTheme(theme) {\n      if (theme === \"dark\") {\n        return \"table-input-dark\";\n      }\n\n      if (theme === \"light\") {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"switchTab\",\n    value: function switchTab(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(MainContainer, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(TopBar, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(LeftBar, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        icon: \"fa fa-user-cog\",\n        active: this.state.activeTab === \"1\",\n        onClick: function onClick() {\n          _this2.switchTab(\"1\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(NavItem, {\n        icon: \"fa fa-cog\",\n        active: this.state.activeTab === \"2\",\n        onClick: function onClick() {\n          _this2.switchTab(\"2\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(CreateUser, {\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(StdCard, {\n        icon: \"fas fa-cogs\",\n        headerText: \"Application settings\",\n        theme: this.state.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        for: \"exampleCheckbox mb-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-palette mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), \"User Interface\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleCheckbox mb-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Theme\"), React.createElement(CustomInput, {\n        type: \"switch\",\n        id: \"UITheme\",\n        name: \"UITheme\",\n        label: \"Enable dark mode\",\n        onChange: this.switchTheme,\n        checked: this.isDarkModeEnabled(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })))))))), React.createElement(Route, {\n        path: \"/Settings/App\",\n        component: AppSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Settings/App\",\n        component: UserSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nexport { Settings as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Settings/Settings.jsx"],"names":["React","Component","Col","Row","Form","FormGroup","Label","Input","CustomInput","TabContent","TabPane","TopBar","LeftBar","NavItem","AppSettings","UserSettings","StdCard","MainContainer","BrowserRouter","Router","Route","Link","CreateUser","UIManager","Settings","props","state","theme","getTheme","showReportFilter","activeTab","switchTheme","bind","setTheme","setState","tab","switchTab","isDarkModeEnabled"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n   Col,\r\n   Row,\r\n   Form,\r\n   FormGroup,\r\n   Label,\r\n   Input,\r\n   CustomInput,\r\n   TabContent,\r\n   TabPane\r\n} from \"reactstrap\";\r\nimport TopBar from \"../Nav/TopBar/TopBar\";\r\nimport LeftBar from \"../Nav/LeftBar/LeftBar\";\r\nimport NavItem from \"../Nav/NavItem/NavItem\";\r\nimport AppSettings from \"./AppSettings/AppSettings\";\r\nimport UserSettings from \"./UserSettings/UserSettings\";\r\nimport StdCard from \"../Card/StdCard\";\r\nimport MainContainer from \"../MainContainer/MainContainer\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport CreateUser from \"../Users/CreateUser\";\r\nimport UIManager from \"../../Modules/UIManager/UIManager\";\r\n\r\nexport default class Settings extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         theme: UIManager.getTheme(),\r\n         showReportFilter: false,\r\n         activeTab: \"1\"\r\n      };\r\n      this.switchTheme = this.switchTheme.bind(this);\r\n   }\r\n\r\n   switchTheme() {\r\n      const { theme } = this.state;\r\n\r\n      if (theme === \"dark\") {\r\n         UIManager.setTheme(\"light\");\r\n      }\r\n      if (theme === \"light\") {\r\n         UIManager.setTheme(\"dark\");\r\n      }\r\n      this.setState({\r\n         theme: UIManager.getTheme()\r\n      });\r\n   }\r\n\r\n   isDarkModeEnabled() {\r\n      if (UIManager.getTheme() === \"dark\") return true;\r\n      return false;\r\n   }\r\n\r\n   setTheme(theme) {\r\n      if (theme === \"dark\") {\r\n         return \"table-dark\";\r\n      }\r\n      if (theme === \"light\") {\r\n         return \"\";\r\n      }\r\n   }\r\n\r\n   setInputTheme(theme) {\r\n      if (theme === \"dark\") {\r\n         return \"table-input-dark\";\r\n      }\r\n      if (theme === \"light\") {\r\n         return \"\";\r\n      }\r\n   }\r\n\r\n   switchTab(tab) {\r\n      if (this.state.activeTab !== tab) {\r\n         this.setState({\r\n            activeTab: tab\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Router>\r\n            <MainContainer theme={this.state.theme}>\r\n               <TopBar theme={this.state.theme} />\r\n               <LeftBar theme={this.state.theme}>\r\n                  <NavItem\r\n                     icon=\"fa fa-user-cog\"\r\n                     active={this.state.activeTab === \"1\"}\r\n                     onClick={() => {\r\n                        this.switchTab(\"1\");\r\n                     }}\r\n                  />\r\n                  <NavItem\r\n                     icon=\"fa fa-cog\"\r\n                     active={this.state.activeTab === \"2\"}\r\n                     onClick={() => {\r\n                        this.switchTab(\"2\");\r\n                     }}\r\n                  />\r\n               </LeftBar>\r\n               <TabContent activeTab={this.state.activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                     <Row>\r\n                        <CreateUser theme={this.state.theme} />\r\n                     </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                     <Row>\r\n                        <StdCard\r\n                           icon=\"fas fa-cogs\"\r\n                           headerText=\"Application settings\"\r\n                           theme={this.state.theme}\r\n                        >\r\n                           <h6 for=\"exampleCheckbox mb-o\">\r\n                              <span className=\"fas fa-palette mr-2\" />\r\n                              User Interface\r\n                           </h6>\r\n                           <hr />\r\n                           <Form>\r\n                              <FormGroup>\r\n                                 <Label for=\"exampleCheckbox mb-o\">Theme</Label>\r\n                                 <CustomInput\r\n                                    type=\"switch\"\r\n                                    id=\"UITheme\"\r\n                                    name=\"UITheme\"\r\n                                    label=\"Enable dark mode\"\r\n                                    onChange={this.switchTheme}\r\n                                    checked={this.isDarkModeEnabled()}\r\n                                 />\r\n                              </FormGroup>\r\n                           </Form>\r\n                        </StdCard>\r\n                     </Row>\r\n                  </TabPane>\r\n               </TabContent>\r\n            </MainContainer>\r\n            <Route path={`/Settings/App`} component={AppSettings} />\r\n            <Route path={`/Settings/App`} component={UserSettings} />\r\n         </Router>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}