{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Users/CreateUser.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport StdCard from '../Card/StdCard';\nimport { Row, Col, Alert, Form, Label, Input } from 'reactstrap';\nimport { Button, InputGroup, FormGroup } from '@blueprintjs/core';\n\nvar CreateUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateUser, _Component);\n\n  function CreateUser() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateUser)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      userType: '',\n      username: '',\n      email: '',\n      password: '',\n      project: '',\n      projects: [{\n        name: 'GDC',\n        value: 'GDC'\n      }],\n      created: false,\n      message: '',\n      isLoading: ''\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          password = _this$state.password,\n          email = _this$state.email;\n      var URL = 'http://localhost:3001/api/users/create/';\n      var data = {\n        user: {\n          email: email,\n          password: password\n        }\n      };\n      axios.post(URL, data).then(function (res) {\n        _this.setState({\n          created: res.data.created\n        });\n\n        if (res.data.created === 'ok') {\n          alert('User created successfully');\n        }\n      }).catch(function (err) {\n        _this.setState({\n          created: 'error',\n          message: 'error'\n        });\n      });\n    };\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.name] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateUser, [{\n    key: \"setInputTheme\",\n    value: function setInputTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"setSelectTheme\",\n    value: function setSelectTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          message = _this$state2.message,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          username = _this$state2.username,\n          userType = _this$state2.userType,\n          project = _this$state2.project;\n      return React.createElement(StdCard, {\n        headerText: \"Create new user\",\n        icon: \"user\",\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, message !== '' && React.createElement(Alert, {\n        className: \"bg-transparent border border-warning text-warning rounded-corners text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, message)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"bp3-select fill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Choose an item...\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"One\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Two\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Three\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Four\")))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"User Type\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"userType\",\n        id: \"userType\",\n        size: \"sm\",\n        value: userType,\n        onChange: this.onChange,\n        placeholder: \"Please provide username\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Standard\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Admin\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Root\"))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Project\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"project\",\n        id: \"project\",\n        size: \"sm\",\n        value: project,\n        onChange: this.onChange,\n        placeholder: \"Please provide username\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"GDC\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"P1\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"P2\"))), React.createElement(FormGroup, {\n        label: \"Username\",\n        labelFor: \"User\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        leftIcon: \"user\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            username: e.target.value\n          });\n        },\n        placeholder: \"Username...\",\n        type: \"text\",\n        value: username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        label: \"Email\",\n        labelFor: \"mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        leftIcon: \"envelope\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            email: e.target.value\n          });\n        },\n        placeholder: \"Username...\",\n        type: \"email\",\n        value: email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        label: \"password\",\n        labelFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        leftIcon: \"key\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            password: e.target.value\n          });\n        },\n        placeholder: \"Password...\",\n        type: \"password\",\n        value: password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Button, {\n        intent: \"primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Create\"))));\n    }\n  }]);\n\n  return CreateUser;\n}(Component);\n\nexport { CreateUser as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Users/CreateUser.jsx"],"names":["React","Component","axios","StdCard","Row","Col","Alert","Form","Label","Input","Button","InputGroup","FormGroup","CreateUser","state","theme","props","userType","username","email","password","project","projects","name","value","created","message","isLoading","onSubmit","e","preventDefault","URL","data","user","post","then","res","setState","alert","catch","err","onChange","target","setSelectTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport StdCard from '../Card/StdCard';\r\nimport { Row, Col, Alert, Form, Label, Input } from 'reactstrap';\r\nimport { Button, InputGroup, FormGroup } from '@blueprintjs/core';\r\n\r\nexport default class CreateUser extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      userType: '',\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      project: '',\r\n      projects: [\r\n         {\r\n            name: 'GDC',\r\n            value: 'GDC'\r\n         }\r\n      ],\r\n      created: false,\r\n      message: '',\r\n      isLoading: ''\r\n   };\r\n\r\n   onSubmit = e => {\r\n      e.preventDefault();\r\n      const { password, email } = this.state;\r\n\r\n      const URL = 'http://localhost:3001/api/users/create/';\r\n\r\n      const data = {\r\n         user: {\r\n            email: email,\r\n            password: password\r\n         }\r\n      };\r\n\r\n      axios\r\n         .post(URL, data)\r\n         .then(res => {\r\n            this.setState({\r\n               created: res.data.created\r\n            });\r\n            if (res.data.created === 'ok') {\r\n               alert('User created successfully');\r\n            }\r\n         })\r\n         .catch(err => {\r\n            this.setState({\r\n               created: 'error',\r\n               message: 'error'\r\n            });\r\n         });\r\n   };\r\n\r\n   onChange = e => {\r\n      const state = this.state;\r\n      state[e.target.name] = e.target.value;\r\n      this.setState(state);\r\n   };\r\n\r\n   setInputTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n   setSelectTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         message,\r\n         email,\r\n         password,\r\n         username,\r\n         userType,\r\n         project\r\n      } = this.state;\r\n\r\n      return (\r\n         <StdCard\r\n            headerText='Create new user'\r\n            icon='user'\r\n            theme={this.props.theme}\r\n         >\r\n            <Form>\r\n               <Col md={12}>\r\n                  {message !== '' && (\r\n                     <Alert className='bg-transparent border border-warning text-warning rounded-corners text-center'>\r\n                        {message}\r\n                     </Alert>\r\n                  )}\r\n               </Col>\r\n               <FormGroup>\r\n                  <div class='bp3-select fill'>\r\n                     <select>\r\n                        <option selected>Choose an item...</option>\r\n                        <option value='1'>One</option>\r\n                        <option value='2'>Two</option>\r\n                        <option value='3'>Three</option>\r\n                        <option value='4'>Four</option>\r\n                     </select>\r\n                  </div>\r\n               </FormGroup>\r\n\r\n               <FormGroup>\r\n                  <Label for='project'>User Type</Label>\r\n                  <Input\r\n                     type='select'\r\n                     name='userType'\r\n                     id='userType'\r\n                     size='sm'\r\n                     value={userType}\r\n                     onChange={this.onChange}\r\n                     placeholder='Please provide username'\r\n                     className={this.setSelectTheme()}\r\n                  >\r\n                     <option>Standard</option>\r\n                     <option>Admin</option>\r\n                     <option>Root</option>\r\n                  </Input>\r\n               </FormGroup>\r\n\r\n               <FormGroup>\r\n                  <Label for='project'>Project</Label>\r\n                  <Input\r\n                     type='select'\r\n                     name='project'\r\n                     id='project'\r\n                     size='sm'\r\n                     value={project}\r\n                     onChange={this.onChange}\r\n                     placeholder='Please provide username'\r\n                     className={this.setSelectTheme()}\r\n                  >\r\n                     <option>GDC</option>\r\n                     <option>P1</option>\r\n                     <option>P2</option>\r\n                  </Input>\r\n               </FormGroup>\r\n\r\n               <FormGroup label='Username' labelFor='User'>\r\n                  <InputGroup\r\n                     leftIcon='user'\r\n                     onChange={e => {\r\n                        this.setState({ username: e.target.value });\r\n                     }}\r\n                     placeholder='Username...'\r\n                     type='text'\r\n                     value={username}\r\n                  />\r\n               </FormGroup>\r\n\r\n               <FormGroup label='Email' labelFor='mail'>\r\n                  <InputGroup\r\n                     leftIcon='envelope'\r\n                     onChange={e => {\r\n                        this.setState({ email: e.target.value });\r\n                     }}\r\n                     placeholder='Username...'\r\n                     type='email'\r\n                     value={email}\r\n                  />\r\n               </FormGroup>\r\n               <FormGroup label='password' labelFor='password'>\r\n                  <InputGroup\r\n                     leftIcon='key'\r\n                     onChange={e => {\r\n                        this.setState({ password: e.target.value });\r\n                     }}\r\n                     placeholder='Password...'\r\n                     type='password'\r\n                     value={password}\r\n                  />\r\n               </FormGroup>\r\n               <div className='text-right'>\r\n                  <Button intent='primary' onClick={this.onSubmit}>\r\n                     Create\r\n                  </Button>\r\n               </div>\r\n            </Form>\r\n         </StdCard>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}