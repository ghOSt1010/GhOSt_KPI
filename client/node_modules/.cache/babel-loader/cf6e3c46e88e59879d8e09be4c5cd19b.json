{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Employees/Employees.jsx\";\nimport React, { Component } from 'react';\nimport { Tabs, Tab, H2, Alert, Portal, H5, Classes } from '@blueprintjs/core';\nimport EmployeesTable from '../../components/Tables/EmployeesTable';\nimport EmployeeDialog from '../../components/Dialogs/EmployeeDialog';\nimport Client from '../../Modules/Client/Client';\nimport TableControllers from '../../components/Tables/TableControllers';\n\nvar Employees =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Employees, _Component);\n\n  function Employees() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Employees);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Employees)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTabID: 'Employees',\n      selectedTabId: 'Employees',\n      isLoading: true,\n      data: [],\n      openAlert: true,\n      errorMessage: '',\n      isEmployeesDialogOpen: false,\n      name: '',\n      email: '',\n      user: '',\n      type: '',\n      project: '',\n      team: '',\n      selected: {},\n      isUserEditDialogOpen: false,\n      isDeleteAlertOpen: false,\n      canEdit: !false,\n      canDelete: !false\n    };\n\n    _this.getSelected = function (emp, isSelected) {\n      _this.setState({\n        selected: emp,\n        canEdit: isSelected,\n        canDelete: isSelected\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, email, name, team, project, user, type, errorMsg, emp, result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, email = _this$state.email, name = _this$state.name, team = _this$state.team, project = _this$state.project, user = _this$state.user, type = _this$state.type;\n                errorMsg = 'Unknown Error';\n                emp = Client.Services.EmployeesService.createEmployeeDTO(name, email, user, type, project, team);\n                _context.prev = 4;\n                _context.next = 7;\n                return Client.Services.EmployeesService.saveEmployee(emp);\n\n              case 7:\n                result = _context.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success(\"Employee \".concat(name, \" successfully saved\"));\n\n                  _this.getEmployeesData();\n                }\n\n                _context.next = 16;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](4);\n\n                if (_context.t0.response.status === 409) {\n                  errorMsg = \"Error: \".concat(_context.t0.response.data.message);\n                  Client.Notifications.alert(errorMsg);\n                }\n\n                if (_context.t0.response.status !== 409) {\n                  errorMsg = \"Error:  while saving: \".concat(name, \" Employee\");\n                  Client.Notifications.error(errorMsg);\n                }\n\n                _this.openAlert(errorMsg);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.id] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.handleTabChange = function (activeTabID) {\n      _this.setState({\n        activeTabID: activeTabID,\n        selectedTabId: activeTabID\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Employees, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getEmployeesData();\n    }\n  }, {\n    key: \"getEmployeesData\",\n    value: function () {\n      var _getEmployeesData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.setLoading(true);\n                _context2.prev = 1;\n                _context2.next = 4;\n                return Client.Services.EmployeesService.getEmployees();\n\n              case 4:\n                result = _context2.sent;\n                this.setState({\n                  data: result.data\n                });\n                console.log(result.data);\n                _context2.next = 14;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                alert(_context2.t0);\n                this.setState({\n                  errorMsg: _context2.t0.response\n                });\n                Client.Notifications.alert('Error while loading Employees list');\n\n              case 14:\n                _context2.prev = 14;\n                this.setLoading(false);\n                return _context2.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 9, 14, 17]]);\n      }));\n\n      function getEmployeesData() {\n        return _getEmployeesData.apply(this, arguments);\n      }\n\n      return getEmployeesData;\n    }()\n  }, {\n    key: \"deleteUser\",\n    value: function () {\n      var _deleteUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                this.resetErrorMsg();\n                _context3.next = 4;\n                return Client.Services.EmployeesService.deleteEmployeeById(id);\n\n              case 4:\n                result = _context3.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success('Employee removed successfully');\n                }\n\n                _context3.next = 12;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                this.setState({\n                  errorMsg: _context3.t0.response.status\n                });\n                Client.Notifications.alert('Error, cannot delete uEmployeeser');\n\n              case 12:\n                _context3.prev = 12;\n                this.getUsersData();\n                this.closeDeleteAlert();\n                return _context3.finish(12);\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 8, 12, 16]]);\n      }));\n\n      function deleteUser(_x2) {\n        return _deleteUser.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }()\n  }, {\n    key: \"openAlert\",\n    value: function openAlert(msg) {\n      this.setState({\n        isAlertOpen: true,\n        errorMessage: msg\n      });\n    }\n  }, {\n    key: \"closeAlert\",\n    value: function closeAlert() {\n      this.setState({\n        isAlertOpen: false,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"resetErrorMsg\",\n    value: function resetErrorMsg() {\n      this.setState({\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"openEmployeesDialog\",\n    value: function openEmployeesDialog() {\n      this.setState({\n        isEmployeesDialogOpen: true\n      });\n    }\n  }, {\n    key: \"closeEmployeesDialog\",\n    value: function closeEmployeesDialog() {\n      this.setState({\n        isEmployeesDialogOpen: false\n      });\n    }\n  }, {\n    key: \"openUserEditDialog\",\n    value: function openUserEditDialog() {\n      this.setState({\n        isUserEditDialogOpen: true\n      });\n    }\n  }, {\n    key: \"closeUserEditDialog\",\n    value: function closeUserEditDialog() {\n      this.setState({\n        isUserEditDialogOpen: false\n      });\n    }\n  }, {\n    key: \"openDeleteAlert\",\n    value: function openDeleteAlert() {\n      this.setState({\n        isDeleteAlertOpen: true\n      });\n    }\n  }, {\n    key: \"closeDeleteAlert\",\n    value: function closeDeleteAlert() {\n      this.setState({\n        isDeleteAlertOpen: false\n      });\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(loading) {\n      this.setState({\n        isLoading: loading\n      });\n    }\n  }, {\n    key: \"clearForm\",\n    value: function clearForm() {\n      this.setState({\n        email: '',\n        username: '',\n        usertype: 'standard',\n        password: '',\n        isAlertOpen: false,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"renderControlls\",\n    value: function renderControlls() {\n      var _this2 = this;\n\n      if (this.state.selectedTabId === 'Employees') {\n        return React.createElement(TableControllers, {\n          onEdit: function onEdit() {\n            return _this2.openUserEditDialog();\n          },\n          canEdit: this.state.canEdit,\n          onAdd: function onAdd() {\n            return _this2.openEmployeesDialog();\n          },\n          onDelete: function onDelete() {\n            return _this2.openDeleteAlert();\n          },\n          canDelete: this.state.canDelete,\n          onRefresh: function onRefresh() {\n            return _this2.getEmployeesData();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          data = _this$state2.data,\n          isLoading = _this$state2.isLoading,\n          email = _this$state2.email,\n          name = _this$state2.name,\n          team = _this$state2.team,\n          project = _this$state2.project,\n          user = _this$state2.user,\n          type = _this$state2.type,\n          isAlertOpen = _this$state2.isAlertOpen,\n          selected = _this$state2.selected;\n      return React.createElement(\"div\", {\n        id: \"AdminPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(H2, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Employees Panel\")), React.createElement(Tabs, {\n        onChange: this.handleTabChange,\n        selectedTabId: this.state.selectedTabId,\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        id: \"Employees\",\n        title: \"Employees\",\n        panel: React.createElement(EmployeesTable, {\n          data: data,\n          onRefresh: function onRefresh() {\n            return _this3.getEmployeesData();\n          },\n          isLoading: isLoading,\n          onSelection: this.getSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(Tabs.Expander, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), this.renderControlls()), React.createElement(EmployeeDialog, {\n        isOpen: this.state.isUserEditDialogOpen,\n        toOpen: function toOpen() {\n          return _this3.openUserEditDialog();\n        },\n        toClose: function toClose() {\n          return _this3.closeUserEditDialog();\n        },\n        name: name,\n        email: email,\n        user: user,\n        type: type,\n        project: project,\n        team: team,\n        onChange: this.onChange,\n        handleSubmit: this.handleSubmit,\n        buttonCaption: \"Add\",\n        onClear: function onClear() {\n          return _this3.clearForm();\n        },\n        isAlertOpen: isAlertOpen,\n        closeAlert: function closeAlert() {\n          return _this3.closeAlert();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(EmployeeDialog, {\n        isOpen: this.state.isEmployeesDialogOpen,\n        toOpen: function toOpen() {\n          return _this3.openEmployeesDialog();\n        },\n        toClose: function toClose() {\n          return _this3.closeEmployeesDialog();\n        },\n        name: selected.name,\n        email: selected.email,\n        user: selected.user,\n        type: type,\n        project: selected.project,\n        team: selected.team,\n        onChange: this.onChange,\n        handleSubmit: this.handleSubmit,\n        buttonCaption: \"Add\",\n        onClear: function onClear() {\n          return _this3.clearForm();\n        },\n        isAlertOpen: isAlertOpen,\n        closeAlert: function closeAlert() {\n          return _this3.closeAlert();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(Alert, {\n        isOpen: this.state.isDeleteAlertOpen,\n        confirmButtonText: \"Delete\",\n        onConfirm: function onConfirm() {\n          return _this3.deleteUser(selected._id);\n        },\n        cancelButtonText: \"Cancel\",\n        onCancel: function onCancel() {\n          return _this3.closeDeleteAlert();\n        },\n        intent: \"danger\",\n        icon: \"issue\",\n        ussePortal: React.createElement(Portal, {\n          container: document.getElementById('AdminPanel'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(H5, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Are you sure that you want to delete this user?\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"User: \".concat(selected.username)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        className: Classes.TEXT_MUTED,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Will be permanentyly deleted...\")));\n    }\n  }]);\n\n  return Employees;\n}(Component);\n\nexport { Employees as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Employees/Employees.jsx"],"names":["React","Component","Tabs","Tab","H2","Alert","Portal","H5","Classes","EmployeesTable","EmployeeDialog","Client","TableControllers","Employees","state","activeTabID","selectedTabId","isLoading","data","openAlert","errorMessage","isEmployeesDialogOpen","name","email","user","type","project","team","selected","isUserEditDialogOpen","isDeleteAlertOpen","canEdit","canDelete","getSelected","emp","isSelected","setState","handleSubmit","e","preventDefault","errorMsg","Services","EmployeesService","createEmployeeDTO","saveEmployee","result","status","Notifications","success","getEmployeesData","response","message","alert","error","onChange","target","id","value","handleTabChange","setLoading","getEmployees","console","log","resetErrorMsg","deleteEmployeeById","getUsersData","closeDeleteAlert","msg","isAlertOpen","loading","username","usertype","password","openUserEditDialog","openEmployeesDialog","openDeleteAlert","renderControlls","closeUserEditDialog","clearForm","closeAlert","closeEmployeesDialog","deleteUser","_id","document","getElementById","TEXT_MUTED"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Tabs, Tab, H2, Alert, Portal, H5, Classes } from '@blueprintjs/core';\nimport EmployeesTable from '../../components/Tables/EmployeesTable';\nimport EmployeeDialog from '../../components/Dialogs/EmployeeDialog';\nimport Client from '../../Modules/Client/Client';\nimport TableControllers from '../../components/Tables/TableControllers';\n\nexport default class Employees extends Component {\n   state = {\n      activeTabID: 'Employees',\n      selectedTabId: 'Employees',\n      isLoading: true,\n      data: [],\n      openAlert: true,\n      errorMessage: '',\n      isEmployeesDialogOpen: false,\n      name: '',\n      email: '',\n      user: '',\n      type: '',\n      project: '',\n      team: '',\n      selected: {},\n      isUserEditDialogOpen: false,\n      isDeleteAlertOpen: false,\n      canEdit: !false,\n      canDelete: !false\n   };\n\n   getSelected = (emp, isSelected) => {\n      this.setState({\n         selected: emp,\n         canEdit: isSelected,\n         canDelete: isSelected\n      });\n   };\n\n   componentDidMount() {\n      this.getEmployeesData();\n   }\n\n   async getEmployeesData() {\n      this.setLoading(true);\n      var result;\n      try {\n         //this.resetErrorMsg();\n         result = await Client.Services.EmployeesService.getEmployees();\n         this.setState({\n            data: result.data\n         });\n         console.log(result.data);\n      } catch (err) {\n         alert(err);\n         this.setState({ errorMsg: err.response });\n         Client.Notifications.alert('Error while loading Employees list');\n      } finally {\n         this.setLoading(false);\n      }\n   }\n\n   async deleteUser(id) {\n      var result;\n      try {\n         this.resetErrorMsg();\n         result = await Client.Services.EmployeesService.deleteEmployeeById(id);\n         if (result.status === 200) {\n            Client.Notifications.success('Employee removed successfully');\n         }\n      } catch (err) {\n         this.setState({ errorMsg: err.response.status });\n         Client.Notifications.alert('Error, cannot delete uEmployeeser');\n      } finally {\n         this.getUsersData();\n         this.closeDeleteAlert();\n      }\n   }\n\n   handleSubmit = async e => {\n      e.preventDefault();\n      const { email, name, team, project, user, type } = this.state;\n      var errorMsg = 'Unknown Error';\n      let emp = Client.Services.EmployeesService.createEmployeeDTO(\n         name,\n         email,\n         user,\n         type,\n         project,\n         team\n      );\n      try {\n         let result = await Client.Services.EmployeesService.saveEmployee(emp);\n         if (result.status === 200) {\n            Client.Notifications.success(`Employee ${name} successfully saved`);\n            this.getEmployeesData();\n         }\n      } catch (err) {\n         if (err.response.status === 409) {\n            errorMsg = `Error: ${err.response.data.message}`;\n            Client.Notifications.alert(errorMsg);\n         }\n         if (err.response.status !== 409) {\n            errorMsg = `Error:  while saving: ${name} Employee`;\n            Client.Notifications.error(errorMsg);\n         }\n         this.openAlert(errorMsg);\n      }\n   };\n   openAlert(msg) {\n      this.setState({ isAlertOpen: true, errorMessage: msg });\n   }\n   closeAlert() {\n      this.setState({ isAlertOpen: false, errorMessage: '' });\n   }\n\n   resetErrorMsg() {\n      this.setState({ errorMessage: '' });\n   }\n\n   onChange = e => {\n      const state = this.state;\n      state[e.target.id] = e.target.value;\n      this.setState(state);\n   };\n\n   openEmployeesDialog() {\n      this.setState({\n         isEmployeesDialogOpen: true\n      });\n   }\n   closeEmployeesDialog() {\n      this.setState({\n         isEmployeesDialogOpen: false\n      });\n   }\n\n   openUserEditDialog() {\n      this.setState({\n         isUserEditDialogOpen: true\n      });\n   }\n   closeUserEditDialog() {\n      this.setState({\n         isUserEditDialogOpen: false\n      });\n   }\n\n   openDeleteAlert() {\n      this.setState({\n         isDeleteAlertOpen: true\n      });\n   }\n   closeDeleteAlert() {\n      this.setState({\n         isDeleteAlertOpen: false\n      });\n   }\n\n   setLoading(loading) {\n      this.setState({\n         isLoading: loading\n      });\n   }\n\n   handleTabChange = activeTabID => {\n      this.setState({\n         activeTabID: activeTabID,\n         selectedTabId: activeTabID\n      });\n   };\n   clearForm() {\n      this.setState({\n         email: '',\n         username: '',\n         usertype: 'standard',\n         password: '',\n         isAlertOpen: false,\n         errorMessage: ''\n      });\n   }\n\n   renderControlls() {\n      if (this.state.selectedTabId === 'Employees') {\n         return (\n            <TableControllers\n               onEdit={() => this.openUserEditDialog()}\n               canEdit={this.state.canEdit}\n               onAdd={() => this.openEmployeesDialog()}\n               onDelete={() => this.openDeleteAlert()}\n               canDelete={this.state.canDelete}\n               onRefresh={() => this.getEmployeesData()}\n            />\n         );\n      }\n   }\n\n   render() {\n      const {\n         data,\n         isLoading,\n         email,\n         name,\n         team,\n         project,\n         user,\n         type,\n         isAlertOpen,\n         selected\n      } = this.state;\n\n      return (\n         <div id='AdminPanel'>\n            <div className='mt-2'>\n               <H2>Employees Panel</H2>\n            </div>\n            <Tabs\n               onChange={this.handleTabChange}\n               selectedTabId={this.state.selectedTabId}\n               large\n            >\n               <Tab\n                  id='Employees'\n                  title='Employees'\n                  panel={\n                     <EmployeesTable\n                        data={data}\n                        onRefresh={() => this.getEmployeesData()}\n                        isLoading={isLoading}\n                        onSelection={this.getSelected}\n                     />\n                  }\n               />\n               <Tabs.Expander />\n               {this.renderControlls()}\n            </Tabs>\n            <EmployeeDialog\n               isOpen={this.state.isUserEditDialogOpen}\n               toOpen={() => this.openUserEditDialog()}\n               toClose={() => this.closeUserEditDialog()}\n               name={name}\n               email={email}\n               user={user}\n               type={type}\n               project={project}\n               team={team}\n               onChange={this.onChange}\n               handleSubmit={this.handleSubmit}\n               buttonCaption='Add'\n               onClear={() => this.clearForm()}\n               isAlertOpen={isAlertOpen}\n               closeAlert={() => this.closeAlert()}\n            />\n            <EmployeeDialog\n               isOpen={this.state.isEmployeesDialogOpen}\n               toOpen={() => this.openEmployeesDialog()}\n               toClose={() => this.closeEmployeesDialog()}\n               name={selected.name}\n               email={selected.email}\n               user={selected.user}\n               type={type}\n               project={selected.project}\n               team={selected.team}\n               onChange={this.onChange}\n               handleSubmit={this.handleSubmit}\n               buttonCaption='Add'\n               onClear={() => this.clearForm()}\n               isAlertOpen={isAlertOpen}\n               closeAlert={() => this.closeAlert()}\n            />\n            <Alert\n               isOpen={this.state.isDeleteAlertOpen}\n               confirmButtonText='Delete'\n               onConfirm={() => this.deleteUser(selected._id)}\n               cancelButtonText='Cancel'\n               onCancel={() => this.closeDeleteAlert()}\n               intent='danger'\n               icon='issue'\n               ussePortal={\n                  <Portal container={document.getElementById('AdminPanel')} />\n               }\n            >\n               <H5>Are you sure that you want to delete this user?</H5>\n               <strong>{`User: ${selected.username}`}</strong>\n               <p></p>\n               <strong\n                  className={Classes.TEXT_MUTED}\n               >{`Will be permanentyly deleted...`}</strong>\n            </Alert>\n         </div>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}