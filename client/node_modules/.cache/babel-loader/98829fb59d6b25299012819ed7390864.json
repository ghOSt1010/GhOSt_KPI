{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as Classes from \"../../common/classes\";\nimport { TruncatedFormat, TruncatedPopoverMode } from \"./truncatedFormat\";\n\nvar JSONFormat =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(JSONFormat, _super);\n\n  function JSONFormat() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  JSONFormat.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        children = _b.children,\n        omitQuotesOnStrings = _b.omitQuotesOnStrings,\n        stringify = _b.stringify;\n    var showPopover = this.props.showPopover; // always hide popover if value is nully\n\n    var isNully = children == null;\n\n    if (isNully) {\n      showPopover = TruncatedPopoverMode.NEVER;\n    }\n\n    var className = classNames(this.props.className, (_a = {}, _a[Classes.TABLE_NULL] = isNully, _a));\n    var displayValue = \"\";\n\n    if (omitQuotesOnStrings && typeof children === \"string\") {\n      displayValue = children;\n    } else {\n      displayValue = stringify(children);\n    }\n\n    return React.createElement(TruncatedFormat, tslib_1.__assign({}, this.props, {\n      className: className,\n      showPopover: showPopover\n    }), displayValue);\n  };\n\n  JSONFormat.displayName = DISPLAYNAME_PREFIX + \".JSONFormat\";\n  JSONFormat.defaultProps = {\n    omitQuotesOnStrings: true,\n    stringify: function stringify(obj) {\n      return JSON.stringify(obj, null, 2);\n    }\n  };\n  return JSONFormat;\n}(React.Component);\n\nexport { JSONFormat };","map":null,"metadata":{},"sourceType":"module"}