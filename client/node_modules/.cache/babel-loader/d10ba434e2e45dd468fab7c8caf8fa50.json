{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes as CoreClasses, ContextMenuTarget, Utils as CoreUtils } from \"@blueprintjs/core\";\nimport * as Classes from \"../common/classes\";\n\nvar HeaderCell =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(HeaderCell, _super);\n\n  function HeaderCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isActive: false\n    };\n    return _this;\n  }\n\n  HeaderCell.prototype.shouldComponentUpdate = function (nextProps) {\n    return !CoreUtils.shallowCompareKeys(this.props, nextProps, {\n      exclude: [\"style\"]\n    }) || !CoreUtils.deepCompareKeys(this.props, nextProps, [\"style\"]);\n  };\n\n  HeaderCell.prototype.renderContextMenu = function (_event) {\n    var menuRenderer = this.props.menuRenderer;\n\n    if (CoreUtils.isFunction(menuRenderer)) {\n      // the preferred way (a consistent function instance that won't cause as many re-renders)\n      return menuRenderer(this.props.index);\n    } else {\n      return undefined;\n    }\n  };\n\n  HeaderCell.prototype.render = function () {\n    var _a;\n\n    var classes = classNames(Classes.TABLE_HEADER, (_a = {}, _a[Classes.TABLE_HEADER_ACTIVE] = this.props.isActive || this.state.isActive, _a[Classes.TABLE_HEADER_SELECTED] = this.props.isSelected, _a[CoreClasses.LOADING] = this.props.loading, _a), this.props.className);\n    return React.createElement(\"div\", {\n      className: classes,\n      style: this.props.style\n    }, this.props.children);\n  };\n\n  HeaderCell = tslib_1.__decorate([ContextMenuTarget], HeaderCell);\n  return HeaderCell;\n}(React.Component);\n\nexport { HeaderCell };","map":null,"metadata":{},"sourceType":"module"}