{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Forms/EmployeeForms/CreateEmployeeForm/CreateEmployeeForm.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Alert, Form } from 'reactstrap';\nimport { Button, ButtonGroup, FormGroup, InputGroup, HTMLTable } from '@blueprintjs/core';\nimport axios from 'axios';\nimport LanguageOptions from '../../Options/LanguageOptions';\nimport RoleOptions from '../../Options/RoleOptions';\nimport ProjectOptions from '../../Options/ProjectOptions';\nimport RMOptions from '../../Options/RMOptions';\nimport SupportTypeOptions from '../../Options/SupportTypeOptions';\n/**\r\n *    TODO:\r\n *       -- Create init values\r\n */\n\nvar CreateEmployeeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateEmployeeForm, _Component);\n\n  function CreateEmployeeForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateEmployeeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateEmployeeForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      sap: '',\n      name: '',\n      email: '',\n      role: '',\n      supportType: 'Dedicated',\n      project: '',\n      mainlanguage: '',\n      mainlanguagelevel: '',\n      secondlanguage: '',\n      secondlanguagelevel: '',\n      thirdlanguage: '',\n      thirdlanguagelevel: '',\n      rm: '',\n      message: '',\n      supportTypeArr: []\n    };\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.id] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          sap = _this$state.sap,\n          name = _this$state.name,\n          email = _this$state.email,\n          role = _this$state.role,\n          supportType = _this$state.supportType,\n          project = _this$state.project,\n          mainlanguage = _this$state.mainlanguage,\n          rm = _this$state.rm;\n      var URL = '/api/employees/';\n      var data = {\n        employee: {\n          sap: sap,\n          name: name,\n          email: email,\n          role: role,\n          supportType: supportType,\n          project: project,\n          mainlanguage: mainlanguage,\n          rm: rm\n        }\n      };\n      axios.post(URL, data).then(function (res) {\n        _this.setState({\n          created: 'ok',\n          message: 'Employee saved successfully'\n        });\n\n        document.getElementById('getEmployeesData').click();\n      }).catch(function (err) {\n        _this.setState({\n          created: 'error',\n          message: 'Something went wrong',\n          err: err\n        });\n      });\n    };\n\n    _this.clearForm = function () {\n      _this.setState({\n        sap: '',\n        name: '',\n        email: '',\n        role: '',\n        supportType: '',\n        project: '',\n        mainlanguage: '',\n        rm: '',\n        message: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateEmployeeForm, [{\n    key: \"alertStyle\",\n    value: function alertStyle() {\n      var created = this.state.created;\n      if (created === 'ok') return 'border-success text-success';\n      if (created === 'error') return 'border-danger text-danger';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          sap = _this$state2.sap,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          role = _this$state2.role,\n          supportType = _this$state2.supportType,\n          project = _this$state2.project,\n          mainlanguage = _this$state2.mainlanguage,\n          rm = _this$state2.rm,\n          message = _this$state2.message;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Create New Employee\"), message !== '' && React.createElement(Alert, {\n        className: \"bg-transparent border rounded-corners text-center \".concat(this.alertStyle()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, message), React.createElement(Form, {\n        className: \"mb-2\",\n        ref: \"createProjectForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(HTMLTable, {\n        stripped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        label: \"SAP\",\n        labelFor: \"sap\",\n        labelInfo: \"(required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"sap\",\n        onChange: this.onChange,\n        placeholder: \"SAP Number...\",\n        type: \"number\",\n        value: sap,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        label: \"Email\",\n        labelFor: \"email\",\n        labelInfo: \"(required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"email\",\n        onChange: this.onChange,\n        placeholder: \"Email...\",\n        type: \"email\",\n        value: email,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        label: \"Name\",\n        labelFor: \"name\",\n        labelInfo: \"(required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"name\",\n        onChange: this.onChange,\n        placeholder: \"Name...\",\n        type: \"text\",\n        value: name,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        label: \"Role\",\n        labelFor: \"role\",\n        labelInfo: \"(required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"role\",\n        onChange: this.onChange,\n        placeholder: \"Role...\",\n        type: \"text\",\n        value: role,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        label: \"Support Type\",\n        labelFor: \"supportType\",\n        labelInfo: \"(required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"supportType\",\n        onChange: this.onChange,\n        placeholder: \"Support Type...\",\n        type: \"text\",\n        value: supportType,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        label: \"Project\",\n        labelFor: \"project\",\n        labelInfo: \"(required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"project\",\n        onChange: this.onChange,\n        placeholder: \"Project...\",\n        type: \"text\",\n        value: project,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        label: \"Main Language\",\n        labelFor: \"mainLanguage\",\n        labelInfo: \"(required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"mainLanguage\",\n        onChange: this.onChange,\n        placeholder: \"Main Language...\",\n        type: \"text\",\n        value: mainlanguage,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        label: \"RM\",\n        labelFor: \"rm\",\n        labelInfo: \"(required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"rm\",\n        onChange: this.onChange,\n        placeholder: \"RM Name...\",\n        type: \"text\",\n        value: rm,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"refresh\",\n        onClick: this.clearForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(Button, {\n        icon: \"saved\",\n        intent: \"primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Add\")))));\n    }\n  }]);\n\n  return CreateEmployeeForm;\n}(Component);\n\nexport { CreateEmployeeForm as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Forms/EmployeeForms/CreateEmployeeForm/CreateEmployeeForm.jsx"],"names":["React","Component","Row","Col","Alert","Form","Button","ButtonGroup","FormGroup","InputGroup","HTMLTable","axios","LanguageOptions","RoleOptions","ProjectOptions","RMOptions","SupportTypeOptions","CreateEmployeeForm","state","theme","props","sap","name","email","role","supportType","project","mainlanguage","mainlanguagelevel","secondlanguage","secondlanguagelevel","thirdlanguage","thirdlanguagelevel","rm","message","supportTypeArr","onChange","e","target","id","value","setState","onSubmit","preventDefault","URL","data","employee","post","then","res","created","document","getElementById","click","catch","err","clearForm","alertStyle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Alert, Form } from 'reactstrap';\r\nimport {\r\n   Button,\r\n   ButtonGroup,\r\n   FormGroup,\r\n   InputGroup,\r\n   HTMLTable\r\n} from '@blueprintjs/core';\r\nimport axios from 'axios';\r\n\r\nimport LanguageOptions from '../../Options/LanguageOptions';\r\nimport RoleOptions from '../../Options/RoleOptions';\r\nimport ProjectOptions from '../../Options/ProjectOptions';\r\nimport RMOptions from '../../Options/RMOptions';\r\nimport SupportTypeOptions from '../../Options/SupportTypeOptions';\r\n\r\n/**\r\n *    TODO:\r\n *       -- Create init values\r\n */\r\n\r\nexport default class CreateEmployeeForm extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      sap: '',\r\n      name: '',\r\n      email: '',\r\n      role: '',\r\n      supportType: 'Dedicated',\r\n      project: '',\r\n      mainlanguage: '',\r\n      mainlanguagelevel: '',\r\n      secondlanguage: '',\r\n      secondlanguagelevel: '',\r\n      thirdlanguage: '',\r\n      thirdlanguagelevel: '',\r\n      rm: '',\r\n      message: '',\r\n      supportTypeArr: []\r\n   };\r\n\r\n   onChange = e => {\r\n      const state = this.state;\r\n      state[e.target.id] = e.target.value;\r\n      this.setState(state);\r\n   };\r\n\r\n   onSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const {\r\n         sap,\r\n         name,\r\n         email,\r\n         role,\r\n         supportType,\r\n         project,\r\n         mainlanguage,\r\n         rm\r\n      } = this.state;\r\n\r\n      const URL = '/api/employees/';\r\n\r\n      const data = {\r\n         employee: {\r\n            sap: sap,\r\n            name: name,\r\n            email: email,\r\n            role: role,\r\n            supportType: supportType,\r\n            project: project,\r\n            mainlanguage: mainlanguage,\r\n            rm: rm\r\n         }\r\n      };\r\n\r\n      axios\r\n         .post(URL, data)\r\n         .then(res => {\r\n            this.setState({\r\n               created: 'ok',\r\n               message: 'Employee saved successfully'\r\n            });\r\n            document.getElementById('getEmployeesData').click();\r\n         })\r\n         .catch(err => {\r\n            this.setState({\r\n               created: 'error',\r\n               message: 'Something went wrong',\r\n               err: err\r\n            });\r\n         });\r\n   };\r\n\r\n   clearForm = () => {\r\n      this.setState({\r\n         sap: '',\r\n         name: '',\r\n         email: '',\r\n         role: '',\r\n         supportType: '',\r\n         project: '',\r\n         mainlanguage: '',\r\n         rm: '',\r\n         message: ''\r\n      });\r\n   };\r\n\r\n   alertStyle() {\r\n      const { created } = this.state;\r\n      if (created === 'ok') return 'border-success text-success';\r\n      if (created === 'error') return 'border-danger text-danger';\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         sap,\r\n         name,\r\n         email,\r\n         role,\r\n         supportType,\r\n         project,\r\n         mainlanguage,\r\n         rm,\r\n         message\r\n      } = this.state;\r\n\r\n      return (\r\n         <div>\r\n            <h5>Create New Employee</h5>\r\n            {message !== '' && (\r\n               <Alert\r\n                  className={`bg-transparent border rounded-corners text-center ${this.alertStyle()}`}\r\n               >\r\n                  {message}\r\n               </Alert>\r\n            )}\r\n            <Form className='mb-2' ref='createProjectForm'>\r\n               <HTMLTable stripped>\r\n                  <tbody>\r\n                     <tr>\r\n                        <td>\r\n                           <FormGroup\r\n                              label='SAP'\r\n                              labelFor='sap'\r\n                              labelInfo='(required)'\r\n                           ></FormGroup>\r\n                        </td>\r\n                        <td>\r\n                           <InputGroup\r\n                              id='sap'\r\n                              onChange={this.onChange}\r\n                              placeholder='SAP Number...'\r\n                              type='number'\r\n                              value={sap}\r\n                              fill\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <FormGroup\r\n                              label='Email'\r\n                              labelFor='email'\r\n                              labelInfo='(required)'\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <InputGroup\r\n                              id='email'\r\n                              onChange={this.onChange}\r\n                              placeholder='Email...'\r\n                              type='email'\r\n                              value={email}\r\n                              fill\r\n                           />\r\n                        </td>\r\n                     </tr>\r\n                     <tr>\r\n                        <td>\r\n                           <FormGroup\r\n                              label='Name'\r\n                              labelFor='name'\r\n                              labelInfo='(required)'\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <InputGroup\r\n                              id='name'\r\n                              onChange={this.onChange}\r\n                              placeholder='Name...'\r\n                              type='text'\r\n                              value={name}\r\n                              fill\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <FormGroup\r\n                              label='Role'\r\n                              labelFor='role'\r\n                              labelInfo='(required)'\r\n                           ></FormGroup>\r\n                        </td>\r\n                        <td>\r\n                           <InputGroup\r\n                              id='role'\r\n                              onChange={this.onChange}\r\n                              placeholder='Role...'\r\n                              type='text'\r\n                              value={role}\r\n                              fill\r\n                           />\r\n                        </td>\r\n                     </tr>\r\n                     <tr>\r\n                        <td>\r\n                           <FormGroup\r\n                              label='Support Type'\r\n                              labelFor='supportType'\r\n                              labelInfo='(required)'\r\n                           ></FormGroup>\r\n                        </td>\r\n                        <td>\r\n                           <InputGroup\r\n                              id='supportType'\r\n                              onChange={this.onChange}\r\n                              placeholder='Support Type...'\r\n                              type='text'\r\n                              value={supportType}\r\n                              fill\r\n                           />\r\n                        </td>\r\n\r\n                        <td>\r\n                           <FormGroup\r\n                              label='Project'\r\n                              labelFor='project'\r\n                              labelInfo='(required)'\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <InputGroup\r\n                              id='project'\r\n                              onChange={this.onChange}\r\n                              placeholder='Project...'\r\n                              type='text'\r\n                              value={project}\r\n                              fill\r\n                           />\r\n                        </td>\r\n                     </tr>\r\n                     <tr>\r\n                        <td>\r\n                           <FormGroup\r\n                              label='Main Language'\r\n                              labelFor='mainLanguage'\r\n                              labelInfo='(required)'\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <InputGroup\r\n                              id='mainLanguage'\r\n                              onChange={this.onChange}\r\n                              placeholder='Main Language...'\r\n                              type='text'\r\n                              value={mainlanguage}\r\n                              fill\r\n                           />\r\n                        </td>\r\n\r\n                        <td>\r\n                           <FormGroup\r\n                              label='RM'\r\n                              labelFor='rm'\r\n                              labelInfo='(required)'\r\n                           />\r\n                        </td>\r\n                        <td>\r\n                           <InputGroup\r\n                              id='rm'\r\n                              onChange={this.onChange}\r\n                              placeholder='RM Name...'\r\n                              type='text'\r\n                              value={rm}\r\n                              fill\r\n                           />\r\n                        </td>\r\n                     </tr>\r\n                  </tbody>\r\n               </HTMLTable>\r\n\r\n               <div className='text-right'>\r\n                  <ButtonGroup>\r\n                     <Button icon='refresh' onClick={this.clearForm}>\r\n                        Clear\r\n                     </Button>\r\n                     <Button\r\n                        icon='saved'\r\n                        intent='primary'\r\n                        onClick={this.onSubmit}\r\n                     >\r\n                        Add\r\n                     </Button>\r\n                  </ButtonGroup>\r\n               </div>\r\n            </Form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}