{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/DataManagerCard.jsx\";\nimport React, { Component } from 'react';\nimport { CardBody } from 'reactstrap';\nimport { Card, Icon, Button, ButtonGroup, Dialog } from '@blueprintjs/core';\nimport StdCard from './StdCard';\nimport CardHeader from './CardHeader';\nimport Client from '../../Modules/Client/Client';\n\nvar DataManagerCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataManagerCard, _Component);\n\n  function DataManagerCard(props) {\n    var _this;\n\n    _classCallCheck(this, DataManagerCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataManagerCard).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      modal: false,\n      tableData: _this.props.data,\n      userRole: ''\n    };\n    return _this;\n  }\n\n  _createClass(DataManagerCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        userRole: Client.User.getRole()\n      });\n      console.log(this.state.userRole);\n    }\n  }, {\n    key: \"canAdd\",\n    value: function canAdd() {\n      var role = Client.User.getRole();\n      return role !== 'ADMIN' || role !== 'ROOT';\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var modal = this.state.modal;\n      return React.createElement(StdCard, {\n        icon: this.props.icon,\n        headerText: this.props.headerText,\n        size: this.props.cardSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.cardCaption, React.createElement(ButtonGroup, {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"add\",\n        minimal: true,\n        onClick: this.toggle,\n        disabled: this.canAdd(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.props.addButtonText))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), this.props.table, this.props.children, React.createElement(Dialog, {\n        id: this.props.id,\n        isOpen: modal,\n        onClose: this.toggle,\n        toggle: this.toggle //className='modal-full modal-my'\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"user\",\n        className: \"header-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), this.props.modalHeaderText, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"cross\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.props.addForm))));\n    }\n  }]);\n\n  return DataManagerCard;\n}(Component);\n\nexport { DataManagerCard as default };\nDataManagerCard.defaultProps = {\n  cardSize: 'xl',\n  icon: 'square',\n  headerText: 'headerText',\n  cardCaption: 'cardCaption',\n  addButtonText: 'addButtonText',\n  id: 'id',\n  modalHeaderText: 'modalHeaderText',\n  addForm: '<div></div>',\n  table: 'some data'\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/DataManagerCard.jsx"],"names":["React","Component","CardBody","Card","Icon","Button","ButtonGroup","Dialog","StdCard","CardHeader","Client","DataManagerCard","props","toggle","bind","state","modal","tableData","data","userRole","setState","User","getRole","console","log","role","prevState","icon","headerText","cardSize","cardCaption","canAdd","addButtonText","table","children","id","modalHeaderText","addForm","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { CardBody } from 'reactstrap';\nimport { Card, Icon, Button, ButtonGroup, Dialog } from '@blueprintjs/core';\nimport StdCard from './StdCard';\nimport CardHeader from './CardHeader';\nimport Client from '../../Modules/Client/Client';\n\nexport default class DataManagerCard extends Component {\n   constructor(props) {\n      super(props);\n      this.toggle = this.toggle.bind(this);\n      this.state = {\n         modal: false,\n         tableData: this.props.data,\n         userRole: ''\n      };\n   }\n   componentDidMount() {\n      this.setState({ userRole: Client.User.getRole() });\n      console.log(this.state.userRole);\n   }\n\n   canAdd() {\n      let role = Client.User.getRole();\n      return role !== 'ADMIN' || role !== 'ROOT';\n   }\n   toggle() {\n      this.setState(prevState => ({\n         modal: !prevState.modal\n      }));\n   }\n   render() {\n      const { modal } = this.state;\n\n      return (\n         <StdCard\n            icon={this.props.icon}\n            headerText={this.props.headerText}\n            size={this.props.cardSize}\n         >\n            <h5>\n               {this.props.cardCaption}\n               <ButtonGroup className='float-right'>\n                  <Button\n                     icon='add'\n                     minimal\n                     onClick={this.toggle}\n                     disabled={this.canAdd()}\n                  >\n                     {this.props.addButtonText}\n                  </Button>\n               </ButtonGroup>\n            </h5>\n            <hr />\n            {this.props.table}\n            {this.props.children}\n            <Dialog\n               id={this.props.id}\n               isOpen={modal}\n               onClose={this.toggle}\n               toggle={this.toggle}\n               //className='modal-full modal-my'\n            >\n               <Card>\n                  <CardHeader>\n                     <Icon icon='user' className='header-icon' />\n                     {this.props.modalHeaderText}\n                     <div className='float-right'>\n                        <Icon icon='cross' onClick={this.toggle} />\n                     </div>\n                  </CardHeader>\n                  <CardBody className='card-body'>\n                     {this.props.addForm}\n                  </CardBody>\n               </Card>\n            </Dialog>\n         </StdCard>\n      );\n   }\n}\n\nDataManagerCard.defaultProps = {\n   cardSize: 'xl',\n   icon: 'square',\n   headerText: 'headerText',\n   cardCaption: 'cardCaption',\n   addButtonText: 'addButtonText',\n   id: 'id',\n   modalHeaderText: 'modalHeaderText',\n   addForm: '<div></div>',\n   table: 'some data'\n};\n"]},"metadata":{},"sourceType":"module"}