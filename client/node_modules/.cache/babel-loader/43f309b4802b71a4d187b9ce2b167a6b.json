{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n  }\n\n  _createClass(Auth, null, [{\n    key: \"authenticateUser\",\n\n    /**\r\n     * Authenticate a user. Save a token string in Local Storage\r\n     *\r\n     * @param {string} token\r\n     */\n    value: function authenticateUser(token) {\n      localStorage.setItem(\"token\", token);\n    }\n    /**\r\n     * Check if a user is authenticated - check if a token is saved in Local Storage\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"isUserAuthenticated\",\n    value: function isUserAuthenticated() {\n      return localStorage.getItem(\"token\") !== null;\n    }\n    /**\r\n     * Deauthenticate a user. Remove a token from Local Storage.\r\n     *\r\n     */\n\n  }, {\n    key: \"deauthenticateUser\",\n    value: function deauthenticateUser() {\n      localStorage.removeItem(\"token\");\n    }\n    /**\r\n     * Get a token value.\r\n     *\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return localStorage.getItem(\"token\");\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport default Auth;","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/Modules/Auth/Auth.js"],"names":["Auth","token","localStorage","setItem","getItem","removeItem"],"mappings":";;;IAAMA,I;;;;;;;;;;AACH;;;;;qCAKwBC,K,EAAO;AAC5BC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACF;AAED;;;;;;;;0CAK6B;AAC1B,aAAOC,YAAY,CAACE,OAAb,CAAqB,OAArB,MAAkC,IAAzC;AACF;AAED;;;;;;;yCAI4B;AACzBF,MAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACF;AAED;;;;;;;;+BAMkB;AACf,aAAOH,YAAY,CAACE,OAAb,CAAqB,OAArB,CAAP;AACF;;;;;;AAGJ,eAAeJ,IAAf","sourcesContent":["class Auth {\r\n   /**\r\n    * Authenticate a user. Save a token string in Local Storage\r\n    *\r\n    * @param {string} token\r\n    */\r\n   static authenticateUser(token) {\r\n      localStorage.setItem(\"token\", token);\r\n   }\r\n\r\n   /**\r\n    * Check if a user is authenticated - check if a token is saved in Local Storage\r\n    *\r\n    * @returns {boolean}\r\n    */\r\n   static isUserAuthenticated() {\r\n      return localStorage.getItem(\"token\") !== null;\r\n   }\r\n\r\n   /**\r\n    * Deauthenticate a user. Remove a token from Local Storage.\r\n    *\r\n    */\r\n   static deauthenticateUser() {\r\n      localStorage.removeItem(\"token\");\r\n   }\r\n\r\n   /**\r\n    * Get a token value.\r\n    *\r\n    * @returns {string}\r\n    */\r\n\r\n   static getToken() {\r\n      return localStorage.getItem(\"token\");\r\n   }\r\n}\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}