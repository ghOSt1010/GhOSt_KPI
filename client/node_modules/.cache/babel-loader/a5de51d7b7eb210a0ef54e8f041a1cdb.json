{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Projects/components/ProjectForm.jsx\";\nimport React, { Component } from 'react';\nimport { Button, FormGroup, InputGroup, ButtonGroup } from '@blueprintjs/core';\nimport ProjectTypeOptions from '../../../components/Selects/ProjectTypeOptions';\n\nvar ProjectForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectForm, _Component);\n\n  function ProjectForm() {\n    _classCallCheck(this, ProjectForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProjectForm).apply(this, arguments));\n  }\n\n  _createClass(ProjectForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        label: \"name\",\n        labelFor: \"name\",\n        labelInfo: \"(required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"name\",\n        leftIcon: \"project\",\n        onChange: this.props.onChange,\n        placeholder: \"Project Name...\",\n        type: \"text\",\n        value: this.props.name,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        label: \"manager\",\n        labelFor: \"manager\",\n        labelInfo: \"(required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"manager\",\n        leftIcon: \"user\",\n        onChange: this.props.onChange,\n        placeholder: \"Manager...\",\n        type: \"text\",\n        value: this.props.email,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        label: \"Password\",\n        labelFor: \"password\",\n        labelInfo: \"(required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        id: \"password\",\n        leftIcon: \"key\",\n        onChange: this.props.onChange,\n        placeholder: \"Projectname...\",\n        type: \"password\",\n        value: this.props.password,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.props.onClear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.clearButtonCaption), React.createElement(Button, {\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.buttonCaption))));\n    }\n  }]);\n\n  return ProjectForm;\n}(Component);\n\nexport { ProjectForm as default };\nProjectForm.defaultProps = {\n  clearButtonCaption: 'Clear'\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Projects/components/ProjectForm.jsx"],"names":["React","Component","Button","FormGroup","InputGroup","ButtonGroup","ProjectTypeOptions","ProjectForm","props","onChange","name","email","password","onClear","clearButtonCaption","onClick","buttonCaption","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAwCC,WAAxC,QAA2D,mBAA3D;AACA,OAAOC,kBAAP,MAA+B,gDAA/B;;IAEqBC,W;;;;;;;;;;;;;6BACT;AACN,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,MAAjB;AAAwB,QAAA,QAAQ,EAAC,MAAjC;AAAwC,QAAA,SAAS,EAAC,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,UAAD;AACG,QAAA,EAAE,EAAC,MADN;AAEG,QAAA,QAAQ,EAAC,SAFZ;AAGG,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAHxB;AAIG,QAAA,WAAW,EAAC,iBAJf;AAKG,QAAA,IAAI,EAAC,MALR;AAMG,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,IANrB;AAOG,QAAA,IAAI,MAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADH,EAYG,oBAAC,SAAD;AACG,QAAA,KAAK,EAAC,SADT;AAEG,QAAA,QAAQ,EAAC,SAFZ;AAGG,QAAA,SAAS,EAAC,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,oBAAC,UAAD;AACG,QAAA,EAAE,EAAC,SADN;AAEG,QAAA,QAAQ,EAAC,MAFZ;AAGG,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,QAHxB;AAIG,QAAA,WAAW,EAAC,YAJf;AAKG,QAAA,IAAI,EAAC,MALR;AAMG,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWG,KANrB;AAOG,QAAA,IAAI,MAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CAZH,EA2BG,oBAAC,SAAD;AACG,QAAA,KAAK,EAAC,UADT;AAEG,QAAA,QAAQ,EAAC,UAFZ;AAGG,QAAA,SAAS,EAAC,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,oBAAC,UAAD;AACG,QAAA,EAAE,EAAC,UADN;AAEG,QAAA,QAAQ,EAAC,KAFZ;AAGG,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWC,QAHxB;AAIG,QAAA,WAAW,EAAC,gBAJf;AAKG,QAAA,IAAI,EAAC,UALR;AAMG,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWI,QANrB;AAOG,QAAA,IAAI,MAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CA3BH,EA0CG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKL,KAAL,CAAWM,kBADf,CADH,EAIG,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKP,KAAL,CAAWQ,aADf,CAJH,CADH,CA1CH,CADH;AAuDF;;;;EAzDqCf,S;;SAApBM,W;AA2DrBA,WAAW,CAACU,YAAZ,GAA2B;AACxBH,EAAAA,kBAAkB,EAAE;AADI,CAA3B","sourcesContent":["import React, { Component } from 'react';\nimport { Button, FormGroup, InputGroup, ButtonGroup } from '@blueprintjs/core';\nimport ProjectTypeOptions from '../../../components/Selects/ProjectTypeOptions';\n\nexport default class ProjectForm extends Component {\n   render() {\n      return (\n         <div>\n            <FormGroup label='name' labelFor='name' labelInfo='(required)'>\n               <InputGroup\n                  id='name'\n                  leftIcon='project'\n                  onChange={this.props.onChange}\n                  placeholder='Project Name...'\n                  type='text'\n                  value={this.props.name}\n                  fill\n               />\n            </FormGroup>\n            <FormGroup\n               label='manager'\n               labelFor='manager'\n               labelInfo='(required)'\n            >\n               <InputGroup\n                  id='manager'\n                  leftIcon='user'\n                  onChange={this.props.onChange}\n                  placeholder='Manager...'\n                  type='text'\n                  value={this.props.email}\n                  fill\n               />\n            </FormGroup>\n            <FormGroup\n               label='Password'\n               labelFor='password'\n               labelInfo='(required)'\n            >\n               <InputGroup\n                  id='password'\n                  leftIcon='key'\n                  onChange={this.props.onChange}\n                  placeholder='Projectname...'\n                  type='password'\n                  value={this.props.password}\n                  fill\n               />\n            </FormGroup>\n            <div className='text-right'>\n               <ButtonGroup>\n                  <Button onClick={this.props.onClear}>\n                     {this.props.clearButtonCaption}\n                  </Button>\n                  <Button onClick={this.props.onClick}>\n                     {this.props.buttonCaption}\n                  </Button>\n               </ButtonGroup>\n            </div>\n         </div>\n      );\n   }\n}\nProjectForm.defaultProps = {\n   clearButtonCaption: 'Clear'\n};\n"]},"metadata":{},"sourceType":"module"}