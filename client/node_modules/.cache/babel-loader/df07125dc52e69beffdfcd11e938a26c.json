{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport Auth from '../Auth/Auth';\n\nfunction token() {\n  return _token.apply(this, arguments);\n}\n/**\n * @returns {Object} axios custom instance with Authorization JWT token header\n * @description Requests are modified with Authorization header (JWT)\n */\n\n\nfunction _token() {\n  _token = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Auth.getToken();\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _token.apply(this, arguments);\n}\n\nexport default axios.create({\n  headers: {\n    Authorization: 'Token ' + token()\n  }\n}); //axios.defaults.headers.common['Authorization'] = 'Token ' + User.getUserJWTToken();","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/Modules/Client/API/Requests/Request.js"],"names":["axios","Auth","token","getToken","create","headers","Authorization"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;SAEeC,K;;;AAIf;;;;;;;;;2BAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACgBD,IAAI,CAACE,QAAL,EADhB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAQA,eAAeH,KAAK,CAACI,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE;AACNC,IAAAA,aAAa,EAAE,WAAWJ,KAAK;AADzB;AADgB,CAAb,CAAf,C,CAKA","sourcesContent":["import axios from 'axios';\nimport Auth from '../Auth/Auth';\n\nasync function token() {\n   return await Auth.getToken();\n}\n\n/**\n * @returns {Object} axios custom instance with Authorization JWT token header\n * @description Requests are modified with Authorization header (JWT)\n */\nexport default axios.create({\n   headers: {\n      Authorization: 'Token ' + token()\n   }\n});\n//axios.defaults.headers.common['Authorization'] = 'Token ' + User.getUserJWTToken();\n"]},"metadata":{},"sourceType":"module"}