{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport API from '../../API';\nimport Request from '../../Requests/Request';\nimport Team from './DTO/Team';\n/**\n * @author Rafal Cymbalsita\n * @class TeamsService\n * @description TeamsService : HTTP communication layer\n * @static\n */\n\nvar TeamsService =\n/*#__PURE__*/\nfunction () {\n  function TeamsService() {\n    _classCallCheck(this, TeamsService);\n  }\n\n  _createClass(TeamsService, null, [{\n    key: \"createTeamDTO\",\n\n    /**\n     * @public\n     * @param {String} Name\n     * @param {ObjectID} Manager\n     *\n     */\n    value: function createTeamDTO(name, manager) {\n      return new Team(name, manager).getTeamDTO();\n    }\n    /**\n     * @public\n     * @param {Team} Team\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"saveTeam\",\n    value: function () {\n      var _saveTeam = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(Team) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Request.post(API.ROUTES.TEAMS.CREATE_NEW_TEAM, Team).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function saveTeam(_x) {\n        return _saveTeam.apply(this, arguments);\n      }\n\n      return saveTeam;\n    }()\n    /**\n     * @public\n     * @param {Team} Team\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"updateTeam\",\n    value: function () {\n      var _updateTeam = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(Team) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Request.put(API.ROUTES.TEAMS.UPDATE_TEAM, Team).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updateTeam(_x2) {\n        return _updateTeam.apply(this, arguments);\n      }\n\n      return updateTeam;\n    }()\n    /**\n     * @public\n     * @param {id} Team._id\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"deleteTeamByID\",\n    value: function () {\n      var _deleteTeamByID = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Request.delete(API.ROUTES.TEAMS.DELETE_TEAM_BY_ID + id).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function deleteTeamByID(_x3) {\n        return _deleteTeamByID.apply(this, arguments);\n      }\n\n      return deleteTeamByID;\n    }()\n    /**\n     * @public\n     * @returns - HTTP Response\n     * @throws - HTTP Axios Error\n     */\n\n  }, {\n    key: \"getTeams\",\n    value: function () {\n      var _getTeams = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Request.get(API.ROUTES.TEAMS.GET_TEAMS).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getTeams() {\n        return _getTeams.apply(this, arguments);\n      }\n\n      return getTeams;\n    }()\n    /**\n     * @public\n     * @param {id} Team._id\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"getTeamById\",\n    value: function () {\n      var _getTeamById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Request.get(API.ROUTES.TEAMS.GET_TEAM_BY_ID + id).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getTeamById(_x4) {\n        return _getTeamById.apply(this, arguments);\n      }\n\n      return getTeamById;\n    }()\n    /**\n     * @public\n     * @param {name} Team.name\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"getTeamByName\",\n    value: function () {\n      var _getTeamByName = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(name) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Request.get(API.ROUTES.TEAMS.GET_TEAM_BY_NAME + name).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getTeamByName(_x5) {\n        return _getTeamByName.apply(this, arguments);\n      }\n\n      return getTeamByName;\n    }()\n  }]);\n\n  return TeamsService;\n}();\n\nexport { TeamsService as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/Modules/Client/API/Services/TeamsService/TeamsService.js"],"names":["API","Request","Team","TeamsService","name","manager","getTeamDTO","post","ROUTES","TEAMS","CREATE_NEW_TEAM","then","result","catch","err","put","UPDATE_TEAM","id","delete","DELETE_TEAM_BY_ID","get","GET_TEAMS","GET_TEAM_BY_ID","GET_TEAM_BY_NAME"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA;;;;;;;IAMqBC,Y;;;;;;;;;;AAClB;;;;;;kCAMqBC,I,EAAMC,O,EAAS;AACjC,aAAO,IAAIH,IAAJ,CAASE,IAAT,EAAeC,OAAf,EAAwBC,UAAxB,EAAP;AACF;AAED;;;;;;;;;;;gDAKsBJ,I;;;;;;uBACND,OAAO,CAACM,IAAR,CAAaP,GAAG,CAACQ,MAAJ,CAAWC,KAAX,CAAiBC,eAA9B,EAA+CR,IAA/C,EACTS,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;AAShB;;;;;;;;;;;iDAKwBZ,I;;;;;;uBACRD,OAAO,CAACc,GAAR,CAAYf,GAAG,CAACQ,MAAJ,CAAWC,KAAX,CAAiBO,WAA7B,EAA0Cd,IAA1C,EACTS,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;AAShB;;;;;;;;;;;iDAK4BG,E;;;;;;uBACZhB,OAAO,CAACiB,MAAR,CAAelB,GAAG,CAACQ,MAAJ,CAAWC,KAAX,CAAiBU,iBAAjB,GAAqCF,EAApD,EACTN,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;AAShB;;;;;;;;;;;;;;;;;uBAMgBb,OAAO,CAACmB,GAAR,CAAYpB,GAAG,CAACQ,MAAJ,CAAWC,KAAX,CAAiBY,SAA7B,EACTV,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;AAShB;;;;;;;;;;;iDAKyBG,E;;;;;;uBACThB,OAAO,CAACmB,GAAR,CAAYpB,GAAG,CAACQ,MAAJ,CAAWC,KAAX,CAAiBa,cAAjB,GAAkCL,EAA9C,EACTN,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;AAShB;;;;;;;;;;;iDAK2BV,I;;;;;;uBACXH,OAAO,CAACmB,GAAR,CAAYpB,GAAG,CAACQ,MAAJ,CAAWC,KAAX,CAAiBc,gBAAjB,GAAoCnB,IAAhD,EACTO,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;;;;;;SA5FEX,Y","sourcesContent":["import API from '../../API';\nimport Request from '../../Requests/Request';\nimport Team from './DTO/Team';\n\n/**\n * @author Rafal Cymbalsita\n * @class TeamsService\n * @description TeamsService : HTTP communication layer\n * @static\n */\nexport default class TeamsService {\n   /**\n    * @public\n    * @param {String} Name\n    * @param {ObjectID} Manager\n    *\n    */\n   static createTeamDTO(name, manager) {\n      return new Team(name, manager).getTeamDTO();\n   }\n\n   /**\n    * @public\n    * @param {Team} Team\n    * @returns - HTTP Response\n    */\n   static async saveTeam(Team) {\n      return await Request.post(API.ROUTES.TEAMS.CREATE_NEW_TEAM, Team)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @param {Team} Team\n    * @returns - HTTP Response\n    */\n   static async updateTeam(Team) {\n      return await Request.put(API.ROUTES.TEAMS.UPDATE_TEAM, Team)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @param {id} Team._id\n    * @returns - HTTP Response\n    */\n   static async deleteTeamByID(id) {\n      return await Request.delete(API.ROUTES.TEAMS.DELETE_TEAM_BY_ID + id)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @returns - HTTP Response\n    * @throws - HTTP Axios Error\n    */\n   static async getTeams() {\n      return await Request.get(API.ROUTES.TEAMS.GET_TEAMS)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @param {id} Team._id\n    * @returns - HTTP Response\n    */\n   static async getTeamById(id) {\n      return await Request.get(API.ROUTES.TEAMS.GET_TEAM_BY_ID + id)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @param {name} Team.name\n    * @returns - HTTP Response\n    */\n   static async getTeamByName(name) {\n      return await Request.get(API.ROUTES.TEAMS.GET_TEAM_BY_NAME + name)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n}\n"]},"metadata":{},"sourceType":"module"}