{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/AppBar/AppBar.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Navbar, Button, Alignment, Menu, MenuItem, MenuDivider, Popover, Position, Breadcrumbs } from '@blueprintjs/core';\nimport MainMenu from './components/MainMenu';\nimport UIManager from '../../Modules/UIManager/UIManager';\nimport Client from '../../Modules/Client/Client';\nimport './AppBar.css';\nvar BREADCRUMBS = [{\n  href: '/home',\n  icon: 'home'\n}];\n\nvar AppBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppBar, _Component);\n\n  function AppBar(props) {\n    var _this;\n\n    _classCallCheck(this, AppBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppBar).call(this, props));\n\n    _this.handleLogout = function (e) {\n      e.preventDefault();\n      Client.logout();\n\n      _this.setState({\n        logout: true\n      });\n    };\n\n    _this.state = {\n      themeIcon: UIManager.isDarkThemeEnabled() ? 'flash' : 'moon',\n      themeToSwitch: UIManager.isDarkThemeEnabled() ? 'Light' : 'Dark',\n      logout: false,\n      goHome: false\n    };\n    _this.switchTheme = _this.switchTheme.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogout = _this.handleLogout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppBar, [{\n    key: \"switchTheme\",\n    value: function switchTheme() {\n      UIManager.swtichTheme();\n      UIManager.setChartView();\n      this.setState({\n        themeIcon: UIManager.isDarkThemeEnabled() ? 'flash' : 'moon',\n        themeToSwitch: UIManager.isDarkThemeEnabled() ? 'Light' : 'Dark'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.logout) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      }\n\n      var rightMenu = React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/UserProfile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        icon: \"user\",\n        text: \"Profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(Link, {\n        to: \"/Settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        icon: \"cog\",\n        text: \"Settings...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(MenuItem, {\n        icon: this.state.themeIcon,\n        text: this.state.themeToSwitch + ' mode',\n        onClick: this.switchTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(MenuDivider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        icon: \"log-out\",\n        text: \"Logout...\",\n        onClick: this.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n      return React.createElement(Navbar, {\n        fixedToTop: true,\n        className: \"no-border border-bottom-0 pl-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Navbar.Group, {\n        align: Alignment.LEFT,\n        className: \"adjust-nav-group \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Popover, {\n        content: React.createElement(MainMenu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }),\n        position: Position.BOTTOM,\n        minimal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Button, {\n        minimal: true,\n        icon: \"circle\",\n        intent: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(Navbar.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Button, {\n        minimal: true,\n        icon: \"home\",\n        intent: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(Breadcrumbs, {\n        items: BREADCRUMBS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(Navbar.Group, {\n        align: Alignment.RIGHT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Popover, {\n        content: rightMenu,\n        position: Position.BOTTOM,\n        minimal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"bp3-minimal\",\n        icon: \"property\",\n        text: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AppBar;\n}(Component);\n\nexport { AppBar as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/AppBar/AppBar.jsx"],"names":["React","Component","Redirect","Link","Navbar","Button","Alignment","Menu","MenuItem","MenuDivider","Popover","Position","Breadcrumbs","MainMenu","UIManager","Client","BREADCRUMBS","href","icon","AppBar","props","handleLogout","e","preventDefault","logout","setState","state","themeIcon","isDarkThemeEnabled","themeToSwitch","goHome","switchTheme","bind","swtichTheme","setChartView","rightMenu","LEFT","BOTTOM","RIGHT"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,SACGC,MADH,EAEGC,MAFH,EAGGC,SAHH,EAIGC,IAJH,EAKGC,QALH,EAMGC,WANH,EAOGC,OAPH,EAQGC,QARH,EASGC,WATH,QAUO,mBAVP;AAWA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAO,cAAP;AAEA,IAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAAD,CAApB;;IAEqBC,M;;;;;AAClB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAChB,gFAAMA,KAAN;;AADgB,UAqBnBC,YArBmB,GAqBJ,UAAAC,CAAC,EAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACAR,MAAAA,MAAM,CAACS,MAAP;;AACA,YAAKC,QAAL,CAAc;AACXD,QAAAA,MAAM,EAAE;AADG,OAAd;AAGF,KA3BkB;;AAEhB,UAAKE,KAAL,GAAa;AACVC,MAAAA,SAAS,EAAEb,SAAS,CAACc,kBAAV,KAAiC,OAAjC,GAA2C,MAD5C;AAEVC,MAAAA,aAAa,EAAEf,SAAS,CAACc,kBAAV,KAAiC,OAAjC,GAA2C,MAFhD;AAGVJ,MAAAA,MAAM,EAAE,KAHE;AAIVM,MAAAA,MAAM,EAAE;AAJE,KAAb;AAMA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKX,YAAL,GAAoB,MAAKA,YAAL,CAAkBW,IAAlB,uDAApB;AATgB;AAUlB;;;;kCAEa;AACXlB,MAAAA,SAAS,CAACmB,WAAV;AACAnB,MAAAA,SAAS,CAACoB,YAAV;AACA,WAAKT,QAAL,CAAc;AACXE,QAAAA,SAAS,EAAEb,SAAS,CAACc,kBAAV,KAAiC,OAAjC,GAA2C,MAD3C;AAEXC,QAAAA,aAAa,EAAEf,SAAS,CAACc,kBAAV,KAAiC,OAAjC,GAA2C;AAF/C,OAAd;AAIF;;;6BAUQ;AACN,UAAI,KAAKF,KAAL,CAAWF,MAAf,EAAuB;AACpB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACF;;AAED,UAAIW,SAAS,GACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,IAAI,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADH,EAIG,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,KAAf;AAAqB,QAAA,IAAI,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CAJH,EAOG,oBAAC,QAAD;AACG,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,SADpB;AAEG,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,aAAX,GAA2B,OAFpC;AAGG,QAAA,OAAO,EAAE,KAAKE,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPH,EAYG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZH,EAaG,oBAAC,QAAD;AACG,QAAA,IAAI,EAAC,SADR;AAEG,QAAA,IAAI,EAAC,WAFR;AAGG,QAAA,OAAO,EAAE,KAAKV,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbH,CADH;AAsBA,aACG,oBAAC,MAAD;AAAQ,QAAA,UAAU,MAAlB;AAAmB,QAAA,SAAS,EAAC,gCAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,MAAD,CAAQ,KAAR;AAAc,QAAA,KAAK,EAAEf,SAAS,CAAC8B,IAA/B;AAAqC,QAAA,SAAS,EAAC,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,OAAD;AACG,QAAA,OAAO,EAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ;AAEG,QAAA,QAAQ,EAAEzB,QAAQ,CAAC0B,MAFtB;AAGG,QAAA,OAAO,EAAE,IAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,IAAI,EAAC,QAArB;AAA8B,QAAA,MAAM,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CADH,EAQG,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARH,EASG,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,IAAI,EAAC,MAArB;AAA4B,QAAA,MAAM,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CATH,EAYG,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAErB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZH,CADH,EAeG,oBAAC,MAAD,CAAQ,KAAR;AAAc,QAAA,KAAK,EAAEV,SAAS,CAACgC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,OAAD;AACG,QAAA,OAAO,EAAEH,SADZ;AAEG,QAAA,QAAQ,EAAExB,QAAQ,CAAC0B,MAFtB;AAGG,QAAA,OAAO,EAAE,IAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,IAAI,EAAC,UAArC;AAAgD,QAAA,IAAI,EAAC,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CADH,CAfH,CADH;AA2BF;;;;EApFgCpC,S;;SAAfkB,M","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport {\r\n   Navbar,\r\n   Button,\r\n   Alignment,\r\n   Menu,\r\n   MenuItem,\r\n   MenuDivider,\r\n   Popover,\r\n   Position,\r\n   Breadcrumbs\r\n} from '@blueprintjs/core';\r\nimport MainMenu from './components/MainMenu';\r\nimport UIManager from '../../Modules/UIManager/UIManager';\r\nimport Client from '../../Modules/Client/Client';\r\nimport './AppBar.css';\r\n\r\nconst BREADCRUMBS = [{ href: '/home', icon: 'home' }];\r\n\r\nexport default class AppBar extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         themeIcon: UIManager.isDarkThemeEnabled() ? 'flash' : 'moon',\r\n         themeToSwitch: UIManager.isDarkThemeEnabled() ? 'Light' : 'Dark',\r\n         logout: false,\r\n         goHome: false\r\n      };\r\n      this.switchTheme = this.switchTheme.bind(this);\r\n      this.handleLogout = this.handleLogout.bind(this);\r\n   }\r\n\r\n   switchTheme() {\r\n      UIManager.swtichTheme();\r\n      UIManager.setChartView();\r\n      this.setState({\r\n         themeIcon: UIManager.isDarkThemeEnabled() ? 'flash' : 'moon',\r\n         themeToSwitch: UIManager.isDarkThemeEnabled() ? 'Light' : 'Dark'\r\n      });\r\n   }\r\n\r\n   handleLogout = e => {\r\n      e.preventDefault();\r\n      Client.logout();\r\n      this.setState({\r\n         logout: true\r\n      });\r\n   };\r\n\r\n   render() {\r\n      if (this.state.logout) {\r\n         return <Redirect to='/login' />;\r\n      }\r\n\r\n      var rightMenu = (\r\n         <Menu>\r\n            <Link to='/UserProfile'>\r\n               <MenuItem icon='user' text='Profile' />\r\n            </Link>\r\n            <Link to='/Settings'>\r\n               <MenuItem icon='cog' text='Settings...' />\r\n            </Link>\r\n            <MenuItem\r\n               icon={this.state.themeIcon}\r\n               text={this.state.themeToSwitch + ' mode'}\r\n               onClick={this.switchTheme}\r\n            />\r\n            <MenuDivider />\r\n            <MenuItem\r\n               icon='log-out'\r\n               text='Logout...'\r\n               onClick={this.handleLogout}\r\n            ></MenuItem>\r\n         </Menu>\r\n      );\r\n\r\n      return (\r\n         <Navbar fixedToTop className='no-border border-bottom-0 pl-0'>\r\n            <Navbar.Group align={Alignment.LEFT} className='adjust-nav-group '>\r\n               <Popover\r\n                  content={<MainMenu />}\r\n                  position={Position.BOTTOM}\r\n                  minimal={true}\r\n               >\r\n                  <Button minimal icon='circle' intent='primary'></Button>\r\n               </Popover>\r\n               <Navbar.Divider />\r\n               <Link to='/Home'>\r\n                  <Button minimal icon='home' intent='primary'></Button>\r\n               </Link>\r\n               <Breadcrumbs items={BREADCRUMBS} />\r\n            </Navbar.Group>\r\n            <Navbar.Group align={Alignment.RIGHT}>\r\n               <Popover\r\n                  content={rightMenu}\r\n                  position={Position.BOTTOM}\r\n                  minimal={true}\r\n               >\r\n                  <Button className='bp3-minimal' icon='property' text='' />\r\n               </Popover>\r\n            </Navbar.Group>\r\n         </Navbar>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}