{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport API from '../../API';\nimport Request from '../../Requests/Request';\nimport Project from './DTO/Project';\n/**\n * @author Rafal Cymbalsita\n * @class ProjectsService\n * @description ProjectsService : HTTP communication layer\n * @static\n */\n\nvar ProjectsService =\n/*#__PURE__*/\nfunction () {\n  function ProjectsService() {\n    _classCallCheck(this, ProjectsService);\n  }\n\n  _createClass(ProjectsService, null, [{\n    key: \"createProjectDTO\",\n\n    /**\n     * @public\n     * @param {String} Name\n     * @param {ObjectID} Manager\n     *\n     */\n    value: function createProjectDTO(name, manager) {\n      var project = new Project(name, manager);\n      return project.getProjectDTO();\n    }\n    /**\n     * @public\n     * @param {Project} project\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"saveProject\",\n    value: function () {\n      var _saveProject = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(project) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Request.post(API.ROUTES.PROJECTS.CREATE_NEW_PROEJCT, project).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function saveProject(_x) {\n        return _saveProject.apply(this, arguments);\n      }\n\n      return saveProject;\n    }()\n    /**\n     * @public\n     * @param {Project} project\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"updateProject\",\n    value: function () {\n      var _updateProject = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(project) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Request.put(API.ROUTES.PROJECTS.UPDATE_PROJECT, project).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updateProject(_x2) {\n        return _updateProject.apply(this, arguments);\n      }\n\n      return updateProject;\n    }()\n    /**\n     * @public\n     * @param {id} project._id\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"deleteProjectByID\",\n    value: function () {\n      var _deleteProjectByID = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Request.delete(API.ROUTES.PROJECTS.DELETE_PROJECT_BY_ID + id).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function deleteProjectByID(_x3) {\n        return _deleteProjectByID.apply(this, arguments);\n      }\n\n      return deleteProjectByID;\n    }()\n    /**\n     * @public\n     * @returns - HTTP Response\n     * @throws - HTTP Axios Error\n     */\n\n  }, {\n    key: \"getProjects\",\n    value: function () {\n      var _getProjects = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Request.get(API.ROUTES.PROJECTS.GET_PROJECTS).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getProjects() {\n        return _getProjects.apply(this, arguments);\n      }\n\n      return getProjects;\n    }()\n    /**\n     * @public\n     * @param {id} project._id\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"getProjectById\",\n    value: function () {\n      var _getProjectById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Request.get(API.ROUTES.PROJECTS.GET_PROJECT_BY_ID + id).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getProjectById(_x4) {\n        return _getProjectById.apply(this, arguments);\n      }\n\n      return getProjectById;\n    }()\n    /**\n     * @public\n     * @param {name} project.name\n     * @returns - HTTP Response\n     */\n\n  }, {\n    key: \"getProjectByName\",\n    value: function () {\n      var _getProjectByName = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(name) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Request.get(API.ROUTES.PROJECTS.GET_PROJECT_BY_NAME + name).then(function (result) {\n                  return result;\n                }).catch(function (err) {\n                  throw err;\n                });\n\n              case 2:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getProjectByName(_x5) {\n        return _getProjectByName.apply(this, arguments);\n      }\n\n      return getProjectByName;\n    }()\n  }]);\n\n  return ProjectsService;\n}();\n\nexport { ProjectsService as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/Modules/Client/API/Services/ProjectsService/ProjectsService.js"],"names":["API","Request","Project","ProjectsService","name","manager","project","getProjectDTO","post","ROUTES","PROJECTS","CREATE_NEW_PROEJCT","then","result","catch","err","put","UPDATE_PROJECT","id","delete","DELETE_PROJECT_BY_ID","get","GET_PROJECTS","GET_PROJECT_BY_ID","GET_PROJECT_BY_NAME"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA;;;;;;;IAMqBC,e;;;;;;;;;;AAClB;;;;;;qCAMwBC,I,EAAMC,O,EAAS;AACpC,UAAIC,OAAO,GAAG,IAAIJ,OAAJ,CAAYE,IAAZ,EAAkBC,OAAlB,CAAd;AACA,aAAOC,OAAO,CAACC,aAAR,EAAP;AACF;AAED;;;;;;;;;;;gDAKyBD,O;;;;;;uBACTL,OAAO,CAACO,IAAR,CAAaR,GAAG,CAACS,MAAJ,CAAWC,QAAX,CAAoBC,kBAAjC,EAAqDL,OAArD,EACTM,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;AAShB;;;;;;;;;;;iDAK2BT,O;;;;;;uBACXL,OAAO,CAACe,GAAR,CAAYhB,GAAG,CAACS,MAAJ,CAAWC,QAAX,CAAoBO,cAAhC,EAAgDX,OAAhD,EACTM,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;AAShB;;;;;;;;;;;iDAK+BG,E;;;;;;uBACfjB,OAAO,CAACkB,MAAR,CAAenB,GAAG,CAACS,MAAJ,CAAWC,QAAX,CAAoBU,oBAApB,GAA2CF,EAA1D,EACTN,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;AAShB;;;;;;;;;;;;;;;;;uBAMgBd,OAAO,CAACoB,GAAR,CAAYrB,GAAG,CAACS,MAAJ,CAAWC,QAAX,CAAoBY,YAAhC,EACTV,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;AAShB;;;;;;;;;;;iDAK4BG,E;;;;;;uBACZjB,OAAO,CAACoB,GAAR,CAAYrB,GAAG,CAACS,MAAJ,CAAWC,QAAX,CAAoBa,iBAApB,GAAwCL,EAApD,EACTN,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;AAShB;;;;;;;;;;;iDAK8BX,I;;;;;;uBACdH,OAAO,CAACoB,GAAR,CAAYrB,GAAG,CAACS,MAAJ,CAAWC,QAAX,CAAoBc,mBAApB,GAA0CpB,IAAtD,EACTQ,IADS,CACJ,UAAAC,MAAM,EAAI;AACb,yBAAOA,MAAP;AACF,iBAHS,EAITC,KAJS,CAIH,UAAAC,GAAG,EAAI;AACX,wBAAMA,GAAN;AACF,iBANS,C;;;;;;;;;;;;;;;;;;;;;;;;SA7FEZ,e","sourcesContent":["import API from '../../API';\nimport Request from '../../Requests/Request';\nimport Project from './DTO/Project';\n\n/**\n * @author Rafal Cymbalsita\n * @class ProjectsService\n * @description ProjectsService : HTTP communication layer\n * @static\n */\nexport default class ProjectsService {\n   /**\n    * @public\n    * @param {String} Name\n    * @param {ObjectID} Manager\n    *\n    */\n   static createProjectDTO(name, manager) {\n      let project = new Project(name, manager);\n      return project.getProjectDTO();\n   }\n\n   /**\n    * @public\n    * @param {Project} project\n    * @returns - HTTP Response\n    */\n   static async saveProject(project) {\n      return await Request.post(API.ROUTES.PROJECTS.CREATE_NEW_PROEJCT, project)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @param {Project} project\n    * @returns - HTTP Response\n    */\n   static async updateProject(project) {\n      return await Request.put(API.ROUTES.PROJECTS.UPDATE_PROJECT, project)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @param {id} project._id\n    * @returns - HTTP Response\n    */\n   static async deleteProjectByID(id) {\n      return await Request.delete(API.ROUTES.PROJECTS.DELETE_PROJECT_BY_ID + id)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @returns - HTTP Response\n    * @throws - HTTP Axios Error\n    */\n   static async getProjects() {\n      return await Request.get(API.ROUTES.PROJECTS.GET_PROJECTS)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @param {id} project._id\n    * @returns - HTTP Response\n    */\n   static async getProjectById(id) {\n      return await Request.get(API.ROUTES.PROJECTS.GET_PROJECT_BY_ID + id)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n\n   /**\n    * @public\n    * @param {name} project.name\n    * @returns - HTTP Response\n    */\n   static async getProjectByName(name) {\n      return await Request.get(API.ROUTES.PROJECTS.GET_PROJECT_BY_NAME + name)\n         .then(result => {\n            return result;\n         })\n         .catch(err => {\n            throw err;\n         });\n   }\n}\n"]},"metadata":{},"sourceType":"module"}