{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Table/ContactTargetTable/ContactTargetTable.jsx\";\nimport React, { Component } from 'react';\nimport { Table, Button, ButtonGroup, Modal, Card, CardHeader, CardBody, Spinner } from 'reactstrap';\nimport axios from 'axios';\nimport UpdateContactTargetForm from '../../Forms/ContactTargetForms/UpdateContactTargetForm';\nimport Auth from '../../../Modules/Auth/Auth';\n\nvar ContactTargetTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactTargetTable, _Component);\n\n  function ContactTargetTable(props) {\n    var _this;\n\n    _classCallCheck(this, ContactTargetTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactTargetTable).call(this, props));\n    _this.getcontactTargets = _this.getcontactTargets.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderTableHeaders = _this.renderTableHeaders.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderTableData = _this.renderTableData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      modal: false,\n      theme: _this.props.theme,\n      isLoading: true,\n      id: '',\n      role: '',\n      supportType: '',\n      en: '',\n      target: '',\n      message: '',\n      contactTargets: []\n    };\n    return _this;\n  }\n\n  _createClass(ContactTargetTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getcontactTargets();\n    }\n  }, {\n    key: \"getcontactTargets\",\n    value: function getcontactTargets() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var URL = '/api/employees/contacttargets/all';\n      axios.get(URL).then(function (res) {\n        _this2.setState({\n          contactTargets: res.data,\n          isLoading: false\n        });\n      }).catch(function (err) {\n        alert('Error loading Contact Targets table');\n\n        _this2.setState({\n          isLoading: false,\n          message: 'Error loading Contact Targets'\n        });\n\n        console.log(JSON.stringify(err));\n      });\n    }\n  }, {\n    key: \"setTheme\",\n    value: function setTheme() {\n      var theme = this.state.theme;\n\n      if (theme === 'dark') {\n        return 'bg-dark text-white table-dark';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"setCardTheme\",\n    value: function setCardTheme() {\n      var theme = this.state.theme;\n\n      if (theme === 'dark') {\n        return 'bg-dark text-white';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"addActionButton\",\n    value: function addActionButton(target) {\n      var _this3 = this;\n\n      return React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        onClick: function onClick(e) {\n          return _this3.handleClick(e, 'edit', target);\n        },\n        disabled: !Auth.isAdminOrRoot(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e, action, target) {\n      e.preventDefault();\n      if (action === 'edit') this.edittarget(target);\n    }\n  }, {\n    key: \"edittarget\",\n    value: function edittarget(target) {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n      this.setState({\n        id: target._id,\n        role: target.role._id,\n        supportType: target.supportType,\n        en: target.en,\n        target: target.target\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"renderTableHeaders\",\n    value: function renderTableHeaders() {\n      return React.createElement(\"tr\", {\n        className: \"bg-black text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Role\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Support Type\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"EN / Non EN\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Target\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Action\"));\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      var _this4 = this;\n\n      return this.state.contactTargets.map(function (target, index) {\n        return React.createElement(\"tr\", {\n          key: target._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, target.role.role), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, target.supportType), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, _this4.markEN(target.en)), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, target.target), React.createElement(\"td\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, _this4.addActionButton(target)));\n      });\n    }\n  }, {\n    key: \"markEN\",\n    value: function markEN(en) {\n      if (en) {\n        return React.createElement(\"i\", {\n          className: \"fas fa-check text-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"i\", {\n        className: \"fas fa-times text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          theme = _this$state.theme,\n          isLoading = _this$state.isLoading,\n          message = _this$state.message,\n          modal = _this$state.modal,\n          id = _this$state.id,\n          role = _this$state.role,\n          supportType = _this$state.supportType,\n          en = _this$state.en,\n          target = _this$state.target,\n          contactTargets = _this$state.contactTargets;\n\n      if (isLoading) {\n        return React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }));\n      }\n\n      if (contactTargets.lenght === 0) {\n        return React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"There are no contact targets in database\");\n      }\n\n      if (message) {\n        return React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"No data found...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"All Available targets\", React.createElement(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        ref: \"getcontactTargetsData\",\n        id: \"getcontactTargetsData\",\n        className: \"float-right\",\n        onClick: this.getcontactTargets,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-sync-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(Table, {\n        responsive: true,\n        borderless: true,\n        striped: true,\n        hover: true,\n        size: \"sm\",\n        className: this.setTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, this.renderTableHeaders()), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, this.renderTableData())), React.createElement(Modal, {\n        isOpen: modal,\n        toggle: true,\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.setCardTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"fas fa-chart-line header-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), \"Edit target\", React.createElement(\"span\", {\n        className: \"far fa-window-restore float-right header-icon text-secondary\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        className: this.setTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(UpdateContactTargetForm, {\n        theme: theme,\n        id: id,\n        role: role,\n        supportType: supportType,\n        en: en,\n        target: target,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ContactTargetTable;\n}(Component);\n/*\r\n\r\n*/\n\n\nexport { ContactTargetTable as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Table/ContactTargetTable/ContactTargetTable.jsx"],"names":["React","Component","Table","Button","ButtonGroup","Modal","Card","CardHeader","CardBody","Spinner","axios","UpdateContactTargetForm","Auth","ContactTargetTable","props","getcontactTargets","bind","renderTableHeaders","renderTableData","handleClick","closeModal","state","modal","theme","isLoading","id","role","supportType","en","target","message","contactTargets","setState","URL","get","then","res","data","catch","err","alert","console","log","JSON","stringify","e","isAdminOrRoot","action","preventDefault","edittarget","prevState","_id","map","index","markEN","addActionButton","lenght","setTheme","setCardTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Table,\r\n   Button,\r\n   ButtonGroup,\r\n   Modal,\r\n   Card,\r\n   CardHeader,\r\n   CardBody,\r\n   Spinner\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport UpdateContactTargetForm from '../../Forms/ContactTargetForms/UpdateContactTargetForm';\r\nimport Auth from '../../../Modules/Auth/Auth';\r\n\r\nexport default class ContactTargetTable extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.getcontactTargets = this.getcontactTargets.bind(this);\r\n      this.renderTableHeaders = this.renderTableHeaders.bind(this);\r\n      this.renderTableData = this.renderTableData.bind(this);\r\n      this.handleClick = this.handleClick.bind(this);\r\n      this.closeModal = this.closeModal.bind(this);\r\n      this.state = {\r\n         modal: false,\r\n         theme: this.props.theme,\r\n         isLoading: true,\r\n         id: '',\r\n         role: '',\r\n         supportType: '',\r\n         en: '',\r\n         target: '',\r\n         message: '',\r\n         contactTargets: []\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.getcontactTargets();\r\n   }\r\n\r\n   getcontactTargets() {\r\n      this.setState({ isLoading: true });\r\n\r\n      const URL = '/api/employees/contacttargets/all';\r\n\r\n      axios\r\n         .get(URL)\r\n         .then(res => {\r\n            this.setState({\r\n               contactTargets: res.data,\r\n               isLoading: false\r\n            });\r\n         })\r\n         .catch(err => {\r\n            alert('Error loading Contact Targets table');\r\n            this.setState({\r\n               isLoading: false,\r\n               message: 'Error loading Contact Targets'\r\n            });\r\n            console.log(JSON.stringify(err));\r\n         });\r\n   }\r\n\r\n   setTheme() {\r\n      const { theme } = this.state;\r\n      if (theme === 'dark') {\r\n         return 'bg-dark text-white table-dark';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   setCardTheme() {\r\n      const { theme } = this.state;\r\n      if (theme === 'dark') {\r\n         return 'bg-dark text-white';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   addActionButton(target) {\r\n      return (\r\n         <ButtonGroup>\r\n            <Button\r\n               size='sm'\r\n               onClick={e => this.handleClick(e, 'edit', target)}\r\n               disabled={!Auth.isAdminOrRoot()}\r\n            >\r\n               <span className='fas fa-edit' />\r\n            </Button>\r\n         </ButtonGroup>\r\n      );\r\n   }\r\n\r\n   handleClick(e, action, target) {\r\n      e.preventDefault();\r\n      if (action === 'edit') this.edittarget(target);\r\n   }\r\n\r\n   edittarget(target) {\r\n      this.setState(prevState => ({\r\n         modal: !prevState.modal\r\n      }));\r\n      this.setState({\r\n         id: target._id,\r\n         role: target.role._id,\r\n         supportType: target.supportType,\r\n         en: target.en,\r\n         target: target.target\r\n      });\r\n   }\r\n\r\n   closeModal() {\r\n      this.setState(prevState => ({\r\n         modal: !prevState.modal\r\n      }));\r\n   }\r\n\r\n   renderTableHeaders() {\r\n      return (\r\n         <tr className='bg-black text-white'>\r\n            <th>Role</th>\r\n            <th>Support Type</th>\r\n            <th className='text-center'>EN / Non EN</th>\r\n            <th className='text-center'>Target</th>\r\n            <th className='text-center'>Action</th>\r\n         </tr>\r\n      );\r\n   }\r\n\r\n   renderTableData() {\r\n      return this.state.contactTargets.map((target, index) => {\r\n         return (\r\n            <tr key={target._id}>\r\n               <td>{target.role.role}</td>\r\n               <td>{target.supportType}</td>\r\n               <td className='text-center'>{this.markEN(target.en)}</td>\r\n               <td className='text-center'>{target.target}</td>\r\n               <td className='text-center'>{this.addActionButton(target)}</td>\r\n            </tr>\r\n         );\r\n      });\r\n   }\r\n\r\n   markEN(en) {\r\n      if (en) {\r\n         return <i className='fas fa-check text-success' />;\r\n      }\r\n      return <i className='fas fa-times text-danger' />;\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         theme,\r\n         isLoading,\r\n         message,\r\n         modal,\r\n         id,\r\n         role,\r\n         supportType,\r\n         en,\r\n         target,\r\n         contactTargets\r\n      } = this.state;\r\n\r\n      if (isLoading) {\r\n         return (\r\n            <div className='text-center'>\r\n               <Spinner color='primary' />\r\n            </div>\r\n         );\r\n      }\r\n\r\n      if (contactTargets.lenght === 0) {\r\n         return (\r\n            <div className='text-center'>\r\n               There are no contact targets in database\r\n            </div>\r\n         );\r\n      }\r\n\r\n      if (message) {\r\n         return <div className='text-center'>No data found...</div>;\r\n      }\r\n\r\n      return (\r\n         <div>\r\n            <p>\r\n               All Available targets\r\n               <Button\r\n                  color='primary'\r\n                  size='sm'\r\n                  ref='getcontactTargetsData'\r\n                  id='getcontactTargetsData'\r\n                  className='float-right'\r\n                  onClick={this.getcontactTargets}\r\n               >\r\n                  <span className='fas fa-sync-alt' />\r\n               </Button>\r\n            </p>\r\n            <hr />\r\n            <Table\r\n               responsive\r\n               borderless\r\n               striped\r\n               hover\r\n               size='sm'\r\n               className={this.setTheme()}\r\n            >\r\n               <thead>{this.renderTableHeaders()}</thead>\r\n               <tbody>{this.renderTableData()}</tbody>\r\n            </Table>\r\n            <Modal isOpen={modal} toggle className=''>\r\n               <Card className={this.setCardTheme()}>\r\n                  <CardHeader>\r\n                     <span class='fas fa-chart-line header-icon' />\r\n                     Edit target\r\n                     <span\r\n                        className='far fa-window-restore float-right header-icon text-secondary'\r\n                        onClick={this.closeModal}\r\n                     />\r\n                  </CardHeader>\r\n\r\n                  <CardBody className={this.setTheme()}>\r\n                     <UpdateContactTargetForm\r\n                        theme={theme}\r\n                        id={id}\r\n                        role={role}\r\n                        supportType={supportType}\r\n                        en={en}\r\n                        target={target}\r\n                     />\r\n                  </CardBody>\r\n               </Card>\r\n            </Modal>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\n/*\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}