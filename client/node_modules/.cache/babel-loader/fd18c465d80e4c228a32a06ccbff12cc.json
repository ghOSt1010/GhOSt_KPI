{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport { Classes } from \"@blueprintjs/core\"; // This class expects a single, non-string child.\n\nvar LoadableContent =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(LoadableContent, _super);\n\n  function LoadableContent(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.style = _this.calculateStyle(props.variableLength);\n    return _this;\n  }\n\n  LoadableContent.prototype.componentDidUpdate = function (prevProps) {\n    if (!prevProps.loading && this.props.loading || prevProps.variableLength !== this.props.variableLength) {\n      this.style = this.calculateStyle(this.props.variableLength);\n    }\n  };\n\n  LoadableContent.prototype.render = function () {\n    if (this.props.loading) {\n      return React.createElement(\"div\", {\n        className: Classes.SKELETON,\n        style: this.style\n      });\n    }\n\n    return React.Children.only(this.props.children);\n  };\n\n  LoadableContent.prototype.calculateStyle = function (variableLength) {\n    var skeletonLength = variableLength ? 75 - Math.floor(Math.random() * 11) * 5 : 100;\n    return {\n      width: skeletonLength + \"%\"\n    };\n  };\n\n  return LoadableContent;\n}(React.PureComponent);\n\nexport { LoadableContent };","map":null,"metadata":{},"sourceType":"module"}