{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Login/Login.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Row, Col, CardBody, Form } from 'reactstrap';\nimport { Card, Button, InputGroup, Classes } from '@blueprintjs/core';\nimport Client from '../../Modules/Client/Client';\nimport MainContainer from '../../components/MainContainer/MainContainer';\nimport UIManager from '../../Modules/UIManager/UIManager';\nimport './Login.css';\nvar AuthService = Client.Services.AuthService;\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: UIManager.getTheme(),\n      alertVisible: true,\n      isLoading: false,\n      authenticated: false,\n      message: '',\n      email: '',\n      password: ''\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, email, password, result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.setLoading(true);\n\n                _this$state = _this.state, email = _this$state.email, password = _this$state.password;\n                _context.prev = 3;\n                _context.next = 6;\n                return AuthService.login(email, password);\n\n              case 6:\n                result = _context.sent;\n                //Client.login(email, password);\n                console.log(result);\n\n                if (result) {\n                  _this.setState({\n                    message: 'ok',\n                    authenticated: true\n                  });\n                }\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](3);\n\n                _this.setState({\n                  message: 'Login failed'\n                });\n\n              case 14:\n                _context.prev = 14;\n\n                _this.setLoading(false);\n\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 11, 14, 17]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.name] = e.target.value;\n\n      _this.setState(state);\n\n      _this.resetMessage();\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkLogin();\n    }\n  }, {\n    key: \"checkLogin\",\n    value: function checkLogin() {\n      if (Client.isAuthenticated()) {\n        this.setState({\n          authenticated: true\n        });\n      }\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading(loading) {\n      this.setState({\n        loading: loading\n      });\n    }\n  }, {\n    key: \"resetMessage\",\n    value: function resetMessage() {\n      this.setState({\n        message: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          authenticated = _this$state2.authenticated,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          message = _this$state2.message,\n          theme = _this$state2.theme;\n\n      if (authenticated) {\n        return React.createElement(Redirect, {\n          to: \"/Home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(MainContainer, {\n        noAppBar: true,\n        displayBgImage: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xl: {\n          size: 4,\n          offset: 4\n        },\n        lg: {\n          size: 4,\n          offset: 4\n        },\n        md: {\n          size: 4,\n          offset: 4\n        },\n        sm: \"12\",\n        xs: \"12\",\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(theme, \" bg-login-form login-card \").concat(message ? 'shake' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Card, {\n        color: theme,\n        className: \"bg-transparent mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-dice-d20 float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Sign in\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        leftIcon: \"user\",\n        className: \"login-input\",\n        intent: message ? 'danger' : '',\n        onChange: function onChange(e) {\n          _this2.setState({\n            email: e.target.value\n          });\n\n          _this2.resetMessage();\n        },\n        placeholder: \"Username...\",\n        type: \"email\",\n        value: email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        leftIcon: \"lock\",\n        className: \"login-input\",\n        intent: message ? 'danger' : '',\n        onChange: function onChange(e) {\n          _this2.setState({\n            password: e.target.value\n          });\n\n          _this2.resetMessage();\n        },\n        placeholder: \"Password...\",\n        type: \"password\",\n        value: password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: Classes.ALIGN_RIGHT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        fill: true,\n        minimal: true,\n        text: \"Login\",\n        alignText: \"right\",\n        rightIcon: \"arrow-right\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })))))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/Login/Login.jsx"],"names":["React","Component","Redirect","Row","Col","CardBody","Form","Card","Button","InputGroup","Classes","Client","MainContainer","UIManager","AuthService","Services","Login","state","theme","getTheme","alertVisible","isLoading","authenticated","message","email","password","onSubmit","e","preventDefault","setLoading","login","result","console","log","setState","onChange","target","name","value","resetMessage","checkLogin","isAuthenticated","loading","size","offset","ALIGN_RIGHT"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Row, Col, CardBody, Form } from 'reactstrap';\nimport { Card, Button, InputGroup, Classes } from '@blueprintjs/core';\n\nimport Client from '../../Modules/Client/Client';\nimport MainContainer from '../../components/MainContainer/MainContainer';\nimport UIManager from '../../Modules/UIManager/UIManager';\n\nimport './Login.css';\n\nconst AuthService = Client.Services.AuthService;\n\nexport default class Login extends Component {\n   state = {\n      theme: UIManager.getTheme(),\n      alertVisible: true,\n      isLoading: false,\n      authenticated: false,\n      message: '',\n      email: '',\n      password: ''\n   };\n\n   componentDidMount() {\n      this.checkLogin();\n   }\n   checkLogin() {\n      if (Client.isAuthenticated()) {\n         this.setState({\n            authenticated: true\n         });\n      }\n   }\n\n   onSubmit = async e => {\n      e.preventDefault();\n      this.setLoading(true);\n      const { email, password } = this.state;\n\n      try {\n         var result = await AuthService.login(email, password); //Client.login(email, password);\n         console.log(result);\n         if (result) {\n            this.setState({\n               message: 'ok',\n               authenticated: true\n            });\n         }\n      } catch (err) {\n         this.setState({\n            message: 'Login failed'\n         });\n      } finally {\n         this.setLoading(false);\n      }\n   };\n\n   setLoading(loading) {\n      this.setState({ loading: loading });\n   }\n\n   onChange = e => {\n      const state = this.state;\n      state[e.target.name] = e.target.value;\n      this.setState(state);\n      this.resetMessage();\n   };\n\n   resetMessage() {\n      this.setState({ message: '' });\n   }\n\n   render() {\n      const { authenticated, email, password, message, theme } = this.state;\n\n      if (authenticated) {\n         return <Redirect to='/Home' />;\n      }\n\n      return (\n         <MainContainer noAppBar displayBgImage={true}>\n            <Row>\n               <Col\n                  xl={{ size: 4, offset: 4 }}\n                  lg={{ size: 4, offset: 4 }}\n                  md={{ size: 4, offset: 4 }}\n                  sm='12'\n                  xs='12'\n                  className='mt-4'\n               >\n                  <div\n                     className={`${theme} bg-login-form login-card ${\n                        message ? 'shake' : ''\n                     }`}\n                  >\n                     <Card color={theme} className='bg-transparent mt-5'>\n                        <CardBody className=''>\n                           <span className='fas fa-dice-d20 float-right' />\n                           <h3 className='text-center'>Sign in</h3>\n                           <hr />\n                           <Form>\n                              <div className='mb-2'>\n                                 <InputGroup\n                                    leftIcon='user'\n                                    className='login-input'\n                                    intent={message ? 'danger' : ''}\n                                    onChange={e => {\n                                       this.setState({\n                                          email: e.target.value\n                                       });\n                                       this.resetMessage();\n                                    }}\n                                    placeholder='Username...'\n                                    type='email'\n                                    value={email}\n                                 />\n                              </div>\n                              <div className='mb-2'>\n                                 <InputGroup\n                                    leftIcon='lock'\n                                    className='login-input'\n                                    intent={message ? 'danger' : ''}\n                                    onChange={e => {\n                                       this.setState({\n                                          password: e.target.value\n                                       });\n                                       this.resetMessage();\n                                    }}\n                                    placeholder='Password...'\n                                    type='password'\n                                    value={password}\n                                 />\n                              </div>\n                              <div className={Classes.ALIGN_RIGHT}>\n                                 <Button\n                                    type='submit'\n                                    size='sm'\n                                    fill\n                                    minimal\n                                    text='Login'\n                                    alignText='right'\n                                    rightIcon='arrow-right'\n                                    onClick={this.onSubmit}\n                                 />\n                              </div>\n                           </Form>\n                        </CardBody>\n                     </Card>\n                  </div>\n               </Col>\n            </Row>\n         </MainContainer>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}