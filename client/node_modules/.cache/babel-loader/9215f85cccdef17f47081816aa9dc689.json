{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/AdminPanel/components/Users/UsersTable.jsx\";\nimport React, { Component } from 'react';\nimport { HTMLTable, Button, NonIdealState, H5, Spinner, ContextMenu, Dialog, Icon, Card } from '@blueprintjs/core';\nimport Client from '../../../../Modules/Client/Client';\nimport UserForm from './UserForm';\nimport CardHeader from '../../../../components/Card/CardHeader';\nimport CardBody from '../../../../components/Card/CardBody';\nimport TableContextMenu from './TableContextMenu';\n\nvar UsersTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UsersTable, _Component);\n\n  function UsersTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UsersTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UsersTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      errorMsg: '',\n      showEditCard: false,\n      userForEdit: {}\n    };\n    return _this;\n  }\n\n  _createClass(UsersTable, [{\n    key: \"isEligable\",\n    value: function isEligable() {\n      var role = Client.User.getRole();\n      if (role === 'root') return false;\n      if (role === 'admin') return false;\n      return true;\n    }\n  }, {\n    key: \"resetErrorMsg\",\n    value: function resetErrorMsg() {\n      this.setState({\n        errorMsg: ''\n      });\n    }\n  }, {\n    key: \"deleteUser\",\n    value: function () {\n      var _deleteUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.resetErrorMsg();\n                _context.next = 4;\n                return Client.Services.UsersService.deleteUser(id);\n\n              case 4:\n                result = _context.sent;\n\n                if (result.status === 200) {\n                  Client.Notifications.success('User removed successfully');\n                }\n\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                this.setState({\n                  errorMsg: _context.t0.response.status\n                });\n                Client.Notifications.alert('Error, cannot delete user');\n\n              case 12:\n                _context.prev = 12;\n                this.props.onRefresh();\n                return _context.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8, 12, 15]]);\n      }));\n\n      function deleteUser(_x) {\n        return _deleteUser.apply(this, arguments);\n      }\n\n      return deleteUser;\n    }()\n  }, {\n    key: \"editUser\",\n    value: function editUser(user) {\n      this.setState({\n        showEditCard: true,\n        userForEdit: user\n      });\n    }\n  }, {\n    key: \"closeEditUser\",\n    value: function closeEditUser() {\n      this.setState({\n        showEditCard: false\n      });\n    }\n  }, {\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      return React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        style: {\n          paddingLeft: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"User Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Role\")));\n    }\n  }, {\n    key: \"renderTableBody\",\n    value: function renderTableBody() {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.renderTableRows());\n    }\n  }, {\n    key: \"renderTableRows\",\n    value: function renderTableRows() {\n      var _this2 = this;\n\n      var usersData = this.props.usersData;\n      return usersData.map(function (user) {\n        return React.createElement(\"tr\", {\n          key: user._id,\n          onClick: function onClick(e) {\n            return _this2.handleSelection(e, user);\n          },\n          onContextMenu: function onContextMenu(e) {\n            return _this2.handeClick(e, user);\n          },\n          className: \"pl-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            paddingLeft: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, user.username), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, user.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, user.usertype));\n      });\n    }\n  }, {\n    key: \"handeClick\",\n    value: function handeClick(e, user) {\n      e.preventDefault();\n      ContextMenu.show(this.renderContextMenu(e, user), {\n        left: e.clientX,\n        top: e.clientY\n      });\n    }\n  }, {\n    key: \"handleSelection\",\n    value: function handleSelection(e, user) {\n      e.preventDefault();\n      document.getElementById(user._id).classList.add('bp3-intent-primary');\n    }\n  }, {\n    key: \"renderContextMenu\",\n    value: function renderContextMenu(e, user) {\n      var _this3 = this;\n\n      return React.createElement(TableContextMenu, {\n        user: user,\n        isEligable: this.isEligable(),\n        onEdit: function onEdit() {\n          return _this3.editUser(user);\n        },\n        onRemove: function onRemove() {\n          return _this3.deleteUser(user._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this4 = this;\n\n      if (this.state.errorMsg) {\n        return React.createElement(NonIdealState, {\n          icon: \"issue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(H5, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Something went wrong\")), React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Cannot load users table\"), React.createElement(Button, {\n          icon: \"refresh\",\n          minimal: true,\n          onClick: function onClick() {\n            _this4.props.onRefresh();\n\n            _this4.setState({\n              errorMsg: ''\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"overflow-x-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(HTMLTable, {\n        fill: \"true\",\n        striped: true,\n        interactive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.renderTableHeader(), this.renderTableBody()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var userForEdit = this.state.userForEdit;\n      var isLoading = this.props.isLoading;\n\n      if (isLoading) {\n        return React.createElement(Spinner, {\n          intent: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, this.renderContent(), React.createElement(Dialog, {\n        isOpen: this.state.showEditCard,\n        onClose: function onClose() {\n          return _this5.closeEditUser();\n        },\n        canEscapeKeyClose: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"user\",\n        className: \"header-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), \"Edit User\", React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"cross\",\n        onClick: function onClick() {\n          return _this5.closeEditUser();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(UserForm, {\n        username: userForEdit.username,\n        email: userForEdit.email,\n        role: userForEdit.role,\n        buttonCaption: \"Update\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return UsersTable;\n}(Component);\n\nexport { UsersTable as default };\nUsersTable.defaultProps = {\n  usersData: [],\n  onRefresh: function onRefresh() {\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_KPI/client/src/views/AdminPanel/components/Users/UsersTable.jsx"],"names":["React","Component","HTMLTable","Button","NonIdealState","H5","Spinner","ContextMenu","Dialog","Icon","Card","Client","UserForm","CardHeader","CardBody","TableContextMenu","UsersTable","state","errorMsg","showEditCard","userForEdit","role","User","getRole","setState","id","resetErrorMsg","Services","UsersService","deleteUser","result","status","Notifications","success","response","alert","props","onRefresh","user","paddingLeft","renderTableRows","usersData","map","_id","e","handleSelection","handeClick","username","email","usertype","preventDefault","show","renderContextMenu","left","clientX","top","clientY","document","getElementById","classList","add","isEligable","editUser","renderTableHeader","renderTableBody","isLoading","renderContent","closeEditUser","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACGC,SADH,EAEGC,MAFH,EAGGC,aAHH,EAIGC,EAJH,EAKGC,OALH,EAMGC,WANH,EAOGC,MAPH,EAQGC,IARH,EASGC,IATH,QAUO,mBAVP;AAWA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;IAEqBC,U;;;;;;;;;;;;;;;;;UAClBC,K,GAAQ;AACLC,MAAAA,QAAQ,EAAE,EADL;AAELC,MAAAA,YAAY,EAAE,KAFT;AAGLC,MAAAA,WAAW,EAAE;AAHR,K;;;;;;iCAKK;AACV,UAAIC,IAAI,GAAGV,MAAM,CAACW,IAAP,CAAYC,OAAZ,EAAX;AACA,UAAIF,IAAI,KAAK,MAAb,EAAqB,OAAO,KAAP;AACrB,UAAIA,IAAI,KAAK,OAAb,EAAsB,OAAO,KAAP;AACtB,aAAO,IAAP;AACF;;;oCACe;AACb,WAAKG,QAAL,CAAc;AACXN,QAAAA,QAAQ,EAAE;AADC,OAAd;AAGF;;;;;;gDACgBO,E;;;;;;;AAGX,qBAAKC,aAAL;;uBACef,MAAM,CAACgB,QAAP,CAAgBC,YAAhB,CAA6BC,UAA7B,CAAwCJ,EAAxC,C;;;AAAfK,gBAAAA,M;;AACA,oBAAIA,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACxBpB,kBAAAA,MAAM,CAACqB,aAAP,CAAqBC,OAArB,CAA6B,2BAA7B;AACF;;;;;;;;AAED,qBAAKT,QAAL,CAAc;AAAEN,kBAAAA,QAAQ,EAAE,YAAIgB,QAAJ,CAAaH;AAAzB,iBAAd;AACApB,gBAAAA,MAAM,CAACqB,aAAP,CAAqBG,KAArB,CAA2B,2BAA3B;;;;AAEA,qBAAKC,KAAL,CAAWC,SAAX;;;;;;;;;;;;;;;;;;;6BAGGC,I,EAAM;AACZ,WAAKd,QAAL,CAAc;AAAEL,QAAAA,YAAY,EAAE,IAAhB;AAAsBC,QAAAA,WAAW,EAAEkB;AAAnC,OAAd;AACF;;;oCACe;AACb,WAAKd,QAAL,CAAc;AAAEL,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACF;;;wCACmB;AACjB,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AACG,QAAA,KAAK,EAAE;AACJoB,UAAAA,WAAW,EAAE;AADT,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADH,EAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARH,EASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATH,CADH,CADH;AAeF;;;sCACiB;AACf,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKC,eAAL,EAAR,CAAP;AACF;;;sCACiB;AAAA;;AAAA,UACPC,SADO,GACO,KAAKL,KADZ,CACPK,SADO;AAEf,aAAOA,SAAS,CAACC,GAAV,CAAc,UAAAJ,IAAI,EAAI;AAC1B,eACG;AACG,UAAA,GAAG,EAAEA,IAAI,CAACK,GADb;AAEG,UAAA,OAAO,EAAE,iBAAAC,CAAC;AAAA,mBAAI,MAAI,CAACC,eAAL,CAAqBD,CAArB,EAAwBN,IAAxB,CAAJ;AAAA,WAFb;AAGG,UAAA,aAAa,EAAE,uBAAAM,CAAC;AAAA,mBAAI,MAAI,CAACE,UAAL,CAAgBF,CAAhB,EAAmBN,IAAnB,CAAJ;AAAA,WAHnB;AAIG,UAAA,SAAS,EAAC,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMG;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,WAAW,EAAE;AAAf,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqCD,IAAI,CAACS,QAA1C,CANH,EAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKT,IAAI,CAACU,KAAV,CAPH,EAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKV,IAAI,CAACW,QAAV,CARH,CADH;AAYF,OAbM,CAAP;AAcF;;;+BACUL,C,EAAGN,I,EAAM;AACjBM,MAAAA,CAAC,CAACM,cAAF;AACA3C,MAAAA,WAAW,CAAC4C,IAAZ,CAAiB,KAAKC,iBAAL,CAAuBR,CAAvB,EAA0BN,IAA1B,CAAjB,EAAkD;AAC/Ce,QAAAA,IAAI,EAAET,CAAC,CAACU,OADuC;AAE/CC,QAAAA,GAAG,EAAEX,CAAC,CAACY;AAFwC,OAAlD;AAIF;;;oCAEeZ,C,EAAGN,I,EAAM;AACtBM,MAAAA,CAAC,CAACM,cAAF;AACAO,MAAAA,QAAQ,CAACC,cAAT,CAAwBpB,IAAI,CAACK,GAA7B,EAAkCgB,SAAlC,CAA4CC,GAA5C,CAAgD,oBAAhD;AACF;;;sCAEiBhB,C,EAAGN,I,EAAM;AAAA;;AACxB,aACG,oBAAC,gBAAD;AACG,QAAA,IAAI,EAAEA,IADT;AAEG,QAAA,UAAU,EAAE,KAAKuB,UAAL,EAFf;AAGG,QAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAACC,QAAL,CAAcxB,IAAd,CAAN;AAAA,SAHX;AAIG,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACT,UAAL,CAAgBS,IAAI,CAACK,GAArB,CAAN;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AAQF;;;oCACe;AAAA;;AACb,UAAI,KAAK1B,KAAL,CAAWC,QAAf,EAAyB;AACtB,eACG,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADH,CADH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAJH,EAKG,oBAAC,MAAD;AACG,UAAA,IAAI,EAAC,SADR;AAEG,UAAA,OAAO,MAFV;AAGG,UAAA,OAAO,EAAE,mBAAM;AACZ,YAAA,MAAI,CAACkB,KAAL,CAAWC,SAAX;;AACA,YAAA,MAAI,CAACb,QAAL,CAAc;AACXN,cAAAA,QAAQ,EAAE;AADC,aAAd;AAGF,WARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALH,CADH;AAkBF;;AACD,aACG;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAuB,QAAA,OAAO,MAA9B;AAA+B,QAAA,WAAW,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAK6C,iBAAL,EADJ,EAEI,KAAKC,eAAL,EAFJ,CADH,CADH;AAQF;;;6BACQ;AAAA;;AAAA,UACE5C,WADF,GACkB,KAAKH,KADvB,CACEG,WADF;AAAA,UAEE6C,SAFF,GAEgB,KAAK7B,KAFrB,CAEE6B,SAFF;;AAIN,UAAIA,SAAJ,EAAe;AACZ,eAAO,oBAAC,OAAD;AAAS,UAAA,MAAM,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACF;;AACD,aACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKC,aAAL,EADJ,EAEG,oBAAC,MAAD;AACG,QAAA,MAAM,EAAE,KAAKjD,KAAL,CAAWE,YADtB;AAEG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACgD,aAAL,EAAN;AAAA,SAFZ;AAGG,QAAA,iBAAiB,EAAE,IAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,eAGG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AACG,QAAA,IAAI,EAAC,OADR;AAEG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,aAAL,EAAN;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CAHH,CADH,EAWG,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,QAAD;AACG,QAAA,QAAQ,EAAE/C,WAAW,CAAC2B,QADzB;AAEG,QAAA,KAAK,EAAE3B,WAAW,CAAC4B,KAFtB;AAGG,QAAA,IAAI,EAAE5B,WAAW,CAACC,IAHrB;AAIG,QAAA,aAAa,EAAC,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CAXH,CALH,CAFH,CADH;AA+BF;;;;EAtKoCpB,S;;SAAnBe,U;AAwKrBA,UAAU,CAACoD,YAAX,GAA0B;AACvB3B,EAAAA,SAAS,EAAE,EADY;AAEvBJ,EAAAA,SAAS,EAAE,qBAAW;AACnB;AACF;AAJsB,CAA1B","sourcesContent":["import React, { Component } from 'react';\nimport {\n   HTMLTable,\n   Button,\n   NonIdealState,\n   H5,\n   Spinner,\n   ContextMenu,\n   Dialog,\n   Icon,\n   Card\n} from '@blueprintjs/core';\nimport Client from '../../../../Modules/Client/Client';\nimport UserForm from './UserForm';\nimport CardHeader from '../../../../components/Card/CardHeader';\nimport CardBody from '../../../../components/Card/CardBody';\nimport TableContextMenu from './TableContextMenu';\n\nexport default class UsersTable extends Component {\n   state = {\n      errorMsg: '',\n      showEditCard: false,\n      userForEdit: {}\n   };\n   isEligable() {\n      let role = Client.User.getRole();\n      if (role === 'root') return false;\n      if (role === 'admin') return false;\n      return true;\n   }\n   resetErrorMsg() {\n      this.setState({\n         errorMsg: ''\n      });\n   }\n   async deleteUser(id) {\n      var result;\n      try {\n         this.resetErrorMsg();\n         result = await Client.Services.UsersService.deleteUser(id);\n         if (result.status === 200) {\n            Client.Notifications.success('User removed successfully');\n         }\n      } catch (err) {\n         this.setState({ errorMsg: err.response.status });\n         Client.Notifications.alert('Error, cannot delete user');\n      } finally {\n         this.props.onRefresh();\n      }\n   }\n   editUser(user) {\n      this.setState({ showEditCard: true, userForEdit: user });\n   }\n   closeEditUser() {\n      this.setState({ showEditCard: false });\n   }\n   renderTableHeader() {\n      return (\n         <thead>\n            <tr>\n               <th\n                  style={{\n                     paddingLeft: '20px'\n                  }}\n               >\n                  User Name\n               </th>\n               <th>Email</th>\n               <th>Role</th>\n            </tr>\n         </thead>\n      );\n   }\n   renderTableBody() {\n      return <tbody>{this.renderTableRows()}</tbody>;\n   }\n   renderTableRows() {\n      const { usersData } = this.props;\n      return usersData.map(user => {\n         return (\n            <tr\n               key={user._id}\n               onClick={e => this.handleSelection(e, user)}\n               onContextMenu={e => this.handeClick(e, user)}\n               className='pl-2'\n            >\n               <td style={{ paddingLeft: '20px' }}>{user.username}</td>\n               <td>{user.email}</td>\n               <td>{user.usertype}</td>\n            </tr>\n         );\n      });\n   }\n   handeClick(e, user) {\n      e.preventDefault();\n      ContextMenu.show(this.renderContextMenu(e, user), {\n         left: e.clientX,\n         top: e.clientY\n      });\n   }\n\n   handleSelection(e, user) {\n      e.preventDefault();\n      document.getElementById(user._id).classList.add('bp3-intent-primary');\n   }\n\n   renderContextMenu(e, user) {\n      return (\n         <TableContextMenu\n            user={user}\n            isEligable={this.isEligable()}\n            onEdit={() => this.editUser(user)}\n            onRemove={() => this.deleteUser(user._id)}\n         />\n      );\n   }\n   renderContent() {\n      if (this.state.errorMsg) {\n         return (\n            <NonIdealState icon='issue'>\n               <H5>\n                  <strong>Something went wrong</strong>\n               </H5>\n               <i>Cannot load users table</i>\n               <Button\n                  icon='refresh'\n                  minimal\n                  onClick={() => {\n                     this.props.onRefresh();\n                     this.setState({\n                        errorMsg: ''\n                     });\n                  }}\n               ></Button>\n            </NonIdealState>\n         );\n      }\n      return (\n         <div className='overflow-x-scroll'>\n            <HTMLTable fill='true' striped interactive>\n               {this.renderTableHeader()}\n               {this.renderTableBody()}\n            </HTMLTable>\n         </div>\n      );\n   }\n   render() {\n      const { userForEdit } = this.state;\n      const { isLoading } = this.props;\n\n      if (isLoading) {\n         return <Spinner intent='primary'></Spinner>;\n      }\n      return (\n         <Card>\n            {this.renderContent()}\n            <Dialog\n               isOpen={this.state.showEditCard}\n               onClose={() => this.closeEditUser()}\n               canEscapeKeyClose={true}\n            >\n               <Card>\n                  <CardHeader>\n                     <Icon icon='user' className='header-icon' />\n                     Edit User\n                     <div className='float-right'>\n                        <Icon\n                           icon='cross'\n                           onClick={() => this.closeEditUser()}\n                        />\n                     </div>\n                  </CardHeader>\n                  <CardBody className='card-body'>\n                     <UserForm\n                        username={userForEdit.username}\n                        email={userForEdit.email}\n                        role={userForEdit.role}\n                        buttonCaption='Update'\n                     />\n                  </CardBody>\n               </Card>\n            </Dialog>\n         </Card>\n      );\n   }\n}\nUsersTable.defaultProps = {\n   usersData: [],\n   onRefresh: function() {\n      return;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}