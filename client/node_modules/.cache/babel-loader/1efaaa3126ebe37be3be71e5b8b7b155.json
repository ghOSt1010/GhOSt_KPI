{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/DataManagerCard.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, CardBody } from 'reactstrap';\nimport { Card, Icon, Button, ButtonGroup, Dialog, Overlay, H5 } from '@blueprintjs/core';\nimport StdCard from './StdCard';\nimport CardHeader from './CardHeader';\n\nvar DataManagerCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataManagerCard, _Component);\n\n  function DataManagerCard(props) {\n    var _this;\n\n    _classCallCheck(this, DataManagerCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataManagerCard).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      modal: false,\n      tableData: _this.props.data\n    };\n    return _this;\n  }\n\n  _createClass(DataManagerCard, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var modal = this.state.modal;\n      return React.createElement(StdCard, {\n        icon: this.props.icon,\n        headerText: this.props.headerText,\n        size: this.props.cardSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.cardCaption, React.createElement(ButtonGroup, {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"add\",\n        minimal: true,\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.addButtonText))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), this.props.table, this.props.children, React.createElement(Dialog, {\n        isOpen: this.state.showEditCard,\n        onClose: function onClose() {\n          return _this2.closeEditUser();\n        },\n        canEscapeKeyClose: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(H5, {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"edit\",\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), this.props.modalHeaderText, React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Button, {\n        minimal: true,\n        small: true,\n        icon: \"small-cross\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }))), this.props.addForm)));\n    }\n  }]);\n\n  return DataManagerCard;\n}(Component);\n\nexport { DataManagerCard as default };\nDataManagerCard.defaultProps = {\n  cardSize: 'xl',\n  icon: 'square',\n  headerText: 'headerText',\n  cardCaption: 'cardCaption',\n  addButtonText: 'addButtonText',\n  id: 'id',\n  modalHeaderText: 'modalHeaderText',\n  addForm: '<div></div>',\n  table: 'some data'\n};","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/components/Card/DataManagerCard.jsx"],"names":["React","Component","Modal","CardBody","Card","Icon","Button","ButtonGroup","Dialog","Overlay","H5","StdCard","CardHeader","DataManagerCard","props","toggle","bind","state","modal","tableData","data","setState","prevState","icon","headerText","cardSize","cardCaption","addButtonText","table","children","showEditCard","closeEditUser","modalHeaderText","addForm","defaultProps","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, CardBody } from 'reactstrap';\nimport {\n   Card,\n   Icon,\n   Button,\n   ButtonGroup,\n   Dialog,\n   Overlay,\n   H5\n} from '@blueprintjs/core';\nimport StdCard from './StdCard';\nimport CardHeader from './CardHeader';\n\nexport default class DataManagerCard extends Component {\n   constructor(props) {\n      super(props);\n      this.toggle = this.toggle.bind(this);\n      this.state = {\n         modal: false,\n         tableData: this.props.data\n      };\n   }\n   toggle() {\n      this.setState(prevState => ({\n         modal: !prevState.modal\n      }));\n   }\n   render() {\n      const { modal } = this.state;\n\n      return (\n         <StdCard\n            icon={this.props.icon}\n            headerText={this.props.headerText}\n            size={this.props.cardSize}\n         >\n            <h5>\n               {this.props.cardCaption}\n               <ButtonGroup className='float-right'>\n                  <Button icon='add' minimal onClick={this.toggle}>\n                     {this.props.addButtonText}\n                  </Button>\n               </ButtonGroup>\n            </h5>\n            <hr />\n            {this.props.table}\n            {this.props.children}\n\n            <Dialog\n               isOpen={this.state.showEditCard}\n               onClose={() => this.closeEditUser()}\n               canEscapeKeyClose={true}\n            >\n               <div className='p-4'>\n                  <H5 className='mb-4'>\n                     <Icon icon='edit' className='mr-2'></Icon>\n                     {this.props.modalHeaderText}\n                     <div className='float-right'>\n                        <Button\n                           minimal\n                           small\n                           icon='small-cross'\n                           onClick={this.toggle}\n                        ></Button>\n                     </div>\n                  </H5>\n                  {this.props.addForm}\n               </div>\n            </Dialog>\n         </StdCard>\n      );\n   }\n}\n\nDataManagerCard.defaultProps = {\n   cardSize: 'xl',\n   icon: 'square',\n   headerText: 'headerText',\n   cardCaption: 'cardCaption',\n   addButtonText: 'addButtonText',\n   id: 'id',\n   modalHeaderText: 'modalHeaderText',\n   addForm: '<div></div>',\n   table: 'some data'\n};\n"]},"metadata":{},"sourceType":"module"}