{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/GhOSt_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/Projects/components/EmployeeCard/EmployeeCard.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, CardBody } from 'reactstrap';\nimport { Card, Icon, Button, ButtonGroup } from '@blueprintjs/core';\nimport DataManagerCard from '../../../../components/Card/DataManagerCard';\nimport StdCard from '../../../../components/Card/StdCard';\nimport CardHeader from '../../../../components/Card/CardHeader';\nimport EmployeeForm from '../../../../components/Forms/EmployeeForms/EmployeeForm'; //import EmployeeTable from '../../../../components/Table/EmployeeTable/EmployeeTable';\n\nvar EmployeeCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EmployeeCard, _Component);\n\n  function EmployeeCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EmployeeCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EmployeeCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      sap: '',\n      name: '',\n      email: '',\n      role: '',\n      supportType: '',\n      project: '',\n      mainlanguage: '',\n      rm: ''\n    };\n    return _this;\n  }\n\n  _createClass(EmployeeCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var modal = this.state.modal;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(DataManagerCard, {\n        icon: \"user\",\n        headerText: \"Employees\",\n        cardCaption: \"All Employees\",\n        addButtonText: \"Add new employee\",\n        id: \"allEmployees\",\n        modalHeaderText: \"Add new employee\",\n        onRefresh: function onRefresh() {\n          return function () {\n            return;\n          };\n        },\n        table: React.createElement(\"table\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }),\n        addForm: React.createElement(EmployeeForm, {\n          name: name,\n          username: username,\n          password: password,\n          role: role,\n          onChange: this.onChange,\n          onClick: this.handleSubmit,\n          buttonCaption: \"Create\",\n          onClear: function onClear() {\n            return _this2.clearForm();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        isOpen: openAlert,\n        confirmButtonText: \"Clear form\",\n        onConfirm: function onConfirm() {\n          return _this2.clearForm();\n        },\n        cancelButtonText: \"Cancel\",\n        onCancel: function onCancel() {\n          return _this2.closeAlert();\n        },\n        intent: \"danger\",\n        icon: \"issue\",\n        ussePortal: React.createElement(Portal, {\n          container: document.getElementById('allUsers'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(H5, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, errorMessage), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Do you want to clear the data?\"))), React.createElement(StdCard, {\n        icon: \"user\",\n        headerText: \"Employee Manager\",\n        size: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Manage your Employees\", React.createElement(ButtonGroup, {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"add\",\n        minimal: true,\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Add new Employee\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        id: \"createNewEmployeeModal\",\n        isOpen: modal,\n        toggle: this.toggle,\n        className: \"modal-full modal-my\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"user\",\n        className: \"header-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), \"Create new Employee\", React.createElement(\"div\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"minimize\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(EmployeeForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return EmployeeCard;\n}(Component);\n\nexport { EmployeeCard as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/GhOSt_app/client/src/views/Projects/components/EmployeeCard/EmployeeCard.jsx"],"names":["React","Component","Modal","CardBody","Card","Icon","Button","ButtonGroup","DataManagerCard","StdCard","CardHeader","EmployeeForm","EmployeeCard","state","sap","name","email","role","supportType","project","mainlanguage","rm","modal","username","password","onChange","handleSubmit","clearForm","openAlert","closeAlert","document","getElementById","errorMessage","toggle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, CardBody } from 'reactstrap';\r\nimport { Card, Icon, Button, ButtonGroup } from '@blueprintjs/core';\r\nimport DataManagerCard from '../../../../components/Card/DataManagerCard';\r\nimport StdCard from '../../../../components/Card/StdCard';\r\nimport CardHeader from '../../../../components/Card/CardHeader';\r\nimport EmployeeForm from '../../../../components/Forms/EmployeeForms/EmployeeForm';\r\n//import EmployeeTable from '../../../../components/Table/EmployeeTable/EmployeeTable';\r\n\r\nexport default class EmployeeCard extends Component {\r\n   state = {\r\n      sap: '',\r\n      name: '',\r\n      email: '',\r\n      role: '',\r\n      supportType: '',\r\n      project: '',\r\n      mainlanguage: '',\r\n      rm: ''\r\n   };\r\n\r\n   render() {\r\n      const { modal } = this.state;\r\n\r\n      return (\r\n         <div>\r\n            <DataManagerCard\r\n               icon='user'\r\n               headerText='Employees'\r\n               cardCaption='All Employees'\r\n               addButtonText='Add new employee'\r\n               id='allEmployees'\r\n               modalHeaderText='Add new employee'\r\n               onRefresh={() =>\r\n                  function() {\r\n                     return;\r\n                  }\r\n               }\r\n               table={<table></table>}\r\n               addForm={\r\n                  <EmployeeForm\r\n                     name={name}\r\n                     username={username}\r\n                     password={password}\r\n                     role={role}\r\n                     onChange={this.onChange}\r\n                     onClick={this.handleSubmit}\r\n                     buttonCaption='Create'\r\n                     onClear={() => this.clearForm()}\r\n                  />\r\n               }\r\n            >\r\n               <Alert\r\n                  isOpen={openAlert}\r\n                  confirmButtonText='Clear form'\r\n                  onConfirm={() => this.clearForm()}\r\n                  cancelButtonText='Cancel'\r\n                  onCancel={() => this.closeAlert()}\r\n                  intent='danger'\r\n                  icon='issue'\r\n                  ussePortal={\r\n                     <Portal container={document.getElementById('allUsers')} />\r\n                  }\r\n               >\r\n                  <H5>{errorMessage}</H5>\r\n                  <strong>Do you want to clear the data?</strong>\r\n               </Alert>\r\n            </DataManagerCard>\r\n\r\n            <StdCard icon='user' headerText='Employee Manager' size='xl'>\r\n               <h5>\r\n                  Manage your Employees\r\n                  <ButtonGroup className='float-right'>\r\n                     <Button icon='add' minimal onClick={this.toggle}>\r\n                        Add new Employee\r\n                     </Button>\r\n                  </ButtonGroup>\r\n               </h5>\r\n               <hr />\r\n\r\n               <Modal\r\n                  id='createNewEmployeeModal'\r\n                  isOpen={modal}\r\n                  toggle={this.toggle}\r\n                  className='modal-full modal-my'\r\n               >\r\n                  <Card>\r\n                     <CardHeader>\r\n                        <Icon icon='user' className='header-icon' />\r\n                        Create new Employee\r\n                        <div className='float-right'>\r\n                           <Icon icon='minimize' onClick={this.toggle} />\r\n                        </div>\r\n                     </CardHeader>\r\n                     <CardBody className='card-body'>\r\n                        <EmployeeForm />\r\n                     </CardBody>\r\n                  </Card>\r\n               </Modal>\r\n            </StdCard>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}