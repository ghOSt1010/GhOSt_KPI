{"ast":null,"code":"import _classCallCheck from \"/Users/rafalcymbalista/Projects/scarlet_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rafalcymbalista/Projects/scarlet_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rafalcymbalista/Projects/scarlet_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rafalcymbalista/Projects/scarlet_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rafalcymbalista/Projects/scarlet_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rafalcymbalista/Projects/scarlet_app/client/src/components/Forms/SLAsForms/CreateSLAForm.jsx\";\nimport React, { Component } from 'react';\nimport { Col, Alert, Button, Form, FormGroup, FormText, Label, Input, ButtonGroup } from 'reactstrap';\nimport axios from 'axios';\nimport ProjectOptions from '../Options/ProjectOptions';\nimport SLATypeOptions from '../Options/SLATypeOptions';\n\nvar CreateSLAForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateSLAForm, _Component);\n\n  function CreateSLAForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateSLAForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateSLAForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: _this.props.theme,\n      projectName: '',\n      slaType: '',\n      SLA: '',\n      description: '',\n      target: 0,\n      logic: '>=',\n      logicArr: ['>=', '>', '=', '<', '<='],\n      message: ''\n    };\n\n    _this.onChange = function (e) {\n      var state = _this.state;\n      state[e.target.name] = e.target.value;\n\n      _this.setState(state);\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          projectName = _this$state.projectName,\n          slaType = _this$state.slaType,\n          SLA = _this$state.SLA,\n          description = _this$state.description,\n          logic = _this$state.logic,\n          target = _this$state.target;\n      var URL = '/api/sla/';\n      var data = {\n        sla: {\n          project: projectName,\n          type: slaType,\n          SLA: SLA,\n          description: description,\n          logic: logic,\n          target: target\n        }\n      };\n      axios.post(URL, data).then(function (res) {\n        _this.setState({\n          created: 'ok',\n          message: 'SLA saved successfully'\n        });\n\n        document.getElementById('getslasData').click();\n      }).catch(function (err) {\n        _this.setState({\n          created: 'error',\n          message: 'Something went wrong',\n          err: err\n        });\n      });\n    };\n\n    _this.clearForm = function () {\n      _this.setState({\n        projectName: '',\n        type: '',\n        SLA: '',\n        description: '',\n        target: 0,\n        logic: '>=',\n        message: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateSLAForm, [{\n    key: \"renderLogicOptions\",\n    value: function renderLogicOptions() {\n      return this.state.logicArr.map(function (a) {\n        return React.createElement(\"option\", {\n          key: a,\n          value: a,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, a);\n      });\n    }\n  }, {\n    key: \"setInputTheme\",\n    value: function setInputTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"setSelectTheme\",\n    value: function setSelectTheme() {\n      var theme = this.props.theme;\n\n      if (theme === 'dark') {\n        return 'bg-secondary text-white no-border';\n      }\n\n      if (theme === 'light') {\n        return '';\n      }\n    }\n  }, {\n    key: \"alertStyle\",\n    value: function alertStyle() {\n      var created = this.state.created;\n      if (created === 'ok') return 'border-success text-success';\n      if (created === 'error') return 'border-danger text-danger';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          projectName = _this$state2.projectName,\n          slaType = _this$state2.slaType,\n          SLA = _this$state2.SLA,\n          description = _this$state2.description,\n          logic = _this$state2.logic,\n          target = _this$state2.target,\n          message = _this$state2.message;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, message !== '' && React.createElement(Alert, {\n        className: \"bg-transparent border rounded-corners text-center \".concat(this.alertStyle()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, message), React.createElement(Form, {\n        className: \"mb-2\",\n        ref: \"createProjectForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"projectName\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Project Name\"), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ProjectOptions, {\n        name: \"projectName\",\n        value: projectName,\n        onChange: this.onChange,\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"slaType\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"SLA Type\"), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(SLATypeOptions, {\n        name: \"slaType\",\n        value: slaType,\n        onChange: this.onChange,\n        className: this.setInputTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"SLA\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"SLA\"), React.createElement(Col, {\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"SLA\",\n        id: \"SLA\",\n        size: \"sm\",\n        value: SLA,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Please provide SLA info\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"description\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Col, {\n        md: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"textarea\",\n        name: \"description\",\n        id: \"description\",\n        size: \"sm\",\n        value: description,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Please provide SLA description\"))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"text-right\",\n        for: \"target\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Target\"), React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"target\",\n        id: \"target\",\n        size: \"sm\",\n        value: target,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Please provide SLA Target\")), React.createElement(Label, {\n        className: \"text-right\",\n        for: \"logic\",\n        md: 3,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"SLA Logic\"), React.createElement(Col, {\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"logic\",\n        id: \"logic\",\n        size: \"sm\",\n        value: logic,\n        onChange: this.onChange,\n        placeholder: \"\",\n        className: this.setSelectTheme(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, this.renderLogicOptions()), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Please select SLA logic\"))), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        onClick: this.clearForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(Button, {\n        color: \"primary\",\n        size: \"sm\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Add\")))));\n    }\n  }]);\n\n  return CreateSLAForm;\n}(Component);\n\nexport { CreateSLAForm as default };","map":{"version":3,"sources":["/Users/rafalcymbalista/Projects/scarlet_app/client/src/components/Forms/SLAsForms/CreateSLAForm.jsx"],"names":["React","Component","Col","Alert","Button","Form","FormGroup","FormText","Label","Input","ButtonGroup","axios","ProjectOptions","SLATypeOptions","CreateSLAForm","state","theme","props","projectName","slaType","SLA","description","target","logic","logicArr","message","onChange","e","name","value","setState","onSubmit","preventDefault","URL","data","sla","project","type","post","then","res","created","document","getElementById","click","catch","err","clearForm","map","a","alertStyle","setInputTheme","setSelectTheme","renderLogicOptions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Col,\r\n   Alert,\r\n   Button,\r\n   Form,\r\n   FormGroup,\r\n   FormText,\r\n   Label,\r\n   Input,\r\n   ButtonGroup\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport ProjectOptions from '../Options/ProjectOptions';\r\nimport SLATypeOptions from '../Options/SLATypeOptions';\r\n\r\nexport default class CreateSLAForm extends Component {\r\n   state = {\r\n      theme: this.props.theme,\r\n      projectName: '',\r\n      slaType: '',\r\n      SLA: '',\r\n      description: '',\r\n      target: 0,\r\n      logic: '>=',\r\n      logicArr: ['>=', '>', '=', '<', '<='],\r\n      message: ''\r\n   };\r\n\r\n   renderLogicOptions() {\r\n      return this.state.logicArr.map(a => {\r\n         return (\r\n            <option key={a} value={a}>\r\n               {a}\r\n            </option>\r\n         );\r\n      });\r\n   }\r\n\r\n   onChange = e => {\r\n      const state = this.state;\r\n      state[e.target.name] = e.target.value;\r\n      this.setState(state);\r\n   };\r\n\r\n   onSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const {\r\n         projectName,\r\n         slaType,\r\n         SLA,\r\n         description,\r\n         logic,\r\n         target\r\n      } = this.state;\r\n\r\n      const URL = '/api/sla/';\r\n\r\n      const data = {\r\n         sla: {\r\n            project: projectName,\r\n            type: slaType,\r\n            SLA: SLA,\r\n            description: description,\r\n            logic: logic,\r\n            target: target\r\n         }\r\n      };\r\n\r\n      axios\r\n         .post(URL, data)\r\n         .then(res => {\r\n            this.setState({\r\n               created: 'ok',\r\n               message: 'SLA saved successfully'\r\n            });\r\n            document.getElementById('getslasData').click();\r\n         })\r\n         .catch(err => {\r\n            this.setState({\r\n               created: 'error',\r\n               message: 'Something went wrong',\r\n               err: err\r\n            });\r\n         });\r\n   };\r\n\r\n   clearForm = () => {\r\n      this.setState({\r\n         projectName: '',\r\n         type: '',\r\n         SLA: '',\r\n         description: '',\r\n         target: 0,\r\n         logic: '>=',\r\n         message: ''\r\n      });\r\n   };\r\n\r\n   setInputTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   setSelectTheme() {\r\n      const { theme } = this.props;\r\n      if (theme === 'dark') {\r\n         return 'bg-secondary text-white no-border';\r\n      }\r\n      if (theme === 'light') {\r\n         return '';\r\n      }\r\n   }\r\n\r\n   alertStyle() {\r\n      const { created } = this.state;\r\n      if (created === 'ok') return 'border-success text-success';\r\n      if (created === 'error') return 'border-danger text-danger';\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         projectName,\r\n         slaType,\r\n         SLA,\r\n         description,\r\n         logic,\r\n         target,\r\n         message\r\n      } = this.state;\r\n\r\n      return (\r\n         <div>\r\n            {message !== '' && (\r\n               <Alert\r\n                  className={`bg-transparent border rounded-corners text-center ${this.alertStyle()}`}\r\n               >\r\n                  {message}\r\n               </Alert>\r\n            )}\r\n            <Form className='mb-2' ref='createProjectForm'>\r\n               <FormGroup row>\r\n                  <Label\r\n                     className='text-right'\r\n                     for='projectName'\r\n                     md={3}\r\n                     size='sm'\r\n                  >\r\n                     Project Name\r\n                  </Label>\r\n                  <Col md={4}>\r\n                     <ProjectOptions\r\n                        name='projectName'\r\n                        value={projectName}\r\n                        onChange={this.onChange}\r\n                        className={this.setInputTheme()}\r\n                     />\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='slaType' md={3} size='sm'>\r\n                     SLA Type\r\n                  </Label>\r\n                  <Col md={4}>\r\n                     <SLATypeOptions\r\n                        name='slaType'\r\n                        value={slaType}\r\n                        onChange={this.onChange}\r\n                        className={this.setInputTheme()}\r\n                     />\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='SLA' md={3} size='sm'>\r\n                     SLA\r\n                  </Label>\r\n                  <Col md={5}>\r\n                     <Input\r\n                        type='text'\r\n                        name='SLA'\r\n                        id='SLA'\r\n                        size='sm'\r\n                        value={SLA}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                     <FormText>Please provide SLA info</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label\r\n                     className='text-right'\r\n                     for='description'\r\n                     md={3}\r\n                     size='sm'\r\n                  >\r\n                     Description\r\n                  </Label>\r\n                  <Col md={9}>\r\n                     <Input\r\n                        type='textarea'\r\n                        name='description'\r\n                        id='description'\r\n                        size='sm'\r\n                        value={description}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                     <FormText>Please provide SLA description</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n               <FormGroup row>\r\n                  <Label className='text-right' for='target' md={3} size='sm'>\r\n                     Target\r\n                  </Label>\r\n                  <Col md={2}>\r\n                     <Input\r\n                        type='number'\r\n                        name='target'\r\n                        id='target'\r\n                        size='sm'\r\n                        value={target}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     />\r\n                     <FormText>Please provide SLA Target</FormText>\r\n                  </Col>\r\n\r\n                  <Label className='text-right' for='logic' md={3} size='sm'>\r\n                     SLA Logic\r\n                  </Label>\r\n                  <Col md={2}>\r\n                     <Input\r\n                        type='select'\r\n                        name='logic'\r\n                        id='logic'\r\n                        size='sm'\r\n                        value={logic}\r\n                        onChange={this.onChange}\r\n                        placeholder=''\r\n                        className={this.setSelectTheme()}\r\n                     >\r\n                        {this.renderLogicOptions()}\r\n                     </Input>\r\n                     <FormText>Please select SLA logic</FormText>\r\n                  </Col>\r\n               </FormGroup>\r\n\r\n               <div className='text-right'>\r\n                  <ButtonGroup>\r\n                     <Button size='sm' onClick={this.clearForm}>\r\n                        Clear\r\n                     </Button>\r\n                     <Button color='primary' size='sm' onClick={this.onSubmit}>\r\n                        Add\r\n                     </Button>\r\n                  </ButtonGroup>\r\n               </div>\r\n            </Form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}