{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { Utils as CoreUtils } from \"@blueprintjs/core\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as Classes from \"../common/classes\";\n\nvar GuideLayer =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(GuideLayer, _super);\n\n  function GuideLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.renderVerticalGuide = function (offset, index) {\n      var _a;\n\n      var style = {\n        left: offset + \"px\"\n      };\n      var className = classNames(Classes.TABLE_OVERLAY, Classes.TABLE_VERTICAL_GUIDE, (_a = {}, _a[Classes.TABLE_VERTICAL_GUIDE + \"-flush-left\"] = offset === 0, _a));\n      return React.createElement(\"div\", {\n        className: className,\n        key: index,\n        style: style\n      });\n    };\n\n    _this.renderHorizontalGuide = function (offset, index) {\n      var _a;\n\n      var style = {\n        top: offset + \"px\"\n      };\n      var className = classNames(Classes.TABLE_OVERLAY, Classes.TABLE_HORIZONTAL_GUIDE, (_a = {}, _a[Classes.TABLE_HORIZONTAL_GUIDE + \"-flush-top\"] = offset === 0, _a));\n      return React.createElement(\"div\", {\n        className: className,\n        key: index,\n        style: style\n      });\n    };\n\n    return _this;\n  }\n\n  GuideLayer.prototype.shouldComponentUpdate = function (nextProps) {\n    if (this.props.className !== nextProps.className) {\n      return true;\n    } // shallow-comparing guide arrays leads to tons of unnecessary re-renders, so we check the\n    // array contents explicitly.\n\n\n    return !CoreUtils.arraysEqual(this.props.verticalGuides, nextProps.verticalGuides) || !CoreUtils.arraysEqual(this.props.horizontalGuides, nextProps.horizontalGuides);\n  };\n\n  GuideLayer.prototype.render = function () {\n    var _a = this.props,\n        verticalGuides = _a.verticalGuides,\n        horizontalGuides = _a.horizontalGuides,\n        className = _a.className;\n    var verticals = verticalGuides == null ? undefined : verticalGuides.map(this.renderVerticalGuide);\n    var horizontals = horizontalGuides == null ? undefined : horizontalGuides.map(this.renderHorizontalGuide);\n    return React.createElement(\"div\", {\n      className: classNames(className, Classes.TABLE_OVERLAY_LAYER)\n    }, verticals, horizontals);\n  };\n\n  return GuideLayer;\n}(React.Component);\n\nexport { GuideLayer };","map":null,"metadata":{},"sourceType":"module"}